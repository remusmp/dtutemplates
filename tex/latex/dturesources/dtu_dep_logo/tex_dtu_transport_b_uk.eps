%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: DTU Transport B UK.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: PeopleGroup%%CreationDate: 27/02/08%%BoundingBox: 0 0 144 26%%HiResBoundingBox: 0 0 143.0694 25.1231%%CropBox: 0 0 143.0694 25.1231%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 24 8%%BeginData: 4890 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45936993A1FD08FF7DF827F852FFA8F827F827F8A85252FFFFA827A8%FFFFFF5227F827F827FD2AFFA8FD2CFF689368C9FD08FF5227A8A8F827FF%FF7D277DFFFF5227FFFFA8F8A8FD04FFA852F8A8A8FFFFFFA8FFFFFFA8FF%FFFFA8FD07FFA8FFFFFFA8FD0BFFA8FFFFFFA8FF7DF8A8FD2BFF936993A7%FD08FF7D27FFFFA8F8FFFFFFF8A8FFFF5252FFFFA827A8FD05FF5227FFFF%FD0427A852002752FF7D272727F852FFFF5227F852A852F852F827A8FFA8%27F827A8FF272727527D27F827A8FD2AFF686968CAFD08FF5227FFFFA821%A8FFA8F87DFFFF5227FFFFA8F8A8FD05FF7DF8FFFFFFF852A8FFA8FF7DF8%7DFF7DF87DA8F87DA82752FFA8FFA8F852FF2752FF2727FF2727FFA8F87D%A8FF7D27A8FD2BFF936993A7FD08FF7D27FFFFFFF8FFFFFFF8A8FFFF5252%FFFFA827A8FD05FF5227FFFFFF277DFFFFA95252F8A8FF7D27FFFF2759FF%27277DFFFFFFF8A8FF7D27FFF8A8FFA8F8FFA827A8FFFFA8F8FD2CFF696F%68CAFD08FF5227FFFF7DF8A8FFA8F87DFFFF5227FFFFA8F8A8FD05FF7DF8%FFFFFFF87DFFA8F8597D217DFF7D27FFFFF87DFFFF52F827FFA8F87DFF52%27A8277DFF7D27A8A8F8A8FFFF7D27FD2CFF936993A1FD08FF7D27FFA852%27FFFFFFF8A8FFFF7D27A8FF5227A8FD05FF5227FFFFFF277DFF7D27FFFF%F8A8FF7D27FFFF2752FFFFFF7D27A8FFF8A8FF5227FF2752FF7DF8FFA827%A8FFFF7DF8FD2CFF686F68C9FD08FF5227F8F8F8A8FFFFA8277DFFFFFF27%F8F8277DFD06FF7D27FFFFFFF87DFFA8F827F82727A87D27FFFFF87DFF27%002728FFA827F827F8A8FFA8F827F87DFFA8F8A8FFFFA821F8A8FD2AFF93%6993A1FD09FFA8A8A8FD05FFA8FD05FFA8A8AFFD11FF7DFFA8A8A8FFA8FD%05FFA8A8A8FFFFFFF87DA8FD05FFA8FD09FFA8A8FD2BFF689368C9FD3CFF%A827A8FD3DFF936993A7FD3DFFA8FD3EFF686968CAFD7CFF936993A7FD09%FF7DA87DA8FD3EFF7DA8FFFFA8A87DA87DA8FD27FF696F68CAFD08FF7D7D%A8A852A8FD17FF7DA8FD16FFA87DFD0BFF7DA8FD04FFA87D52A8A8FD24FF%A87DFF936993A1FD08FFA87DFFFFFF53FFFFA87DA8FFFFA8A87DA8FFFF7D%A87DA8FFFF7DA8A8A8527DA8FF7D7D7DA87DA8FFFFFFA87DA8FFFF7DA87D%A8FFFF7D7D7DFD05FF7DA8A8FFA87D7DA8FD04FF7E7EFFFFA8A87DFF7EA8%7DFFFFA87DA87DFFFFFF7DA87DFFA8A87DA8FFFFFFA87DA8FFFFA8A87EFF%7D7D7D686F68C9FD08FF7D7DFFFFA87DA8A852A87D7DFF7D7DA852A8FFA8%A8A852FF7D7DA8FFA87D7DFF7D7DA87D52A852A8FF7D7DA852A8A8537DA8%52A8A87D7DA8A8FFFFA852A87D7DA8FF7D7DA8FD04FFA87DFFA87D7DFD05%A852FF7D7D7DA852FF597DA8A8FF7D53A87D7DFF7D52A8537DFF7D7DA8A8%7D7DA8936993A1FD08FFA87DFFFFFF7DFF7DA8FFA852FF7DFFFFFF7DFFFF%FFA87DA8A87DFFFFFF7DFFFFA8A8FF7DA8FFA87DFF7DFFFFA87DFF7DFFFF%A87DFFA8A8FD04FF7DA8FFFF7DA8FFA8A8FD05FF7EA8FFFF7DFD05FFA87D%FFA87DFFFF7DFFA87DFFFFFF7DA8FFFF7DFF7DFFFFFF59FF7DFFFFFFA8A8%FF689368C9FD08FF7D7DFFFFA87DA8FD057DA87DA8FFA87DA87D7DA852FF%A884FFFFA87DA8FF7DA8FFA87DFF7D7DA8FD047DA8A87DFFFF7DA8FFA87D%FD04FF7E7DFFFF7D7DFF7DA8FD05FFA87DFFFF7DA8FFA87D7D7D52FF7DA8%FFFF52FFFFA852A8FF7D7DFFFF7DA87DA8FFA87DA87DA8FFFFA87DFF9369%93A7FD08FFA87DFFFFA853FF7DA8FD04FF7DFFFFA87DFF7DFFFF7DA8A87D%FFFFFF52FFFF7D7DFF7DA8FFA87DFF52FD05FF7DFFFFA87DFF84A8FD04FF%7D7DFFFF7DA8FFA8A8FD05FF7DA8FFFF7DFFFFA87DFFFF7DA8A87DFFFF7D%A8FFFFFF53FF7DA8FFFF52FF7DAFFFFF7DFF7DFFFFFF84A8FF686968C9FD%08FF7D537D7E52A8FFA852A87DA8FF7D7DA852A8A87D7DA852FFA87DFFFF%FF7D7DFF7D7EFF847DFF7D7DFF7D7DA87DA8A87DFFFF7DA8FFA852A8FD04%FF527D7D7DA8FF7DA8FD05FF7E7DFFFF7DA8FFA87D7DA852FF7DA8FFFF52%FFA8A87D7DA88452A87D7DFFA852A852A8FF7DA8FFFFA852A8C3A1C9CAFD%09FF7DA87EFD04FFA87DA8A8FF7DA87DA8FFFFA8A8A8FFFFFFA8FFFFFFA8%A8A8FFA8FFA8FFFFFFA8FFFFA87DA8A8FFA8FFFFFFA8FFFFA8A8FD05FF7D%A8FD0AFFA8FFFFFFA8FFFFFFA8A8A8AFFFFFA8FD04FFAF7DA8A8FF7D7D84%A8FFFFFFA87DA8FFFFA8FD04FFA87EFD19FF7DA8FD52FF7D7DFD2AFFA8FD%53FFA8FD91FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2008-01-14T11:47+01:00</xap:CreateDate>
         <xap:ModifyDate>2008-02-27T19:14:12+01:00</xap:ModifyDate>
         <xap:MetadataDate>2008-02-27T19:14:12+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>48</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAMAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AIPyn/wDJj+X/APmLT9Rz&#xA;Ww+oe99D7U/xaf8AVfZGbJ88dir5r8hflJ5J8++b/wAyLrzJbS3FzaeYr2C2ljnkiKIZpD0U8TTt&#xA;UYVTP8tvLCa3d+d/ym823FzrWgeXry2m0ySeV0nETl2RGdCrUoqmg2rWgocVY35M/JT8vNU/OTzr&#xA;5ZvLCR9H0aK3bT4BcTKyGRELVcMGb7R6nFWY2thbaV/zk7o+l2QZLOy8rJa26MzORFCXVFZmJZqB&#xA;RucVTP8AMsn/AJXx+V2//Vy/GAYq9S1/QtN1/RbzRtUjMun30ZhuY1ZkLIeoDKQw+jAr5p1n8lPy&#xA;8tv+cgNC8nQ2Ei6BfaO97c25uJizTK1yAwkLcx/crsDhVnWtefrv8obvRfJGmeSpLvRLySaHy9Lb&#xA;6j6087FxJIvovCzqfVuQPifp0O1MVZTf+fPzMg8vaVqFt+Xkt1ql604v9KGpQIbRYmAiLSmOj+sp&#xA;5ABfhpvgVS8l/mzqvmV/MGkSeWn0vzjoCK8mhXN0pjlEgrHS6WOi12/3XTcdcVY1Yfn7561HUNU0&#xA;nTvy2ubzVtGna31KGHUY2hiK16z+hxLkqaKBuO+FU9t/z50SX8pbj8wm06dFtJPq0+lch6i3XqLG&#xA;I/UIA41kU8uPTtXbAqv5Q/Mb8xteuLY3fkBtN0y9tmuLXVP0pb3EJrEZIQ4SMOqykBagEiteOKsd&#xA;g/PvzxceZNT8r2/5dTXXmDSyn1i2t9SikhVHHLlJOYFRNmXj1rXtTCrJfK352aFq/kfWfNGo2k2k&#xA;SeXXlh1rTJCJJYpohtGjUj5l2PFahfi2NMCsZt/+cjNTt49M1bzD5JvNG8oavIsdpr7XCzALLvFJ&#xA;JCI0Kqy/F9rpuvLCqaedvzm81eVfOFp5dfyU+o/pUzDRZ7S/R5Ln0hXeAw1j3I5cm+Eb70wKxr88&#xA;/wAyfzV0jyDp2oW2it5Ze8ki+uXsd9DcTW8pMv8Aopj9Icg6or+orf5JGFXsPk/WNf1fREvde0Rv&#xA;L+oM7q2mvOl0VVTRX9RFQfF4UwKneKuxV2KuxV2KuxV2KuxV2KuxV8b/AJT/APkx/L//ADFp+o5r&#xA;YfUPe+h9qf4tP+q+yM2T547FXzh+XX5r+Q/JHm38yrfzLqRsrm68x301tCsFxMXVZpAaGKN1G+3x&#xA;EYVZL+QY1PXfNfnf8wJbWW00fzFcQJo/rrxklht+a+pTw4lBUVFa77Yq1+W//rRf5k/8YbP/AJNx&#xA;4qgvzI1WDyP+fuh+dtcjlTyzeaW+nS6hHG8iwzhpDRwgY/tL03NTStMVUB5u078yvz48pXvlEy3+&#xA;h+Wbe5m1HUzDLDEr3EbKE/eqjVqEAqN96bAnFXv+BXinmIH/AKGy8r+3l6Sv/B3uKu/PIH/lav5R&#xA;Ht+lLnf/AJ6WeKqH57ear/T/AD75U0fU9dvvLXki+ink1PU9Nd4ZmmjDFI/VjV3A5CMEAdGJPsVY&#xA;z+RvmXyPZ/nJ5mjsNbnudO1a3s4NEvNWkf6zdyBUDLymWNmPOqoCK0oBirN/yR/8mD+av/baT9c2&#xA;KsP/ACYufJdv+Sfm9vO5UeWpNfuIrzmksg+OO1WOghVpK+pShUbHfFVH8ofMCaP+a9p5R8i+YZ/M&#xA;3kK9gmnngnjlrp5VHYUeRIwBzVR8NAeVCOW+KozR/P3lHyd/zkH+YNz5k1BdPhuo7ZLd2jlk5MkU&#xA;bMP3SP28cVSTR/Leteavys/NvWtKtJjb+aNVN/o0TIRLPBbXhu3KL1aqniKdWBAriqn55/Mvy554&#xA;/KPy55D8t/WL3zZObC1k0wQSK0T2qBHLuwCFarsVY7bmlDir0P8AMCEwfnb+VEBNTFHqCEjvxt1G&#xA;Kt/85Z2s835TNJEhdLfULaWYgV4oQ8fI+3J1GAK9R8s+adA8z6UmraDeLfae7NGs6K6jkhowo4Vt&#xA;vliqa4q7FXYq7FXYq7FXYq7FXYq7FXxv+U//AJMfy/8A8xafqOa2H1D3vofan+LT/qvsjNk+eOxV&#xA;BzaNpE8wnnsbeWcGoleJGcHrXkRXFUYAAKDpiq1YYlkaRUUSPTm4ADNTYVPfFWpoIZ4mhnjWWJxR&#xA;43AZSPcHY4qttbO0tIhDaQR28INRHEqotT7KAMVVcVW+lEZBLwX1QOIeg5U60r4Yq54onZWdFZkN&#xA;UJAJB8R4YqsurO0u4vRuoI7iKob05VV1qOhowIxVr6nZ+osnoR+olAj8FqKdKGm1MVVEiiRmZEVW&#xA;c1cgAEnxPjiq0W1uI2iESek1SycRxNetR0xVTs9O0+yVls7WK2VzycQosYY+J4gVxVg2h/lUtl+Z&#xA;XmjzbfS299Z6+kCw2UkPJomhVQSxbkp3TamKvQFVVUKoAUCgA2AAxVRi0+wiuZLqK2ijuZf72dUU&#xA;O3+swFTiqq0UTOkjIpeOvByAStdjQ9q4q6WKKWNo5UWSNxR0YAqR4EHFVtta21rCsNtCkEK/ZjjU&#xA;Io+QWgxVUxV2KuxV2KuxV2KuxV2KuxV2Kvjf8p//ACY/l/8A5i0/Uc1sPqHvfQ+1P8Wn/VfZGbJ8&#xA;8dirznQPLlt5g1LzFPf3d4JLfVLiCExXDoFRW+EAbjbthVM/LGtXGly6/pOtXjXEeglJY72X4pDb&#xA;ypzUMR9plAHua4FV4PzEsma1kudNvrPT71xHbahPEohJf7BYhiVDdjiqJ1HzpHbazNpFrpl5qF3b&#xA;Isk/1dUKqrgFd2YePhiqI0/zZaajo0+o2VtcTS2zGKfT+AFysqkAoVJpXevXFVCx85xTarb6Zfab&#xA;d6ZcXYY2rXKKEkKCrKGVm3piq2Dzqlzq1zptppd7cPaTtbz3CInoqV7ly46+GKpVonnTW7vzdqFh&#xA;Ppt0LRfqyx25SINa+otWeYhqkNXl1O2Koh/zLsw12YtJ1Ca30+WSK9uo41MUYiNC3Llv408MVVbX&#xA;8w7Sa5slm0y9tLLUZFisr+eNVjd5N0/aNAw+ycVReqec7e01STS7OxutTvYEElylogYRBhVQ7MV3&#xA;I6DFVj+fNIHlt9eSOZ4IpRBNbcQJo5SwUoyk0qOQPXFVlp57t5dQtLO70y+05b9jHaT3UQRXcdFI&#xA;DEqT22xVL7zzprUPnBbBNKu3tFt5CbRUiMkjLLxE6kt9ig8cVZrLLHFE8sjBI41LO52AUCpJxViK&#xA;/mXppiW8bTr5NHaT0xqjRD0evHl9rlxrtWn44qgPzG1SeWfTNNFldy2Mt5CZZIGCpdIVJ9FGVg1T&#xA;X2wqyuysLa48vRWQhnsLd4gggMjCeIeHqBmao/1sCsMk8uRL59i0UahqH1F9ON0R9bl5ep6zJ9qv&#xA;Sgwqna+ZrTRr5vLdnYajqdzZqrl1pMeMtXq8kjg7cqb/ACwKjtW8z3Wn3U0SaJf3cMABa5gRCjAq&#xA;GPGrBjStOnXFVG88+6Pb6Np2rxxT3VtqcohgSFAZQ5qCChI3DKRQd+mKrtK86QXmqxaZdafeaZdX&#xA;KNJaC7jCCUIKsBQmjAb0OKqCefBcS3A07Rr+/t7aV4HuYUTgzx/a48nBOKojVPOUVlq66TBpt3fX&#xA;xgFy0cCoQsZPHcsw6HFVTTfOWk3mnX17KJLI6ZUX9vcrxlioK7qCa8v2adcVQFv+Yli72jXWm31j&#xA;ZXzhLW+uI1WFi32ORDEry7f0xVE3vnSG312bRYNOvL28hEbObdFZAsgryZiw4gVHXFUrvPOmtQ+c&#xA;FsE0q7e0W3kJtFSIySMsvETqS32KDxxV83flP/5Mfy//AMxafqOa2H1D3vofan+LT/qvsjNk+eOx&#xA;VgPk3XNF0698zpf39vaudXunVJpURivLqFYgnp2xVKbqObXNO8765ZRs9perBFZtQgyLaAeo6g70&#xA;otRhVWWz0fWtEt7W886KbaVIj9SdrVGUrQhOJ4uCpFMVTW11PTbD8ytca+u4bVXtbYI08ixhiFUk&#xA;DkRXFUlGu31lp3mzXtIYehc6hFFbXZXkiivCSVQdiPiFDiq+9+rDzd5ZEXmBtbkNwzOpeJ1jqooQ&#xA;IgOPL3xVkvkf/e/zP/21pv8AiK4FQujXdrb/AJk+ZY7iZIXuEshAkjBTIfRAogJ+LfwxVLtB/wCU&#xA;K87/APMXqn/JgYVdr3/KFeSP+YvS/wDkwcVQ6g2vnTzDFc6+dBeaSGaIt6ISaMoaEPMKfBWlBire&#xA;taZptn5I1OSx1NdW+t6jDPc3SGNh6zSRlh+6+Gvf6cVT38wv96/K/wD22bX9eBWtTvLSz/Mqylu5&#xA;o7eJtLkRZJWCKW9atKtQVoMVZB5jglufLuqQQLzmns50iUdWZ4mCgfMnFWC3Pmby+/5WpYpcxNfG&#xA;zjtBYBh6/rgBD+7+39oculMKppr8EtvbeSoJhxlivbRJB4MsRB/HArN8VYfN/wCTZg/7Yx/6iGxV&#xA;2kf+TN1//mEtv+IrhVLpNZm1DW9ah1HzCdCt9NmEVtbRtDEzJT+8LSAs/LwGKpBo/wDyiXkv/tup&#xA;/wAnmxQzDzX/AMpv5P8A9e9/5NJgSkuuy6b5cmu9d8s61bKzScr/AEVpUkjmcn4giqSyP1P9BthV&#xA;HLqtjb/mYbq+mjskn0VAPrDrGObzK3Cr8fi2O2BUk1ZX1ePz7faW3r2cq2SxzR7rIbYKZuJGzUCn&#xA;f3wqmHnLzDouseTbTTtLuo59Qvnto7a1iYGVWDKfiQfElKU3xVN9I/8AJm6//wAwlt/xFcVa1O8t&#xA;LT8yrKW7njt4m0uRQ8rBFLetWlWIFdsCp9beVvLNrOlxbaRZQTxnlHLHbxI6nxVlUEZAY4joG+Wp&#xA;yyFGUiPeUzybQ7FUum8t+XZ52uJ9LtJZ3PJ5XgiZy3iWK1riqPjjjjRY41CIooqKAAAOwAxVADy5&#xA;5eE/1gaXaCevL1vQi518eXGtcVSkeToZ/Nmo6tqMFreWV1DCkEMqCVleMAMSrqVHTscVZCtlZra/&#xA;VFgjFrxK/VwiiPieo4U40xVQttD0W1Km10+2gKNyQxQxpRqUqOIFDiqJit7eEuYokjMrF5SiheTn&#xA;qzU6n3xVRn0nSri6jvLiygmu4aGK4kiRpEKmq8XI5Ch3FMVVFsrNYpYlgjWKcs08YRQrlxRi4pRu&#xA;XeuKuays2iiiaCNooCrQRlFKoUFFKClF49qYqp32k6VqHH6/ZwXfD7HrxJJT5cwaYq6PStLjtfqk&#xA;dnAlrUN6CxoI+QpQ8AKV2xVWmtreYxmaJJTEwkiLqG4uOjLXoR44qo32laXf8Pr9nBd+nX0/XjST&#xA;jXrTmDTFUUAAKDYDoMVQa6Joy3n11bC2F5Xl9ZESCWp786cvxxVES29vM0bSxJI0Tc4iyhirD9pa&#xA;9D74qqYqp/Vrc3AufST6wF9MTcRz4Vrx5daV7Yq5ba3Wd51iRZ5AFklCgOwHQFuppiqHuNG0i5uV&#xA;urixt5rpKcJ5IkeQU6UYgnFVRdN05Y4oltYVjgf1IUEahUeteSimzb9RiqpJbW8ksc0kSPLDUwyM&#xA;oLJyFDxJ3Fe9MVQY8u+Xxc/WhploLnly9f0I/U5ePLjWuKpVc+UY7zzjJq99DbXWnNYi1W3mX1GE&#xA;olD8uDKUpx71rirILa0tbSFYLWFIIE+xFEoRB8lUAYqh7fRNGtrg3NtYW0Fy1azxwxo5r1+JQDiq&#xA;JW2t1nedYkWeQBZJQoDsB0BbqaYqo32k6Vf8Pr9nBd+nX0/XiSTjXrTmDTFX/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:FE20599828C4DC11B0F7C948713094C1</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:75C4C789E6FA11DCA9DBE848ED1657C8</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:FD20599828C4DC11B0F7C948713094C1</stRef:instanceID>
            <stRef:documentID>uuid:FC20599828C4DC11B0F7C948713094C1</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5080.000000</stDim:w>
            <stDim:h>5080.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.609398</xapG:cyan>
                           <xapG:magenta>67.578102</xapG:magenta>
                           <xapG:yellow>66.796898</xapG:yellow>
                           <xapG:black>89.843796</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>6.250000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>96.093796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>62.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>51.562500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.890602</xapG:cyan>
                           <xapG:magenta>76.562500</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>26.953102</xapG:cyan>
                           <xapG:magenta>81.250000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>16.796898</xapG:cyan>
                           <xapG:magenta>97.656296</xapG:magenta>
                           <xapG:yellow>92.187500</xapG:yellow>
                           <xapG:black>6.640601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.390601</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>79.296898</xapG:magenta>
                           <xapG:yellow>96.484398</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>98.046898</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>34.765602</xapG:magenta>
                           <xapG:yellow>86.718796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>4.687500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>92.968796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>18.750000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>97.656296</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>98.828102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>99.218796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>85.937500</xapG:cyan>
                           <xapG:magenta>17.578102</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>3.906298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>89.843796</xapG:cyan>
                           <xapG:magenta>33.203102</xapG:magenta>
                           <xapG:yellow>98.437500</xapG:yellow>
                           <xapG:black>25.781298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.781296</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>74.609398</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984399</xapG:magenta>
                           <xapG:yellow>45.703102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.531296</xapG:cyan>
                           <xapG:magenta>14.843798</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.109398</xapG:cyan>
                           <xapG:magenta>52.343796</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>98.828102</xapG:cyan>
                           <xapG:magenta>96.093796</xapG:magenta>
                           <xapG:yellow>3.515601</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>26.171898</xapG:yellow>
                           <xapG:black>24.609398</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>98.046898</xapG:magenta>
                           <xapG:yellow>0.781298</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>49.218796</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>1.171899</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>34.765602</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>37.109398</xapG:yellow>
                           <xapG:black>10.937500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>11.718798</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>49.218796</xapG:yellow>
                           <xapG:black>0.781298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>96.484398</xapG:magenta>
                           <xapG:yellow>20.312500</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656298</xapG:cyan>
                           <xapG:magenta>27.343798</xapG:magenta>
                           <xapG:yellow>39.843796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.843796</xapG:cyan>
                           <xapG:magenta>42.578102</xapG:magenta>
                           <xapG:yellow>52.343796</xapG:yellow>
                           <xapG:black>6.640601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.390602</xapG:cyan>
                           <xapG:magenta>52.734398</xapG:magenta>
                           <xapG:yellow>60.546898</xapG:yellow>
                           <xapG:black>23.437500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>57.421898</xapG:cyan>
                           <xapG:magenta>60.156296</xapG:magenta>
                           <xapG:yellow>63.671898</xapG:yellow>
                           <xapG:black>41.796898</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656298</xapG:cyan>
                           <xapG:magenta>38.281296</xapG:magenta>
                           <xapG:yellow>63.281296</xapG:yellow>
                           <xapG:black>1.171899</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>31.640602</xapG:cyan>
                           <xapG:magenta>48.828102</xapG:magenta>
                           <xapG:yellow>73.828102</xapG:yellow>
                           <xapG:black>9.765601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.937500</xapG:cyan>
                           <xapG:magenta>57.031296</xapG:magenta>
                           <xapG:yellow>83.593796</xapG:yellow>
                           <xapG:black>22.656298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.062500</xapG:cyan>
                           <xapG:magenta>63.671898</xapG:magenta>
                           <xapG:yellow>92.968796</xapG:yellow>
                           <xapG:black>35.546898</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>41.406296</xapG:cyan>
                           <xapG:magenta>69.531296</xapG:magenta>
                           <xapG:yellow>96.484398</xapG:yellow>
                           <xapG:black>48.828102</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>47.656296</xapG:cyan>
                           <xapG:magenta>73.046898</xapG:magenta>
                           <xapG:yellow>83.203102</xapG:yellow>
                           <xapG:black>67.968796</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.781298</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984399</xapG:magenta>
                           <xapG:yellow>45.703102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>98.046898</xapG:magenta>
                           <xapG:yellow>0.781298</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>48.437500</xapG:cyan>
                           <xapG:magenta>36.328102</xapG:magenta>
                           <xapG:yellow>33.593796</xapG:yellow>
                           <xapG:black>1.562500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -25.123 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 25.123 li143.069 25.123 li143.069 0 licpclp[1 0 0 1 0 0 ] concat3.57227 0.0898438 mo3.57227 22.7686 li0 22.7686 li0 0.0898438 li3.57227 0.0898438 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0 0.91 0.72 0.23 cmykf19.3057 8.2002 mo18.667 8.8291 17.7051 9.11426 16.5361 9.11426 cv15.6533 9.11426 14.6133 9.04199 14.2588 8.98242 cv14.0781 8.95215 13.9756 8.85645 13.9756 8.64551 cv13.9756 0.46875 li13.9756 0.264648 14.0781 0.162109 14.2588 0.132813 cv14.6133 0.0732422 15.6533 0 16.5361 0 cv17.6943 0 18.6504 0.276367 19.2881 0.893555 cv20.0469 1.62598 20.2461 2.63281 20.2461 3.99414 cv20.2461 5.12012 li20.2461 6.4668 20.0547 7.46191 19.3057 8.2002 cvcp18.8691 4.05078 mo18.8691 2.89063 18.7168 2.17383 18.2012 1.69727 cv17.7832 1.30957 17.1992 1.17285 16.5361 1.17285 cv16.0322 1.17285 15.6895 1.19043 15.3643 1.20898 cv15.3643 7.91211 li15.6836 7.92969 16.0322 7.94141 16.5361 7.94141 cv17.2266 7.94141 17.8311 7.79102 18.2529 7.36621 cv18.7363 6.87695 18.8691 6.18848 18.8691 5.06445 cv18.8691 4.05078 licp31.5928 9.11426 mo29.6514 9.11426 28.4004 8.17676 28.4004 5.74805 cv28.4004 0.318359 li28.4004 0.192383 28.5029 0.0898438 28.6348 0.0898438 cv29.5547 0.0898438 li29.6816 0.0898438 29.79 0.1875 29.79 0.318359 cv29.79 5.74805 li29.79 7.20898 30.1982 7.9541 31.5928 7.9541 cv32.9883 7.9541 33.3965 7.21484 33.3965 5.74805 cv33.3965 0.318359 li33.3965 0.192383 33.498 0.0898438 33.6309 0.0898438 cv34.5508 0.0898438 li34.6777 0.0898438 34.7852 0.1875 34.7852 0.318359 cv34.7852 5.74805 li34.7852 8.17676 33.5342 9.11426 31.5928 9.11426 cvcp27.0342 1.25684 mo24.8096 1.25684 li24.8096 8.78418 li24.8096 8.91016 24.7129 9.02441 24.5811 9.02441 cv23.6543 9.02441 li23.5283 9.02441 23.4268 8.91504 23.4268 8.78418 cv23.4268 1.25684 li21.2021 1.25684 li21.0693 1.25684 20.9609 1.18457 20.9609 1.05176 cv20.9609 0.3125 li20.9609 0.1875 21.0693 0.0898438 21.2021 0.0898438 cv27.0342 0.0898438 li27.166 0.0898438 27.2686 0.180664 27.2686 0.3125 cv27.2686 1.05176 li27.2686 1.17773 27.166 1.25684 27.0342 1.25684 cvcp58.8223 3.2959 mo57.5732 2.92969 li57.4277 2.88672 57.3379 2.77637 57.3379 2.64551 cv57.3379 2.51367 57.3379 2.56738 57.3379 2.56738 cv57.3379 2.43555 57.4404 2.32715 57.5732 2.32715 cv59.8057 2.32715 li59.9385 2.32715 60.0439 2.43555 60.0488 2.56738 cv60.0586 2.84668 li60.79 2.39746 61.2939 2.24316 62.0449 2.24316 cv63.6709 2.24316 64.1318 3.36328 64.1318 4.69727 cv64.1318 8.77734 li64.1318 8.91016 64.0234 9.02441 63.8906 9.02441 cv63.0498 9.02441 li62.917 9.02441 62.8086 8.91016 62.8086 8.77734 cv62.8086 4.83984 li62.8086 3.70996 62.5566 3.37305 61.6357 3.37305 cv61.1797 3.37305 60.6748 3.55371 60.1455 3.82422 cv60.1455 8.77734 li60.1455 8.9043 60.0371 9.02441 59.9053 9.02441 cv59.0576 9.02441 li58.9307 9.02441 58.8223 8.91016 58.8223 8.77734 cv58.8223 3.2959 licp88.0732 2.32715 mo88.2061 2.32715 88.3115 2.43555 88.3154 2.56738 cv88.3271 2.85938 li89.002 2.36816 89.5791 2.24316 90.0908 2.24316 cv90.2402 2.24316 90.3369 2.33301 90.3369 2.47168 cv90.3369 3.15039 li90.3369 3.28223 90.2402 3.37305 90.0908 3.37305 cv89.4893 3.37305 88.9844 3.5293 88.4316 3.8418 cv88.4316 8.77734 li88.4316 8.9043 88.3232 9.02441 88.1904 9.02441 cv87.3438 9.02441 li87.2168 9.02441 87.1084 8.91016 87.1084 8.77734 cv87.1084 3.2959 li85.9014 2.92969 li85.7559 2.88672 85.667 2.77637 85.667 2.64551 cv85.667 2.51367 85.667 2.56738 85.667 2.56738 cv85.667 2.43555 85.7705 2.32715 85.9014 2.32715 cv88.0732 2.32715 licp48.0439 2.32715 mo48.1758 2.32715 48.2822 2.43555 48.2871 2.56738 cv48.2969 2.85938 li48.9727 2.36816 49.5488 2.24316 50.0615 2.24316 cv50.2119 2.24316 50.3066 2.33301 50.3066 2.47168 cv50.3066 3.15039 li50.3066 3.28223 50.2119 3.37305 50.0615 3.37305 cv49.46 3.37305 48.9541 3.5293 48.4014 3.8418 cv48.4014 8.77734 li48.4014 8.9043 48.2939 9.02441 48.1611 9.02441 cv47.3135 9.02441 li47.1875 9.02441 47.0791 8.91016 47.0791 8.77734 cv47.0791 3.2959 li45.8721 2.92969 li45.7256 2.88672 45.6377 2.77637 45.6377 2.64551 cv45.6377 2.51367 45.6377 2.56738 45.6377 2.56738 cv45.6377 2.43555 45.7402 2.32715 45.8721 2.32715 cv48.0439 2.32715 licp66.125 7.8916 mo66.7051 7.9209 67.6719 8.01953 68.0693 8.01953 cv68.832 8.01953 69.0908 7.79102 69.0908 7.30469 cv69.0908 7.00977 68.9102 6.82422 68.375 6.5 cv66.9443 5.63379 li66.2832 5.23047 65.8252 4.67188 65.8252 3.94434 cv65.8252 2.71777 66.6738 2.24316 68.0566 2.24316 cv68.8799 2.24316 69.4756 2.32617 70.0645 2.44141 cv70.2148 2.47168 70.2871 2.56152 70.2871 2.7002 cv70.2871 3.24609 li70.2871 3.3916 70.209 3.46289 70.0889 3.46289 cv70.0703 3.46289 70.0586 3.46387 70.0469 3.46289 cv69.666 3.44238 68.8018 3.34375 68.1221 3.34375 cv67.498 3.34375 67.1484 3.45117 67.1484 3.94434 cv67.1484 4.2207 67.377 4.39551 67.8047 4.64746 cv69.1865 5.4834 li70.1904 6.08496 70.4258 6.64355 70.4258 7.30469 cv70.4258 8.44141 69.583 9.11426 68.1221 9.11426 cv67.665 9.11426 66.7285 9.06152 66.0967 8.9043 cv65.9463 8.86719 65.8564 8.78418 65.8564 8.64648 cv65.8564 8.0752 li65.8564 7.97266 65.9551 7.88379 66.0762 7.88965 cv66.125 7.8916 licp92.4854 3.30566 mo91.209 2.93066 li91.0771 2.88379 90.9746 2.78418 90.9746 2.65137 cv90.9746 2.55566 li90.9746 2.42285 91.0771 2.32715 91.209 2.32715 cv92.4854 2.32715 li92.4854 1.24512 li92.4854 1.12793 92.5762 1.02832 92.7139 1.00488 cv93.5859 0.860352 li93.7012 0.84082 93.8135 0.916992 93.8135 1.05273 cv93.8135 2.32715 li95.0039 2.32715 li95.1357 2.32715 95.2441 2.43555 95.2441 2.56738 cv95.2441 3.12695 li95.2441 3.25879 95.1357 3.36719 95.0039 3.36719 cv93.8135 3.36719 li93.8135 7.35254 li93.8135 7.98438 93.916 8.06836 94.373 8.06836 cv95.0273 8.06836 li95.1904 8.06836 95.2803 8.12207 95.2803 8.24219 cv95.2803 8.83301 li95.2803 8.94727 95.2139 9.01758 95.0586 9.04199 cv94.7939 9.08398 94.5049 9.11426 94.2588 9.11426 cv93.0264 9.11426 92.4854 8.82031 92.4854 7.35254 cv92.4854 3.30566 licp82.2314 9.11426 mo80.4043 9.11426 79.46 7.89453 79.46 6.15039 cv79.46 5.20605 li79.46 3.46289 80.4043 2.24316 82.2314 2.24316 cv84.0586 2.24316 85.0088 3.46289 85.0088 5.20605 cv85.0088 6.15039 li85.0088 7.89453 84.0586 9.11426 82.2314 9.11426 cvcp83.6865 5.20605 mo83.6865 4.10059 83.2178 3.3916 82.2314 3.3916 cv81.252 3.3916 80.7832 4.09473 80.7832 5.20605 cv80.7832 6.15039 li80.7832 7.25684 81.2451 7.9668 82.2314 7.9668 cv83.2119 7.9668 83.6865 7.2627 83.6865 6.15039 cv83.6865 5.20605 licp76.6797 5.23633 mo76.6797 4.1123 76.4111 3.33691 75.4541 3.33691 cv74.9844 3.33691 74.2822 3.6123 73.9746 3.80859 cv73.9746 7.91797 li74.3408 7.97852 74.9189 8.01953 75.2549 8.01953 cv76.3613 8.01953 76.6797 7.26855 76.6797 6.13281 cv76.6797 5.23633 licp72.6514 3.2959 mo71.4023 2.92969 li71.2568 2.88672 71.167 2.77637 71.167 2.64551 cv71.167 2.51367 71.167 2.56738 71.167 2.56738 cv71.167 2.43555 71.2695 2.32715 71.4023 2.32715 cv73.6348 2.32715 li73.7627 2.32715 73.873 2.43262 73.8779 2.5625 cv73.8809 2.66504 73.8877 2.84668 73.8877 2.84668 cv74.2813 2.58887 74.9736 2.24219 75.625 2.24219 cv77.2637 2.24219 78.0029 3.39648 78.0029 5.23633 cv78.0029 6.13281 li78.0029 8.01465 77.1016 9.11426 75.2549 9.11426 cv74.9248 9.11426 74.4316 9.07813 73.9746 9.00586 cv73.9746 11.1592 li73.9746 11.2861 73.873 11.3926 73.7402 11.3926 cv72.8799 11.3926 li72.7539 11.3926 72.6514 11.291 72.6514 11.1592 cv72.6514 3.2959 licp45.5449 1.25488 mo43.3193 1.25488 li43.3193 8.78223 li43.3193 8.90723 43.2236 9.02148 43.0908 9.02148 cv42.166 9.02148 li42.0391 9.02148 41.9375 8.91406 41.9375 8.78223 cv41.9375 1.25488 li39.7129 1.25488 li39.5801 1.25488 39.4717 1.18262 39.4717 1.05078 cv39.4717 0.310547 li39.4717 0.18457 39.5801 0.0888672 39.7129 0.0888672 cv45.5449 0.0888672 li45.6758 0.0888672 45.7783 0.179688 45.7783 0.310547 cv45.7783 1.05078 li45.7783 1.17676 45.6758 1.25488 45.5449 1.25488 cvcp57.21 8.41309 mo57.3447 8.45703 57.4502 8.58691 57.4502 8.72461 cv57.4502 8.85645 57.4502 8.78418 57.4502 8.78418 cv57.4502 8.91602 57.3418 9.02441 57.21 9.02441 cv55.1768 9.02441 li55.0449 9.02441 54.9326 8.91602 54.9277 8.78418 cv54.9189 8.5166 li54.3779 8.85938 53.7139 9.11426 53.0889 9.11426 cv52.0781 9.11426 51.0684 8.69922 51.0684 7.13672 cv51.0684 7.04004 li51.0684 5.70605 51.8682 5.02637 53.9844 5.02637 cv54.8086 5.02637 li54.8086 4.52148 li54.8086 3.625 54.459 3.35547 53.6357 3.35547 cv52.8594 3.35547 52.1836 3.42676 51.7432 3.44727 cv51.6826 3.4502 li51.5684 3.45508 51.459 3.41504 51.459 3.25293 cv51.459 2.65723 li51.459 2.52539 51.5381 2.44727 51.6992 2.41699 cv52.1865 2.32715 52.8125 2.24316 53.6357 2.24316 cv55.3252 2.24316 56.1309 3.04297 56.1309 4.52148 cv56.1309 8.06543 li57.21 8.41309 licp54.8086 5.93457 mo53.9844 5.93457 li52.71 5.93457 52.3975 6.27148 52.3975 7.03418 cv52.3975 7.13086 li52.3975 7.8584 52.7334 8.05078 53.3838 8.05078 cv53.876 8.05078 54.3447 7.89453 54.8086 7.64063 cv54.8086 5.93457 licp0 0 0 1 cmykf142.851 22.79 mo142.612 22.8281 142.299 22.8525 142.07 22.8525 cv140.962 22.8525 140.433 22.5615 140.433 21.2402 cv140.433 17.0449 li139.269 16.9102 li139.137 16.9014 139.04 16.8262 139.04 16.6943 cv139.04 16.3721 li139.04 16.2373 139.137 16.1523 139.269 16.1523 cv140.433 16.1523 li140.433 14.9756 li140.433 14.8564 140.518 14.7588 140.652 14.7344 cv141.275 14.6406 li141.288 14.6406 141.301 14.6406 141.313 14.6406 cv141.41 14.6406 141.491 14.7217 141.491 14.8438 cv141.491 16.1523 li142.791 16.1523 li142.923 16.1523 143.032 16.2617 143.032 16.3936 cv143.032 16.8037 li143.032 16.9355 142.923 17.0449 142.791 17.0449 cv141.491 17.0449 li141.491 21.2402 li141.491 21.9004 141.66 21.998 142.143 21.998 cv142.816 21.998 li142.985 21.998 143.069 22.0449 143.069 22.167 cv143.069 22.5869 li143.069 22.6963 143.007 22.7686 142.851 22.79 cvcp138.163 16.9824 mo137.608 16.9824 137.104 17.126 136.503 17.4893 cv136.503 22.5273 li136.503 22.6465 136.394 22.7686 136.263 22.7686 cv135.674 22.7686 li135.552 22.7686 135.445 22.6582 135.445 22.5273 cv135.445 16.3936 li135.445 16.2617 135.54 16.1523 135.674 16.1523 cv136.237 16.1523 li136.37 16.1523 136.466 16.2617 136.466 16.3936 cv136.466 16.6475 li137.067 16.2246 137.621 16.0713 138.163 16.0713 cv138.329 16.0713 138.413 16.1436 138.413 16.2871 cv138.413 16.7793 li138.413 16.9102 138.329 16.9824 138.163 16.9824 cvcp132.968 19.0049 mo132.968 17.7773 132.474 16.9951 131.343 16.9951 cv130.226 16.9951 129.732 17.7656 129.732 19.0049 cv129.732 19.916 li129.732 21.1426 130.213 21.9258 131.343 21.9258 cv132.461 21.9258 132.968 21.1553 132.968 19.916 cv132.968 19.0049 licp131.343 22.8525 mo129.577 22.8525 128.674 21.6846 128.674 19.916 cv128.674 19.0049 li128.674 17.2363 129.577 16.0713 131.343 16.0713 cv133.112 16.0713 134.026 17.2363 134.026 19.0049 cv134.026 19.916 li134.026 21.6846 133.112 22.8525 131.343 22.8525 cvcp126.414 19.04 mo126.414 17.7773 126.04 16.9609 124.849 16.9609 cv124.345 16.9609 123.779 17.0195 123.443 17.0791 cv123.443 21.8408 li123.841 21.9131 124.465 21.96 124.849 21.96 cv126.029 21.96 126.414 21.1934 126.414 19.9063 cv126.414 19.04 licp124.849 22.8525 mo124.477 22.8525 123.912 22.8027 123.443 22.7178 cv123.443 24.8945 li123.443 25.0166 123.346 25.123 123.214 25.123 cv122.601 25.123 li122.481 25.123 122.385 25.0293 122.385 24.8945 cv122.385 16.6221 li122.385 16.4658 122.421 16.3936 122.638 16.3467 cv123.273 16.1904 124.116 16.0713 124.849 16.0713 cv126.643 16.0713 127.472 17.2363 127.472 19.04 cv127.472 19.9063 li127.472 21.7939 126.605 22.8525 124.849 22.8525 cvcp118.718 22.8525 mo118.273 22.8525 117.406 22.8154 116.817 22.6709 cv116.66 22.6338 116.563 22.5615 116.563 22.4297 cv116.563 22.0107 li116.563 21.9004 116.66 21.8291 116.781 21.8291 cv116.805 21.8291 116.817 21.8291 116.83 21.8291 cv117.406 21.9004 118.284 21.96 118.718 21.96 cv119.499 21.96 119.908 21.7568 119.908 21.1084 cv119.908 20.7451 119.691 20.5195 119.006 20.1094 cv117.791 19.3906 li117.059 18.9424 116.563 18.4258 116.563 17.668 cv116.563 16.4189 117.503 16.0713 118.741 16.0713 cv119.415 16.0713 120.052 16.1309 120.617 16.2246 cv120.773 16.25 120.846 16.334 120.846 16.4658 cv120.846 16.8633 li120.846 17.0078 120.763 17.0674 120.641 17.0674 cv120.63 17.0674 120.617 17.0674 120.606 17.0674 cv120.184 17.0322 119.415 16.9727 118.741 16.9727 cv118.066 16.9727 117.622 17.0547 117.622 17.668 cv117.622 18.0313 117.899 18.2598 118.452 18.582 cv119.644 19.293 li120.641 19.8809 120.966 20.3975 120.966 21.1084 cv120.966 22.333 120.064 22.8525 118.718 22.8525 cvcp114.904 22.7686 mo114.328 22.7686 li114.196 22.7686 114.087 22.6582 114.087 22.5273 cv114.087 18.5703 li114.087 17.3555 113.68 16.9824 112.766 16.9824 cv112.26 16.9824 111.694 17.1768 111.141 17.4521 cv111.141 22.5273 li111.141 22.6465 111.034 22.7686 110.9 22.7686 cv110.311 22.7686 li110.191 22.7686 110.082 22.6582 110.082 22.5273 cv110.082 16.3936 li110.082 16.2617 110.179 16.1523 110.311 16.1523 cv110.912 16.1523 li111.045 16.1523 111.141 16.2617 111.141 16.3936 cv111.141 16.6221 li111.803 16.25 112.343 16.0713 113.054 16.0713 cv114.497 16.0713 115.146 16.9727 115.146 18.5703 cv115.146 22.5273 li115.146 22.6582 115.037 22.7686 114.904 22.7686 cvcp107.389 19.5684 mo106.5 19.5684 li105.044 19.5684 104.66 19.8936 104.66 20.7451 cv104.66 20.8926 li104.66 21.7568 105.068 21.9854 105.766 21.9854 cv106.318 21.9854 106.813 21.8164 107.389 21.5029 cv107.389 19.5684 licp108.206 22.7686 mo107.653 22.7686 li107.521 22.7686 107.414 22.6582 107.414 22.5273 cv107.414 22.2607 li106.836 22.5986 106.233 22.8525 105.561 22.8525 cv104.538 22.8525 103.602 22.4053 103.602 20.9023 cv103.602 20.7578 li103.602 19.4619 104.359 18.8105 106.5 18.8105 cv107.389 18.8105 li107.389 18.332 li107.389 17.3203 107.041 16.9727 106.102 16.9727 cv105.32 16.9727 104.745 17.0195 104.263 17.0674 cv104.237 17.0674 104.227 17.0674 104.203 17.0674 cv104.094 17.0674 103.987 17.0322 103.987 16.876 cv103.987 16.4531 li103.987 16.3213 104.07 16.25 104.237 16.2246 cv104.732 16.1436 105.285 16.0713 106.102 16.0713 cv107.774 16.0713 108.447 16.9102 108.447 18.332 cv108.447 22.5273 li108.447 22.6582 108.339 22.7686 108.206 22.7686 cvcp102.446 16.9824 mo101.894 16.9824 101.388 17.126 100.787 17.4893 cv100.787 22.5273 li100.787 22.6465 100.679 22.7686 100.546 22.7686 cv99.957 22.7686 li99.8379 22.7686 99.7285 22.6582 99.7285 22.5273 cv99.7285 16.3936 li99.7285 16.2617 99.8252 16.1523 99.957 16.1523 cv100.523 16.1523 li100.655 16.1523 100.751 16.2617 100.751 16.3936 cv100.751 16.6475 li101.354 16.2246 101.904 16.0713 102.446 16.0713 cv102.615 16.0713 102.7 16.1436 102.7 16.2871 cv102.7 16.7793 li102.7 16.9102 102.615 16.9824 102.446 16.9824 cvcp99.1143 14.7715 mo96.7686 14.7715 li96.7686 22.5273 li96.7686 22.6465 96.6836 22.7686 96.5518 22.7686 cv95.8906 22.7686 li95.7695 22.7686 95.6738 22.6582 95.6738 22.5273 cv95.6738 14.7715 li93.3291 14.7715 li93.1963 14.7715 93.0889 14.7119 93.0889 14.5771 cv93.0889 14.0488 li93.0889 13.9297 93.1963 13.832 93.3291 13.832 cv99.1143 13.832 li99.2451 13.832 99.3418 13.917 99.3418 14.0488 cv99.3418 14.5771 li99.3418 14.6992 99.2451 14.7715 99.1143 14.7715 cvcp89.9756 14.459 mo89.3975 14.459 li88.832 14.459 88.6641 14.6279 88.6641 15.2881 cv88.6641 16.1523 li89.9268 16.1523 li90.0586 16.1523 90.1553 16.25 90.1553 16.3721 cv90.1553 16.8379 li90.1553 16.9609 90.0586 17.0449 89.9268 17.0449 cv88.6641 17.0449 li88.6641 22.5273 li88.6641 22.6465 88.5557 22.7686 88.4355 22.7686 cv87.8457 22.7686 li87.7148 22.7686 87.6055 22.6465 87.6055 22.5273 cv87.6055 17.0449 li86.4395 16.9102 li86.3066 16.9014 86.2109 16.8164 86.2109 16.6943 cv86.2109 16.3721 li86.2109 16.25 86.3066 16.1523 86.4395 16.1523 cv87.6055 16.1523 li87.6055 15.2881 li87.6055 14.001 88.2314 13.6162 89.29 13.6162 cv89.6133 13.6162 89.8066 13.6543 89.9629 13.6885 cv90.0947 13.7256 90.1914 13.7725 90.1914 13.8828 cv90.1914 14.2773 li90.1914 14.4121 90.1064 14.459 89.9756 14.459 cvcp84.251 19.0049 mo84.251 17.7773 83.7578 16.9951 82.6279 16.9951 cv81.5088 16.9951 81.0156 17.7656 81.0156 19.0049 cv81.0156 19.9189 li81.0156 21.1426 81.4971 21.9258 82.6279 21.9258 cv83.7461 21.9258 84.251 21.1553 84.251 19.9189 cv84.251 19.0049 licp82.6279 22.8525 mo80.8594 22.8525 79.958 21.6846 79.958 19.9189 cv79.958 19.0049 li79.958 17.2363 80.8594 16.0713 82.6279 16.0713 cv84.3955 16.0713 85.3086 17.2363 85.3086 19.0049 cv85.3086 19.9189 li85.3086 21.6846 84.3955 22.8525 82.6279 22.8525 cvcp75.8125 22.79 mo75.5713 22.8281 75.2588 22.8525 75.0303 22.8525 cv73.9248 22.8525 73.3955 22.5615 73.3955 21.2402 cv73.3955 17.0449 li72.2285 16.9102 li72.0957 16.9014 72 16.8291 72 16.6943 cv72 16.3721 li72 16.2373 72.0957 16.1523 72.2285 16.1523 cv73.3955 16.1523 li73.3955 14.9756 li73.3955 14.8564 73.4795 14.7588 73.6113 14.7344 cv74.2373 14.6406 li74.249 14.6406 74.2607 14.6406 74.2725 14.6406 cv74.3691 14.6406 74.4541 14.7217 74.4541 14.8438 cv74.4541 16.1523 li75.752 16.1523 li75.8848 16.1523 75.9932 16.2617 75.9932 16.3936 cv75.9932 16.8037 li75.9932 16.9355 75.8848 17.0449 75.752 17.0449 cv74.4541 17.0449 li74.4541 21.2402 li74.4541 21.9004 74.6211 21.998 75.1025 21.998 cv75.7764 21.998 li75.9443 21.998 76.0283 22.0449 76.0283 22.167 cv76.0283 22.5869 li76.0283 22.6963 75.9688 22.7686 75.8125 22.79 cvcp70.6416 22.7686 mo70.0635 22.7686 li69.9326 22.7686 69.8232 22.6582 69.8232 22.5273 cv69.8232 18.5703 li69.8232 17.3555 69.415 16.9824 68.501 16.9824 cv67.9951 16.9824 67.4307 17.1768 66.8779 17.4521 cv66.8779 22.5273 li66.8779 22.6465 66.7695 22.7686 66.6367 22.7686 cv66.0479 22.7686 li65.9277 22.7686 65.8193 22.6582 65.8193 22.5273 cv65.8193 16.3936 li65.8193 16.2617 65.915 16.1523 66.0479 16.1523 cv66.6494 16.1523 li66.7813 16.1523 66.8779 16.2617 66.8779 16.3936 cv66.8779 16.6221 li67.5381 16.25 68.0801 16.0713 68.7891 16.0713 cv70.2324 16.0713 70.8818 16.9727 70.8818 18.5703 cv70.8818 22.5273 li70.8818 22.6582 70.7734 22.7686 70.6416 22.7686 cvcp63.3057 18.8828 mo63.3057 17.5244 62.7881 16.9951 61.7305 16.9951 cv60.6963 16.9951 60.1191 17.584 60.1191 18.8828 cv60.1191 18.9922 li63.3057 18.9922 li63.3057 18.8828 licp64.1475 19.7969 mo60.1191 19.7969 li60.1191 19.9658 li60.1191 21.3965 60.6836 21.9258 61.791 21.9258 cv62.4873 21.9258 63.3789 21.8789 63.9307 21.7939 cv63.9551 21.7939 63.9668 21.7939 63.9912 21.7939 cv64.0879 21.7939 64.1836 21.8408 64.1836 21.96 cv64.1836 22.3701 li64.1836 22.5273 64.1357 22.6113 63.9434 22.6465 cv63.2578 22.7803 62.5967 22.8525 61.791 22.8525 cv60.4072 22.8525 59.0605 22.2012 59.0605 19.9658 cv59.0605 18.8828 li59.0605 17.1641 60.0107 16.0713 61.7305 16.0713 cv63.4863 16.0713 64.376 17.1768 64.376 18.8828 cv64.376 19.5342 li64.376 19.6904 64.292 19.7969 64.1475 19.7969 cvcp57.4014 22.7686 mo56.8242 22.7686 li56.6914 22.7686 56.584 22.6582 56.584 22.5273 cv56.584 18.2695 li56.584 17.2607 56.1152 16.9824 55.4893 16.9824 cv55.0566 16.9824 54.5518 17.1299 54.083 17.3076 cv54.1543 17.5742 54.1904 17.8838 54.1904 18.2471 cv54.1904 22.5273 li54.1904 22.6465 54.1064 22.7686 53.9736 22.7686 cv53.3369 22.7686 li53.2168 22.7686 53.1318 22.6582 53.1318 22.5273 cv53.1318 18.2471 li53.1318 17.2012 52.832 16.9824 52.2061 16.9824 cv51.7734 16.9824 51.2441 17.2012 50.7393 17.4521 cv50.7393 22.5273 li50.7393 22.6465 50.6543 22.7686 50.5234 22.7686 cv49.8857 22.7686 li49.7656 22.7686 49.6807 22.6582 49.6807 22.5273 cv49.6807 16.3936 li49.6807 16.2617 49.7773 16.1523 49.9092 16.1523 cv50.5107 16.1523 li50.6426 16.1523 50.7393 16.2617 50.7393 16.3936 cv50.7393 16.6221 li51.2197 16.3213 51.834 16.0586 52.4951 16.0586 cv53.0127 16.0586 53.3965 16.2031 53.6973 16.5498 cv54.3594 16.2373 55.0684 16.0586 55.6934 16.0586 cv56.7764 16.0586 57.6416 16.6006 57.6416 18.2695 cv57.6416 22.5273 li57.6416 22.6582 57.5342 22.7686 57.4014 22.7686 cvcp48.3457 22.79 mo48.1055 22.8281 47.793 22.8525 47.5645 22.8525 cv46.458 22.8525 45.9297 22.5615 45.9297 21.2402 cv45.9297 17.0449 li44.7627 16.9102 li44.6299 16.9014 44.5342 16.8291 44.5342 16.6943 cv44.5342 16.3721 li44.5342 16.2373 44.6299 16.1523 44.7627 16.1523 cv45.9297 16.1523 li45.9297 14.9756 li45.9297 14.8564 46.0137 14.7588 46.1455 14.7344 cv46.7715 14.6406 li46.7832 14.6406 46.7949 14.6406 46.8066 14.6406 cv46.9033 14.6406 46.9873 14.7217 46.9873 14.8438 cv46.9873 16.1523 li48.2861 16.1523 li48.418 16.1523 48.5273 16.2617 48.5273 16.3936 cv48.5273 16.8037 li48.5273 16.9355 48.418 17.0449 48.2861 17.0449 cv46.9873 17.0449 li46.9873 21.2402 li46.9873 21.9004 47.1553 21.998 47.6367 21.998 cv48.3105 21.998 li48.4785 21.998 48.5625 22.0449 48.5625 22.167 cv48.5625 22.5869 li48.5625 22.6963 48.5029 22.7686 48.3457 22.79 cvcp43.6563 16.9824 mo43.1035 16.9824 42.5977 17.1299 41.9971 17.4893 cv41.9971 22.5273 li41.9971 22.6465 41.8887 22.7686 41.7568 22.7686 cv41.167 22.7686 li41.0469 22.7686 40.9385 22.6582 40.9385 22.5273 cv40.9385 16.3936 li40.9385 16.2617 41.0342 16.1523 41.167 16.1523 cv41.7324 16.1523 li41.8643 16.1523 41.9609 16.2617 41.9609 16.3936 cv41.9609 16.6475 li42.5615 16.2246 43.1152 16.0713 43.6563 16.0713 cv43.8242 16.0713 43.9082 16.1436 43.9082 16.2871 cv43.9082 16.7793 li43.9082 16.9102 43.8242 16.9824 43.6563 16.9824 cvcp38.2451 19.5684 mo37.3545 19.5684 li35.9004 19.5684 35.5146 19.8936 35.5146 20.748 cv35.5146 20.8926 li35.5146 21.7568 35.9238 21.9854 36.6211 21.9854 cv37.1748 21.9854 37.668 21.8164 38.2451 21.5029 cv38.2451 19.5684 licp39.0625 22.7686 mo38.5098 22.7686 li38.377 22.7686 38.2686 22.6582 38.2686 22.5273 cv38.2686 22.2607 li37.6914 22.5986 37.0898 22.8525 36.417 22.8525 cv35.3945 22.8525 34.457 22.4082 34.457 20.9023 cv34.457 20.7578 li34.457 19.4619 35.2148 18.8105 37.3545 18.8105 cv38.2451 18.8105 li38.2451 18.332 li38.2451 17.3203 37.8965 16.9727 36.959 16.9727 cv36.1768 16.9727 35.5996 17.0195 35.1182 17.0674 cv35.0938 17.0674 35.082 17.0674 35.0576 17.0674 cv34.9502 17.0674 34.8418 17.0322 34.8418 16.876 cv34.8418 16.4531 li34.8418 16.3213 34.9258 16.25 35.0938 16.2246 cv35.5869 16.1436 36.1406 16.0713 36.959 16.0713 cv38.6299 16.0713 39.3027 16.9102 39.3027 18.332 cv39.3027 22.5273 li39.3027 22.6582 39.1953 22.7686 39.0625 22.7686 cvcp32.2197 19.04 mo32.2197 17.7773 31.8477 16.9609 30.6572 16.9609 cv30.1523 16.9609 29.5869 17.0195 29.249 17.0791 cv29.249 21.8408 li29.6475 21.9131 30.2715 21.96 30.6572 21.96 cv31.8359 21.96 32.2197 21.1934 32.2197 19.9063 cv32.2197 19.04 licp30.6572 22.8525 mo30.2842 22.8525 29.7188 22.8027 29.249 22.7178 cv29.249 24.8945 li29.249 25.0166 29.1543 25.123 29.0215 25.123 cv28.4082 25.123 li28.2881 25.123 28.1914 25.0293 28.1914 24.8945 cv28.1914 16.6221 li28.1914 16.4658 28.2275 16.3936 28.4443 16.3467 cv29.082 16.1904 29.9238 16.0713 30.6572 16.0713 cv32.4492 16.0713 33.2783 17.2363 33.2783 19.04 cv33.2783 19.9063 li33.2783 21.7939 32.4131 22.8525 30.6572 22.8525 cvcp25.6787 18.8828 mo25.6787 17.5244 25.1611 16.9951 24.1035 16.9951 cv23.0684 16.9951 22.4912 17.584 22.4912 18.8828 cv22.4912 18.9922 li25.6787 18.9922 li25.6787 18.8828 licp26.5205 19.7969 mo22.4912 19.7969 li22.4912 19.9658 li22.4912 21.3965 23.0566 21.9258 24.1631 21.9258 cv24.8613 21.9258 25.75 21.8789 26.3037 21.7939 cv26.3281 21.7939 26.3398 21.7939 26.3643 21.7939 cv26.46 21.7939 26.5566 21.8408 26.5566 21.96 cv26.5566 22.3701 li26.5566 22.5273 26.5078 22.6113 26.3154 22.6465 cv25.6309 22.7803 24.9688 22.8525 24.1631 22.8525 cv22.7803 22.8525 21.4336 22.2012 21.4336 19.9658 cv21.4336 18.8828 li21.4336 17.1641 22.3838 16.0713 24.1035 16.0713 cv25.8584 16.0713 26.749 17.1768 26.749 18.8828 cv26.749 19.5342 li26.749 19.6904 26.665 19.7969 26.5205 19.7969 cvcp19.0527 17.4893 mo19.0527 15.3135 17.9453 14.6875 16.5029 14.6875 cv15.9375 14.6875 15.5654 14.6992 15.168 14.7217 cv15.168 21.8887 li15.5537 21.9131 15.9375 21.9131 16.5029 21.9131 cv17.9453 21.9131 19.0527 21.2773 19.0527 19.1113 cv19.0527 17.4893 licp16.5029 22.8525 mo15.5889 22.8525 14.6631 22.79 14.3145 22.7305 cv14.1582 22.709 14.0615 22.6113 14.0615 22.4297 cv14.0615 14.1709 li14.0615 14.001 14.1582 13.8916 14.3145 13.8701 cv14.6631 13.8105 15.5889 13.748 16.5029 13.748 cv18.7275 13.748 20.1465 14.8906 20.1465 17.4893 cv20.1465 19.1113 li20.1465 21.6846 18.7275 22.8525 16.5029 22.8525 cvcp0 0 0 0.56 cmykf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (PeopleGroup) (PeopleGroup)%%Title: (DTU Transport B UK.eps)%%CreationDate: 27/02/08 19:14%AI9_DataStream%Gb",KCNCFTP2J!ls1g9.0b^hS'FI)+219HVI#)ilVg_%GB6Q6\2B6Ig[^E5m=-f_]kLUgH"e^`AZ7+H?WMV-r;b6rm,SGr]+n=)a%e(]YIMp%T6e(]BOGuQY5A83tWg5h2:`E-FFT?A=C+1l+(`[EAtY.TP<DJW>;6Buk5PZ"43r:^'IH?jT3_qj_Uo&IdDmFCU[a$5X!%4aRuqB;>K3?<uCd3gsBGSc;T82>P8+=^58b(UnV?BD3W8/chiL2q*Q*X,HEfY('d7Kbp'k_"nKup=GA!WBZI51P*<O3PTmM=T/lc%>[Df!*PVLY?ar&iq=X=X4q&V,!P15ep-8T7m,@"'m56d5JGf?(mlrG^?%0H$41i8?^%nir;U[i^Y<Q9_h(K?@VCY4ur8[gf7-Hg`%X.$:6<GLU<.X\Il^JFW,ro8%p.q%B7o&frFj*M]i&!uI4LWSBNlcXd3OXUAc^u+e/Nt5=8]>*3-hU<;gh_\=*gY7YJ<Bs?]^UQ=W%EL-BuoU?3cFE[CrGopYkp?D[upug"(r[M=Po^''K?$a?]+-niMh>TM0pf1m58D_8QJ1KrT;,`7df(]SVNh#3t.=@h`<hTt96(/"`%qB=)(pNMtm/oUaU[8URJWbV/u=4W/Kf8ZM]qodgW75f(%>aDN1q>:o=E*P9m`c6tYUTOhQgtsc'GUS-1B&BJob&[FICO4)umfS!o%S6Z=5WlgAP1\.5ldm+'qo<\>#0]0Sn8,m5tcdDBoHQ]:Cr+HPSlPb42%K)gB"KF?WY;L^.212G^ICiTHD5pUf:o^\WYI]HdFUb24%HEiPiRg."l%?tSD&(GJ8.+L.N$9l:E-oIJ[WS%\pc=ZRjC^+Gd$i"nMW,&?F=MXZh"kB:f;h(c2oLAZmC<H9S(LP!s-j=+4hbX["%,U9/S?psK'b.rhk2iLrp6$6U0n/M@Y&]&C!M=<nb_hd50N#Va$.#\Jh8_Bj56R`igr.Ztb"i+YtT]^u<_BNCpIT&rZ3VB!?:48nH%6dK>(U]gW].2X0)L6cKWC"2bqbo$?hV-n[+_h8c)$fclsn/%%Djr]%NcN+*^TbNFrIa]h\Pn79drU<:M!U.)@O3AL7O0B+j#]G;2%)EII3H;=F5pJT0i?W9@@TF?cS-kf&T[;"._/W:3h6ReaJ(a%^ilG@Hf"/@B\'$?NJ6^XW-&9S?i$`s]B6-kBcL_aN,aIEn"WHX#<%H8"4dH7gutA#$b*.=""_:A*juqOsM0as:`!3@ETY$OckUqG"#]l4dUIC/$3On<@UYW*AILd3$k51aFS7c*C_;bldT/0F>-#2PdP)%?[4<49/VtanH]%@Y,M,nWp#rE5Q/B(#!_@%qC0.aQ6>FAqJhPp:B/e(p[krhnnuc<P6lZ$rhlCQPl=GXdnfMaHqodq5Q.+Bd,4);%qC1G8nT1'ZpeC?PJ'23kIi)O(B#Z_I(>qS4k+uE9gjJ'2\+$h0/1-rP_nScn!">NcRs:;<pp$*K#lj&;"Dc74Qu='Mp9TM-KlRjQ%/M<^)Ro_5T:"i^rqk/+Hi,a.4`u5?b0)eZ8`fdLtc+KRT9>YAH569'i$lcm=1qf/h/GO)LObV:BoatsYJD3=ZQ%P7H&j1h)_25:-%%.Fe^=TI"Y;t(URYnctbhZW_TIGG%=9bQ<m0-E#plL,Y(=W4Q(#'uC#:j`GSi00X/)_aIIB5@Z6'*LhC^Srct)uA:-B,d?0hGnC7%N32(QhEn!*1l-??a]](cB`R>C'.P<qEX=CIO0-Ta&e-`Vm$0*RA@`V.9;-DVLKJ<.]+s:f`t6uJlBYIZgs@G645l4S?Z9lKATn;U%)cXG/9?'3"VLD32Y<pRI\?)X!ZpNYKIA(2f,gA88GWjZ:p3L$FT"X&Ebn/B2i(=NAH!.VU6h!WG%m=Xe&Sf5+WjjFnIo7k4+hh+L%.\?\n_gDhM)u+Rhk;3&YT#G0A'TPu3i:l3d2F4-?XVSEH=p9c+C#!EV`q;H$+e!^>f-gCjG-faLC5=B8pjGsS5:u)Iko7DR:j/RK%2l@BOTf#&9NpFtj%CL0sV?/"AlK1nYgG@?#2t,2S`64ZS:&X;LLhMHVb?ooci+s(p>O;6]h$Ut3Xhc5t:Zd=F;m5#64%X@G^F.7W%UfHZ_I*VW"df0st2ncUnh:RcjT!1g@lA]a`_7@@X^[a>BQqF9FiO=QfYQIi(A@/`3j-UYYfO[0s,C$]1R9C*,e4<6kbrYM$H_FBQ%#]&pDh0`.()A.%F#cA\FE7=eUhEHdu,tt2iBl80%1O=jr9Cp>DoD/Q(8c9?^UcD5!B=_s.B,Ytq125&l]I-RWd$3H)HL=L&8aVY_%Cuq$U,tN2E.\7$]a#.T&;'ehd\K_CI6mA$ERS))$pK4@ceo]8eia+5*!Lh)T_Wjh:30LZ#kr4q=E7lsU$f4Fd6u0L-S'>&^r9:P,%#NA$IK<^Te.[@iZ$BK%cTCZe'I5m@395CW@.apN'gPI0Hgn$ds1='ZgYKeupi6jl-i.>Z#-b<WTBj#((5,*,ocC;b)-9gTB3T$3X%Prrhi<s[i(QnD,Hs%'1HkC^=`9`Gc5MiqNBD/,mT:NMCL2D6H61@hl1^o1Uue1WcT-I$bkb;b51)V#*GL&WID,OeZ,T,L-SpsmL2%"k_&_e*QcH/=ms&ReFYTmFCScqC[6:DdG*c+$Pdk&H@4Nh/+QgGlu'ti]I(X^\QjR+aisL]A&)OhqYlX/cIH7\G^\5qVgf?rFgMb%]Xdh4`t?5QcOn\5d*p0f/."3u]DV0=NU?[d#DUoUU[N^3n)a@nW6Beal1MsUrGm6PYKt&aGW2)J4a_WAqW[_I.e^(E<U;&b&IRXo%iuL?lKq%OL#h,hmiW@pp:%%HDmOb.)qDX'\pUTtMg""X7]=YB[mk<#a?I8:lHkUq;_oifsB6VNu+9.T*#E\%cf0A/!?%0F]e<iON%34lf;4MP(6rpAbEnp5XuoB"`]]B]lB#X,`oa7ANh6e9?b3P2g=rQ!UILJ:L\1qgT8\Hj\gf5j:=mI^^'GE#qD5Pq\'mbY]c@*."&%aS>&ek3Qu=nCT"jT0U/BT=%f7_.'259jio?l[/;>"&H#JBR5kjs-L@(Mp&nRs#g-Fq"S'<l-0if6Jt'DrSUO5Ehhkfnb;$m($26]%QF$))bEHt?^mnITXc0Qc%ZaOp2/8k_C8U.Y6nPFE;H6`]b#GgLdE(=JVOCK5C0&T[PG27E;Cc$eXc9d#ekUQ4KHiY11EEhT]eH9[%VD?jB@ngg1nYS#S1GpsE2^`3G9<2l?[5HOh]!0J+gXq@Rg6nMd'>(3dd']n)[Ae"Kf+,c^8Nj1g`W(Z9\^H82#t)l@8&LMkdL[u@%OTm8P`.>q%<X"PM`p7o_1?(!"*3ouVL+NLoU%@2Np]Z[b0H`=d/-m:6'/ZLG$u5[DB]elrb6Kpu""U#q:?22Ec"LcQT7)?UGn%YA%_WYNNbF[\7,i^`1O?W9^V?YR\SmnV7s1;+&YMMtA_T2eiRt,`"VSIr.W"^)l(La'#@EPJ/"G[LQ#1FC`<HoFPAJY`.,#idC.K\[-%LI,QuDnraj;lOREjT>,!"!()<_OH)P3_Y/4'2jO`.0C0RKZT[:H(0I)oO0B<0WQPEDAD<E%!-k1k'g>617/2r!&ILn8AkX?W<1b;%JVHo$/^4>sd9sI9Be?a5/]K\9X4X@-.h,/#gisFcT/&/*SUaOrPYMT2NhcJhZh<-s*#&nkhCWZ;nXF)6lcttU['-11MB?@<,qb,(%i`"k^lPWa1XD(qi"jStXm'sD9cUs+b=>M\p?G;,/407kE`MXrYB"lf%fPR4FfQE*\([F))hpPOg=:r1OAct%QFs;Bm(5dq@c#PAC%n3iWV>ijUqpaRIP"I(4.[Et6,DdBf]_AEYMTP\[<7,k+RUgAh=8I$JlO#Gf>N3(&)@cUJWERNPCEU,:/m1am'=[!Lh?/TC=(p8Dn%$_1)&EegF!L_9J5IS!nf=8A1cq`%VZ^i9ZnI!(`rA`5@C:pjCaZ/6mJkAImP4ti\Rqt'QV*1KQGLmf2s<L^;6=I,BuAZ;.!;'YO!%N>c$!U"\hlX#IXkRskca6El1GPmaW/5A5lEJp8<:`nDn*1<he/Wq<$VC>jL@g+CjR\SLa:C6TsF`sP/Wi[]aa^t*Yi<<^9n?9%cm%BM_9/ji2kW?#"e$"_^%g9\!_`CBLhU@p?!@&&E'F<j(uF<+Uh/<\!VII,h1s&:QLF`K4-ReFp-;U$_),.NY;roW&ZH[:,k_5-YG&%NE2cI//F/-`I'CE9G`m]Zg\@3W#'VcK%+!.Sl2.2:/4RH-aT$$alK6XnL*b#5-[E'eU`@OY](BLPPKSiRnr42Gr,0uGRikZDLuh1%"m/e0(:04XHo@HgB9QISo.r>+B6Im=G[1IW<_aI[PNdHURnflFBf#E\2m&u9aOGN>KjCu8-B$!fA3QDUVN],tRJ;W.e.We^;B>P#%$;5QiS2BhLekDQ)dkndY:#4IAKKZRIbd-jKJ)]X?k,3Y@nEUJNI-kd4hN>[lH:R"jS%5Mf\AigW>jZ>=J9>7j.WC#/I8\DW=jU1r%?pkIX9-(AV'0'P<\4KiU78S!d6.MA-Q)=qgO0`uUK@\4hDR4FdX:t&W89ZXOQ<@J?a5]4N]8YO*Jcl04?W%:=`2Mn'phfqU(IJ)Z%iU4V6EqEiAS6b71n!YoHMU56#/U8/`]]Y/_QLq8SAZ;UKRuZb^,$5C^]+UK"8[Bprc(k'!FQG[eCgO3a?tMi=S7R:S;P$a6#45P]%&/hA,@F?9rCQs>#*El\C0=!m#7/9ESJ$H$Nn"TZ67<Pn2Z.u4j<L]SS-(M)aba-;HVo\o%89sMBf7#c<TBE,gB7eGDOToKg,O,@$%&:K'o5Tq6^cj5H7(u5J="EZOj^aS.UYT!!LScuhEKW,<CXME3"j94%76XWr>R_\><Ja!>uN#nCN^^(`B<eV8d'd*M]EjbCg:`=d$%oMnQe/"HiuH31>]5n4$SZjQFIa<D#r3YV3=N&[=1Q5j"U@*W3D.%3S,SKPLEJTHHL_1jR0(OY0+PJH"PJ]H(=Y<SF+Jq0p(qldj`%?iV]c95n<T#jm=Te$)u.mA:0d`Zg4`+9knU2_fio0RahL#Hs\O*G6.2T!3F`(.`%n'uWe#)hgRJJ=RZE%e8#fcj=(cV0N78[+>I4%k6s]e@VCW9!rSR1n7*%pJ0!O`c2oj*<A8;Aj+]6DM3qF6bRe+GLmNp_L_N6KJJ\uh,`F:+joMJL'tBM8`)_M_.;[n*d)$3#lK4#?%5ZQIr!t,C(]a\(b@6dO!VIpf$3Y,-)!gFJIWIhKb!Mr$ld)@,%K_gTqdKe4\=.Z;\9Nob!HY0'hcSB?8Ss/MDUo20fdSH,k\mXW`%p';=s/pZaW\G5jo2"@!T;]u+21)HNN2/OD"[1cEjk_X[;FY!CnhH[;4:EI\T*?W<tTZU]/]&@h<N1k-8[P?MH].Gr4gYQQf]C"&"%2QBtWJ,C!D`41g]Vob8"pImfVjk)HENQP8W,^i,X&h?*LoL#7M)c5%DFVE7`D9%X\<0J?fi&acO!bEhEEN!W;:pV;K1!H;)M0oD`%miq@GA3*[b<ajqj8*/g1S?,R_2CTa&'URd3]"I7sbOn.gqm@"$B$5RVSUn:"eet@g2ot5"I6T(]SpC?7F9&Z8dsgV[2VStEX_3e[%@>tujM]^i&*'O't`h6.qmJ7s6\fd/U&<U-=o8`g>BU[G\UClTVM*9QlgE+kIAR9I-dAC$<JsO:F^PW'')b:@;:0W*ShP%>$e&q*C%=lAmahL:?B(ptP]onZSJU/`OL'eMEr=o$g5l$7*k':;pba^V;+RHp-aI'9Wk:XKs53mVom1L'I(%Ah,K]m6g.\,%X64iK=iX,Guo%-i5?mD*N?q6QS@5MJ%Zp[V9.'CYZ-Gq`na:-o*#5DC.o/!]1W[V(J[Q8Q>jMD(9:(On;aV@Vnbp?)OF]?55AsBa*b*U8O]RQ7H^G%W\plXj_AV7aCZo+_-5Rr%lZr%/Q6=SV);,$956&XEM1CH.Yl/O=eIYXqAa0jUsmj2BB`:""5T!E],@0.!Z_fZ]Fr>jMRjjBHU6O>%:uqeUcbmh44@.0mh/A&Eh]*/0/PlgC^4<d;qUeUh1oM.@?ARli@,VJW*l35qQp5EmZ:W-gOg^ML6iNQ4HuYoACP+pRkZG3<_cch,%2D]*UbZY2)[=hdbAm;3\8@;*gacsSqQ@^Y>aQHXl#g(4EO*61e@S(0bbf!DdCb2STRP%bWaIY(iTh<Ra(,79AROhVfH,A-dA7$Ge%K5FI1dGd!\`C,OdP%#]T'fm$Yb\3*;:h[(#JHZW.e)*4O>>'=42!Q+SkcTd5Z+>%<?JVMVDm=%pIYo:`pFt>L><k-IkhFVZSu:5D%`UE;LV,M3WpE0!#M]P0#LSlHdIC]TZob9LB_m_aV2Y,[q'pHpU,JBcR\0EF<_hnmN6;jtL]q]B5kh8/1<fa]FK.S/KQp/mfdB\1B%X<2<V7rA?AgHZYg?Gm6b%3]BiaXn[H/L7f[,^W'o&LfK188]27L63hLM.@Jq[ZP)@8bNb)O;++F7*Hpu:a2bL0p[X+":Z]^A$Ep?%CaP/7&CN%_'/H,7nV#+6A3_:O$5l^^N'`75NHSN[5q`U&W0#p&;sd^nF&p[uce?d@eM_(U-p%jDBl1(hiRFQ(X&rl`>%cORZYa:)%/^PM5cs,)/DfmX:D&ZPojiZsq-fDWP;cg9e,^YR*&f6s+-^%J=d>=Fj6nZ*oFb^`\oY0gOcXA`A<U\f4J,YDQIPaSF=?!<hZQch1%Z66/V72B.4HEs3EN3sl=g?KM*A4>W"-i:`ea*o/VhW3mk-9$0B.187RR.W]ai/UgD8R"&^jXf>gk]).90(@ZH9+"kj#1"=K\LSZ-%Zng>FEecViC?u">WG5:5CDdY?BKp07%u/gL3f7.H_1p=ei,UnGY/b+^K\W$SUZFJ'P]KcEf60<mqRUudAqQqRfFitQM7aXQ[YCLq%6.:[aYr`TmUkmNK&uiM.2*"?bO`o-Km:[99HH]i^/S;7AcluB]WqkU!&p?#qFA*7HB!EPTCnY\Z%2"#CYq;bW0Q":Y'$2\eLcZJ%%<lmEJn7%*kKut(*BCm8$+K`07Z?0D=G\Req0NrYDn\sETXi<U7D6NBS$Ks4IWZ"3Q.;'_l0PcQcD=k=F_H^i!CIsCDf!SG>"#.9L%b>DQ)FWgK2fQ^UlNp$pF#G\:Bcl-0I@7?Ll\\N>DL?1DCB'cp?L%Oe0Mr(c@Br2qUV<WT<EU?FW%+F$)oG2GR/#B43:l-3J5XXh^%;&-YNBM%Y0>\+`Gk?i.FcE<KMUNa8D^'An)ING&P8*B'_q0@(2*hAonkNC7gH$"KVSY&F8kL'*NFFG:%T1A)-dJ8'0ING&P8*B%Y%2YcpI`Vj`EkkmP(5EF+9U\"*@r&d#)O3Z)/On2N9?MA(4k=:e71gZi"HkJm/)2cN]."eJR6l2GQfaKHF;\[Wi,4W4*oS3.&GAkcP%%`QUMM>7Y'gR$?c8ObOh?D`T";Ml)hEZR)X"O:MOZmk1<PjE;K(NcLLF!L^XaO2V.@=+O#XeiY3e)&[?D`t#'M[^T[3ZW*,MdmJ3%Q+3PYMd(6VH]9(ZgLmjN9TPrjFIu@$-#=9V5FgS[2SFA5iUm,Uks^%\>uL5>1<bSP#Z@8L:R?Mc].m/tOV-qO7^e.ujiIsfaV("G%R9HJgAF[g%BXq-G?\ci?"72s3Sh54>A@iOg!,O.NL_3f,A>b[b9sr9Q%k^Z@h8dOcPa*oC=#"i&pC-ts;P2#L9g<PQ/`+"s/kFX<%[E^rlI@k40ZTRqO!VH3dqbkC$[skU%S)<DAmrR!^GiXdC)nm[m9Wq6?D46idP::*\Xr)UgPJuVI@Y-jPj>g`FC#Uq*cSRhlprp)-%7%T#)5>&4bXsPjW-%4I8biQh,9O7oA8?p1f3A>_]bKG`'7hM;^\Vi7X)nC<:*qbIA3o=5/)@Daf,.cQ(.k+Fk$.VTQeP6A"8d7`\%E7(-^C.KPI/.GRM"fc76JQb#&gSTG[j;1flhYNN%hbF06"H#(IlaIPD)DW_lHFm5b@2gX<0bf&cd##M>:C]Mj;0431UP[$&#:nMM%Z0Edp/T]eflf9[Yg]:0T@]Pu6Xb3uFd]D?L\JfG<'6Mfh].?(`]&9p&!GMEtBQ4+n(5gZbN7Jr0<jXg!Figi`o3P#2/!4mT+rN<c%VjY]G*2geN(u)'01o/PI8iF+bZE`drUdK_E\'mcnMG@+p/?,"hE8J`%R!+]P,O+VGm<p;MP+ooh-n##pVR=n@eUC$=nH-,e^f\;*%UO<M>8sFhB!g'G172WNp[*tO(;/hpl&S2Q<SVpc[i`'LLE%tUt.6%q;1u89h8,&B=rfsAA[8HIr)4InE;D]N`1c=0bi?8"]V1,9%%I#m"-qfd/ChaPQ#Eu(A@ou+c^)eVV]p\,AF`6iLp2u6*&lD9lWDQJt&m8h,`cjX39-(;h<e4r'C!AG`'^h,ZB4+(uc_Zrt`%&Eu3%`>2ZlZBdt,.9fJ=(>>hQ'#:DQl`'+U7r>dr'9?;u;D&uJLm3Q<]GW'P$^8g-+tB]dpYV2%T<Gqb2oESG@FFNs-ITA]q2Cef:CMph%c7gSQc=7@F;6[1;UDh26l:F4J)UlL*BZ8_aOr9B6JE%PAJf6kH0pU"Q/p%nm,)4M-f#h95O`?bpeOT5.DkK=^ko\A$K(ZUBUjn_'%T=0%0I^NFaW9'XW3ub8jV3R]Up.Iu[++%d$;lmN4AbFn*QR>Dm8u?HH6sI$7bDpH(0M6t7H*:dsa9B#46Y!@aP\g)WR^7,M6d+XI%T^8T(>17s^W+hk7ia?&P.$pINd<F/:$=3C\Pip/LFcgO%lgl4%.QIB1Dd`7W(<*aap"bi4\_mn;V2.9q:1h)W@U-96`p48+Y#pZb%m)IFn>]aH/P5/2ga:\q.nPEmfAihbNP0'!uf&S/"qrbOn:3?*enJ7RB&\!"tKr3`m;`ro'dr1m.*cIb:-e"fTW&maSh>^th:D@d<%d#-rc64+oiL[=4Q()@_u1$:O()$[6;,dIt+ef;+I_1`T4[P#5>P;(f/^,GGp+RQKd_;BH#iLU1b*T<jt`E`iE(i./Xf[1qIa'g!#%cJ-&dq/-dS7ns;?:V4:4$qbjh]s4%@]+)cCi9kPMfEs_hLd:!NM9MX>pZ:SLj()_"XSR+_W[3j?<qal14Ca$8@8G8Y4rO,H<hCR[%6hES@p93$<If*-c#AlM_c(;N>\ErbUC$7!*<(``rHtN<#j)^A7&"3*aN7L"r5SP4`7,&./U8ldFf/>'oCf)L*?\KH'N]5Hih?Fs;%a8$`&q$e[Qqb)gS(RV#)NY9\rPP\"YYcd[/*DRS+q0B9k"X]Y6]mVt4p\#6.\/1_*`U::BNE5ef9tj014<<?Dbb[IA)>C8k@e[jR%ETO30^p7hWCg!s\b&UcjXM$-l]2%B9/R$=sXYgcpY0]&,Z\Zd\0$\9Mb/uQCQ'ni!PuUst6'_87>e*aGFZoH"7W`pa_h_s-Put0D%,Lh_tmbX$=Q=(;+i"d3B,@^BRfI1&B;8,fR[E-oj#pcdEKk_C&8Y?9-RY5AfV):[:J/f"r1g1K_+=@-@i3C*cCiBoGEXZdRamV>V%2L''-n/>9n&BN2kI)uRS+e"GO$K?h=.ImF_27D5nOg8I5pfSAjYY-RT6o_Hj2nh+k1Wn_<j)r_^GB*"Rn^FQRAZqMrC^3.?$"E/=%YAB"qBuR%Ca.r8q>&Lm2Y8@sd\WVb^I<]>.&mO%KX6^$iG(V6M5g%?V;Z0HiS&/ZFBN$jGW>h,._(ufRWKY4LT8`J#jN,ZB>MJqu%0V(_=k/bg;RcDo*U,n_Y*XRU8aJ<IcB;li_gsi$+ZUTRu61^rnLK>>]/a'2+6h*n<$a`I#K@ZJcg1sI'B=;THS[_ErW_JE<<jhj3%[J%j[?)r*t#!G(c?*(_HD=%dJlgs>J"*4t%6LgH^I&s$:f:"_LI_!uC;@KdfaKm4rYAGO6f%NamD4FnDabm4,ka4Hd<g:$=V/8rK%/YC.^1+RY[TU?BK1P9jf/BQ2#fie_@[]IDYFc<&(GTkOoQq#iM;2Jq")+YK\"hJ3&aUP(P;^n,GfJ$5lMeTJb-3HstS$id(\Z(=B%2=Ub3@ca3A.V=]N/*\8s,sPhODDOn&>`F/)YZS7*f(p&gR3mjC$JXc9(hT9h2Ymub/Q%IEeN@",GRl^#-hTt#A69/tcX1n^H1.<e%RgbNMAtdH;4.i[G"^__]pK^8iQm`?,5e95]>JgHl7fcF!`,6,O*We$$CS[K-N0Kdkn(HqIi9]q\G<\(a_:'JZjPE6Kd>M`.M^Pg`%p2olWIC>YV]B1?mRUiLjO6eZu&h>l3e9FB+IaS"us6N4Iik+pR7aZ";=EA4ebCL+5h8P+I)X24\d>3'anCZ[E%IUnAF)@%_OM)pY%.*"Wpd@>m-H3fV4=s<TD$IYoU+\'f3N([ZL*DNA.Mh8D&Oq)TQZX)=%Uk<H1P&[if(PmfBB:#.q90qn"+Sl+Io\F#[`MXf!D?nQ)%],YmhrF:1BIes7LIX\=:N6er^'T;F*]T_^#<][:U=-!$tctDU)8s,Z@8bq#N);,l@1o*o-BJ=-B_L[7Q]uLQ86fWe2Xih@2K9LSO%Aqt>-<U1,j-5i`Wa`mP6cOBF;^E'ZCMG]SCNaV"2FMS.846$bdYn6(2R7EI>(e%_5[gf(&1n&\&c.nVS>B2[ZK2Q4rU%I)YVht\r%D+SNB4`574-;N%'*Mh>64\2D_@Dm/-hefg9]8hO'@DTR6NceMPZL5@c59SZUBmn$CE]p7I/4YBlGcLH_SuZY!3_bMo5@N0e\'g,^%S56%=:\guf2R?_$f.D__XQS5a93_'sV-;84m0\"\IYnnuVO<=j5,b8$'25pYYnce/7".*3G?R+SPqlpZcfsS.EJ6-iOcf?##)L2n%`CRZP,EiU,P'WJT,@P+G4qJs2JrcMpR`2k/6I.a:7hU&Xf-Q]>F*)!h]M/5QIOXNB,i)>o12B+t1M5&JcM6ZUkK:YO\sEsS%c&Du%ghh7po;\8d&DZ:o<bb'YgVsukRnFruGG?KURP+3imoGFSmdW<eZ>pj^&<p1^(Jh?B)JcDGaE14,mSo,*CrgLlZf?A&F*h)OQ)XB!%#QlSblWT=C68'=,TJNQp.aX.WA\6IgcjH#&M@V6BJKEAH@ahKOB8g1._/(,kLPA4nappkA<8n_hL6>"Oome3fZDm5"jZc>-kWPhZ%g6!08N,1O.^3X6n</oEaj1_prOUo16Ts[h3G,9/CW?-Kbft:G?d`dROSmO+6FHMg[FX:\ID?l=`j:(mD$)<@e\)RlZNjqhZh^/dC%#[,qpZlWm??=uCWdGEW?UHLhIpSUEUYOhXmnba*fn=7J`L/(pD::VOKlhsBUlCGg:`CcA@SeAP]?DO,oV0`phT56,@[h5$'ZAWF=%%'AZ.8ho\c\`P(sM:,PSj=8<uMk8/6c\#?aH@]/Dd\L*cg))kbAXf[30%QPj=dLs*?.@psf\ocdh*`B2)Naqs2;Q0VS`@%FQ5KE0%q5e$<ms'Ys(jagr3S1]FUp<"ae;>oRkk.0AnMIUt7__#N(E:9XH;YXSLY&@bL.+mgh:a]?RmZP`Hr@%;?s*.,g'oic$o^6V$nC0&%,M_S@g[RJ#p9XQMT1?E<MB653lS_t6n8%A/mJ9a_aB'X9Z4%&=XYHnWUc0^e`juK)E;*c/%X%7]Sl2S!GqWVNm69k+Yi;9%lh+j(%$ddos]#T/>O8%iZn'O;TUO0XDpNVbenK-NH4hA[\FGJP#Nq_c*W;Z?Na*VnM:Gp1>F?]jV*q.K>hP5G18,%7hmdV@S(Y@SG]mI@q%mk[0)dGXO9h;^Z0a*Vp?QA4E_]#T/>O8%iZn'QQopZU>fHNGa)'+iV7YOR"AJ$sSiMVJZh&OcJD)k4!,%*Z'Aan4&KjX3i$&2OZt%=I>6RBO^nqMhodns%/1>9t(\ADe7<C^Qlc8.(SMO(?._R6;SOqj\,B>LdGre-khAnNe'5%BZi!Wh&Q<-09Rec'(X?>CL_R8qH\;m%$0Mm"h0O;$9"Ls1?pIASP5:nTR!ad6\W,1e:.d(";Fn/#V\hZZkr,.DjfB"'a#k]k;)-n.#gqsPVsB7NEMHWYa2u/f?%4bX/$h45%oj6Y7"4J9ZMM+oE\AGXJ-S5C&:E%3FFB<=2M!7K7N.acr=CEEPKWpJfeChAf,_@4]B<AJ#2@51LCK9*4#b]6oIIm)\iKJ%=*&u^6%C0@J!DRKjfn=T@-\VD)uH]5k]WZtt?/B=V)Nn-(PgS5-<nV-;H$]EOmeip'L!st\M-)"X+880Eih61.&1q3`]N`!NI!WD8=KNp-l%ho%[Zr23+T]dEd]F@W<D5YO_Cg1$'6ZRYkEm92Y^:U*CS3E[a&A1<Rcq,O[sk#oBS0'uo-2U>j_=;;d!Y1]i)dh6u^$K!lnHKCal%m6[jTBPt=fW*&T4UN/J%10Q%1onYlP=p\lpV;s.Y:U*pjl0`Mk@S_o,MA<[70^\Lr:=1<\FDinXjIS:&oSLf2MWE7Cpi6]S;bKXQ%Bp2B@DbM-'*NbHWqS]'+`%daFX*2U]74:SpqH<G]5M]S:?,B-CJLkB\0+)V?LfJK:LnRp$!r&s^!Lcs'Wfpd9JggVAX_fT)BN]_D%c>V\7*<LJM(plTA.Fq'O!sG,[!mP=#B"_h=8h<EgEJP&O+]d]hcH7P=bFqT-?+M+ConDZX&meB,lZ:in9X.]hkVeWfC6;,IR"XH(%cE=H&-ga`CJ><=63jXI7'[(upUt#$/8kn3.VWh"-^<:Y_iP$ru9/>Cs:ulHiEo"I6m7$KKrtMj=AZf5(o-<U@Wc:1+GsicY^Rd:#%Dn>4lIdEo0'jhASGrEp)@C,E'e,b7fM-B6%,jI66;)a+[i*B+pX-CH-;63T-q]KhF853(3Ff$Kh_8Nn+j4&1)lOER+Y"=.TULN>,%BDWmWB&t5@mT!Yc7(,O-L/IY=3l`WLZK]$b$(^nQ;iN)Epklae>5Y`s%]c=&M]>snUn8ttPL_NqI>[f.-Ut>+(%`Mem^a.bjWR33%@C@rIbT)Kte"+\!gEueC'80B53lnpNWjb`FRce/)1sb2=Vb-;OZ/IL?Xk>:0PM;X/RE/P)bZiCbpF5*Weg8pJA9^$#9eHc<=h^=^%l"ZS:MC>n)jW0aWRCji3F9Ibm&7.cfoHs1i->u@+N,tkZ>Xai%`pMj+I7]@Kgj3)@h-k`?n+:,MPMK.V;gtLY=2`>?.JJ$F#C(Ql%)]m9:?Gm?nDg'bcFK^ZUg0dV0r=itN/]r3$n7ln4e]l.(G=]rh4m71a/DA+AkQ.j0krS$bGG+!tehLM3LHi^E(Q*,5d4l2!c3QGe%8lfk$T0jZN'+RYaj/EGI2^BOZFUXIq(a+Y:U,X8*R%TOtK#<-h??de$"m*Q6'L!\V5nk@CKY?M3lpmti/fo?Yp:?Ic`M7@hL>d,k%B-,p_%e*FPp3,<7P=AE@H)@qUm].n$=/Jei3l'L:W\#Pk><.:-7sa\:C;HfE3B,B`FEcD(<&s*1;/^Y)X=g^,(#!_BI$H4`nrZrG%Zc].ki_YCu;^QQT[KQ+;g`44ql&hSE57LtG:QO9Q_tPP*V$rL$LD_]uWgOo*rs;%*.<`R:lh"R!Oh>Hr57Kh*;%s\0>^5X64qu[e%BO@!C!nu,F77sJJ3Li<fI-3fQH._k$6i&P8HhA0G^&[Xt#^F`1cJK_f++q@c0&+L-6lp(N`U!0VJXM!O.JHWCnO-`&mN3?Lg?E`Q%pp8ZQlWYRk,hq'So'mH_4_lo$?X"@`13:uLENmOF_.9!<'aE8mUS8g4ob^*34r$5/KmGeim*JmJ!I^i1FH,:?:]n3"fGR\%^:rFg%m;h/h'3OqK>6rs*@]phOR4c4WI"N<h.'+n7PZG7fD-X,YUYDWr-eThoh.N2_d+mfo;`%*%_jc\5*sMY<-1<3a5>(a>Gi-5pABdQb%`L:#T=7.4ThROt3`MOmqS"?>j4FR-+oObMpH"]/MenJ?LBg''!ZnJ_!3JWN9IYLUdO7po4oupUc<1X0kS$\cao:Uafm]@LgTA*.W%(S?j3]8s-3)j7eo-a[aF<Zgp*7MaFNP3e1J\l,RdOg$pu,F^h"b_DjOn?(D`!^e`_P@_'->X[]*=RK4.'B][P2rEHJr,?k*F+8K,%ma\@s+m!&FhgL#n1k"u5g&:m?mNunQg&'n,07bK*,]K_8"G0rg[RZWM5*QDD93JffK<XCaKb6K+k+d1uq:fi_kPku5s#U41*LY<a%UVHh13P%KNhgQ"6FkXLR5ht_i1r-]kC'2$;l"YPF]"tk(%i%S&_J_U62>jU.'iZZr=f[h1Ml`j_/Le*(B\9jT=_Grda[B'fI_gL2%3,jBEJ(S,lWGBLrh)+VIi6_8uC%tcA0itWEd/Q-/W^+XJUTe7RN+"Mm7%ln*6BF-9gGF$_JkW424i!L][m9Ee[*YH=]bZ,_pJ3)W%e#9N$2)[eM$\'[Q2)qb3\daJ"9cN01\dP:Y#6M+:DD'";S[U7X+j0<I$I4n,A&^VA$,-`E)&q\lm0YQ9J1>t4Nm#h)/a?NC^fkZu%E<HmM\f%9qPTd#B6Gn>0](QD"Uf^'icre4Y4Yd6+-%S1s];r_.&j"jIEaoej:?;Xf_H1-u9;Rhp2%KJlKB!*"D1(\\G=o$ibhVL<%Hhn"Yj8]i29F)B52Ti*GhEDkH,8V1i;hM\^j&j1l'Z\Xqp?V]8JKX,Z*J0_g,JoJq8nYNZKb:Fp?)q&ka/kA*BA$jh7+C_g5Wlbq%dkjmoo^]TjG*TflXG._X&Vr9opoL)+.DnSl$a0jfD&$0^V_$gJ$JTQ!<k=!/^`L-?XL3_+lWO`B9`%[m_D)Oc0H\q1b^WR!Hf'EP%kHV$i*KR1$#HkFL9s/TA[3VE'G3k^<[$O0aO)((6^qqDu?)h.!Z.sEH9*Z8%kVL(rmN"!<_^RBDh4>]k;#*6IY`$SVXMN.\eXZjb%]&_W``"3h^:H)j@q/D"T+KV^Y/5.7p=4u0'jV?2iguJI\qg46-@,DLV/^mQ-*=)u5j<@.;&_DeGJROl`dipYpD0l_(E_(NhattQ4%/])ZA=qp:l**B1@+6"o9G@KYs/Hi6GL+Yt2&Y[BnqhV/2aSM3;hjWe>P'tQ]O5o86n4FikRn02[k]bZQ9B;o$nWHp-m.uIk$DLQ4%\nL&f]SQk_X1W/_.Pn54_dh4'#$VEmD/?9m1`u"8Y2p\+IS#$E89DW=c2Mhq>Xs?NfIH--kilrhK6Xn$dK3ND,3kHkhI_+:lW&B(%'+Vh0]s(i%CZSQe9fh1@\'`_[0j%8=YE4.^XKYd`#MLNh]IfkJ,bib1Ytf7*EOcV2,B`+@\+p6!+fon:mM?]EM7\TI1>/BjfK"\,%G0u$:$79&k#p0a#FIg8E2T]eTB=GPi'kD[1Fj[s*['m=OXDa`q0%@&>O:)Y9GM!CA7G-f0+Ggdf!UdP_mO)SKk&g@"JKj&W@@^sX%>S5`(c<qbeJMAB^VgU7uHeQr?]]ZK;#oPNoDD'R8nL/1/Vf/GV%j0\%44-[$r#^i;1^X3]p1s10SsG)*hnFZmNE80FJj=7*I@3-D%no-V/FT?al\W3.!I+eT+/8/$,3,`=:3&Yf0h>86%i?3(@YHI!@^RC0nQbWcU7JsIf8g6J$=":k]rCR'Fl"2V[kNV:kdG.t(!mDp@%54FKABcOT'^h"pJ?jGF5""SY.kV0F!1fc=ZCoT:?S+/eiTXVJS`D3qqAR-4p/HkH:'+c`O]tHIfh,W<8rW6mgdTqZ8@W33nEWV]`%EQ_)^H%LP^<!`X&YXiE^J2)f!;1m*80/Jl8%B-nJ#;bXK'dgPU60%:6"Urs.#((/3!,Lc"!5h>F)!<=>HcFUR2CphkCs=7>,+Z*n%Grp4ClS0IJ7iDdM_\`KbP;/*5i1lqodad">lhm+t6O/hV20.(_EMLnp_Z_Q:++o!D)%8:U.??fJ>f]W=eE&_^FHts3"k#m`mPt\,%D:kcn%=J%!JSSblXHfKE9kp?KdOMK#F)4)HYtn"qVl0iHlt`%tc[R2)W)+pq!c[B,XA(!PST`F+-1*-ea\/X5+'j8I'PeX=)_bP)%h)CW=W5):XDh;hY)GmY6#T0X@$nT)6TN"sB4Nu0PWH^^0JQ\5C5(#`@,Kp;?,$8.!&dP0s,D6Al-S:AZ/nH=33P+4Ug=K62&XZEA%0ANd*/Cui>%A;i-=0diIT])=b/ShMTj],Mj$b`#jY#!eOZG90d>f&!q#uK0WJOUJa?-33ZR'"'+Uq4DX(P&3X%*LD&#HEZo#7*j=%8=[s,&J.`j\Q.F<nMW:&lREhV!E"EDFt90<!4A[9bV3HmUHp#fG7h)HI3U8tJoO%PMcX+;C28-^$+(lN7dCrmmFXHES-q4nC;>QA%/Yu`,6L`c"elQpfF[/H6UnFfL!-X?0^cE]^d(%eR-JX;Dlr7_al8J_G?4cFY34"=#ED7*]=TMP\:MjYFE>_n"7aj[04,ghn7Ksb+%YZ!IN=/RQW\oemYWK-o,piQu\^eM6XKFnhED_c>D1gue^)J.quB5HXrhAbDUV@c9;e6TT`M^PPlStU^S8m0.7$:#.V9-YY],"@;'%KQh?-h/:$D(*JM[B[JeCn=8+9pBB^(,6Mmi87?"iU6.Us(^T?cg@Sra%TGYD(agief<fDI^kSu[X>k!G=JQ%,%%me)*2gfO4:U5q%o-Q4[6_[-]LDD)kic]su>4]OsDe$DeL#j[d5tUFQp>KRWQ'DeD(T:0\Z5WkG_$0mEH>*BQ.-t'_>j@uLEG84LhRU.9!@\S@E_X"+%"&iW7i%*H#"lnM\!FV9b6`VgnCu1>gMrG([du%4YDkK04=Xn*&$MYX-29t.Bd8W@EdXX2;kDbIj)RB\L#0Q+W3qUuJD?G*>@N0.U%]UYEGBQ#58ZOJPLVF6i2?Y6PF%9h%MmZe.PW'50=YIUUJ4Y?/h0cZkGpB(d,+BkD6;i[7PJrLE&Yf<pjD?E87/u(*%]!041Aj%c$%7Y-IKaqR/u:pseh2Lq&oghmT#(I>QK4?$,=2+o%rmd;EpCSJHe]F2O3#\p_5],#pLMXNrld])%f3Dkqq1l+t+$f*;*i#+IMC#Zmd%hR0Hi7[[E`X]HEkOA<f6jkYabRAuM)dDUMQ)NQR+TX5U&5,F*86Q7WXXcgBJQW@9iEO.uqXYc,a'oV.O;+4Xs_KQ,Pm47Z4'cV*u%-pc=_,5,Jq!a,d8"Ec0EZsFMm7F#]N)s1g=R`h!@0iu/e\>5>sHob\(<W"Tc2C_1G+:EW5)EA'?`!=;'m9H)ZLnGJ:Z?-.o?:_#U%#Z-34]%5Q1.bQ7&=B:h>_G@'7@K-NJ0f;e,N*L.,SMg5eR(-pojLq6e%jHZAFr3bLJ;0mK5eTt:$aRoI+"Aj8gk[eH2Jln-[W3iJ%8Iam^!.*($!*BD:,iX2WWg\KuPPGQ+:PIOLQ;t4u+P:Kugo.2FmT*%%*Ec?H0IXA!cIE1fWuItIX=K#!,&&j[a>.k;9!#3GM8dQZ%<E[J+9Wa_"g8:+G@E7B=@"g27E*-(^S$J`eVce#b0MoAP!hQ5Z"=rH#(tM$h.__ur-A!OT<`!q8#%3If>unCbna!]a#-!D^X_BDT%=A$mK=J.X!),WZO9u7NU<&[*qA>#otINX&F?"K*KN0eto+pk3\i#bZC!";bTV6#oGqGg":!CON^@@rGd)J)YDQC7%"'I*gV&tP,"%'mE'%;&$n<-&K**6Xh2r^u@rdg7TAm@PmCW!A([@pbLKcbGpC.+=OIA+]Y1BWZ2e`'p]SF/6%b$0EXf<DX0h4#@M6KJ$ikP]F!5&%fds:8&1Mu`*nZ?]P(q]MJJo>9P.Hm;&%CCo#&@6$MZA8MKF&M8k:Hf%-n/i^go4STdmf_0QNh1L<2`sIofc=3&L\)fNM)cO3=&Z:%^nRb?JYEj*dZCC.&4@c/2P[Z&e3Y&+V2gh+'<[7BGQ7q3C?nE,,XDWB1>l7^67@@/+%(=+n7ja>eqsH\i+SG`s%p?3?kAl>%UpLm%`RKl*;)ZZ9&)/e.-[CXT;3@U6CljLl0S7;/&t82)"CLSa(5!8+c"m^H-6bE%>_B+"?qq#OY[I`.D(e@7V_aa/G7K_ge"S/9&n#9-%D&L6m(r:2<ig.ngIr0lH^p;*/NKd,CldT%Wbs2p[\n!8oem04!eog>D[OfK%3,\$$d]s%L&n(qua?UgR(,fULEId(B#B4&NFC<UX%UEtgmd"[dOFd.]of$TEXapd]C6)T^r)rQFo!d,B?'d-V8aU#[gcrC7'T!^MA4@LVBZ-:+.dC&K3$?e:)s28(@<\p/5TL#S==W#79%&9LY4AG`B!--Bu.7B4?R]f'SYfDp%&piP$'CJlYl+Bl:T(fq-u2M>TCTB?4o#PfC77CD7YRl]Spb*'mfJ3hbqR=n,H.`u"-,C6j+%X#+_Sm*[6Z^+#W*-lPJL4lB$'T\62T5R\;)VkQI-J:glU?mg\a!(MSQJVgc>=BISX*.'D%AC\L?8$)u7VHB!Y%tHRlA77DB?k]A>%N#J>nb#$YXp-FA0)\<cR>GPu[524)^;6m*M>T&l7.FXr<-;C2N9D4U5/JgZr`7/n"Br4a+")sEoX([Iu@'i3Fb)>1k8^>QG(6i:]%9kad+V8qZcHduc:(GE[`M>92aD3&tSP-(VcN"+9GC]Uc"MR.)m4^6)6&adk,7ddae?.^PlUBG`li4&f^cG74bqMXN92QK!+Las\&%Tik69R4)sVoDmZ9Ik@,:+9"7rgOHRoThk4>k+^s7gu`9<."kfcWg:\FYeSQhb`6+X7mTjIJ[J_O>/,)8#_+0T^'$W:K2H$\\38u6%X9#4gDKbP.@M9*Y9kZP[crl"W"0a)=LS,0.5TGb=!,O'`\D=>bdZ\KB?qmDH7Y?@a5e*bXJ2Qi(hU`ulKfZG83\K5*`Vg/'3Ju/8%$O;h6!&a:<.]YG8*7T_IX;.!W$N5,N[LhIa?s>'/X,Z5GPnh1j*"HDWUl?/0&nKg]lP"CG@%^W+)^8*7_LgbM_,5e'j1,3SU>aD7%jXW0QTR-\?\$-Nr[domaKn;Af]i*;3^^.JV!,Fk;l:qUQ/X1d)Y^q@6CZcbC:.Yms(FRiZ(;T7kGV'AL!JW=$%u?u'eETqhJu$Z,%KEQAt,7o'0l2]aH)Se=$C*9Tt_@5YMi+XNs_feMbVCJ"NR`Zho_7cUZSoXJ8;7ci;6`6=T$($0U%jrJ&Qnbg"W]MmDhJG^jae8`K%aF6BQhJfYL0OP*jOVOQB%_rq$Tr"t0l73E0f8mkhOqg:!Zc48kW.'gV)Q?L^)$16iSq+VkW<"\L8crV06=A8!$q0IrJ3e`F[:<Hs%g#*&WAhQo1C)"u&phr"(Y,PkDaI[[aN,;Ct"P[VSVKR5TUAk!eg1:STg21LdU:`&U-!MVrCF`=n?!YEmCEr/UY0/<'lQK;\Qj:RW%'+jO:e-$,W!>s1e[B/pk-8Ij@D`_Ma)HIL!#j@Z[2T2%%#f\F\!-((%LK2FO[E;,E-;lF!c3ROA1m<[7>H,CYA0PbW9=G7=DepZ:%8>@K?\.$4)4;!i%OcF`l3CEp:@+nL4%a:Jp?A;;,=T_.:PbFb&0\g:HL2d>%KF=XO9oZ6&!!ajo?r'`(VgLa!Bf?UqQV,np"sXsB%@&]'kF?HhC!/0tE63kHq.n_uP@9XY#K5THHhF%?WK^^i%?H&)_"1[J92LqK(e,[ET!>)VRk6/%%BT+JS)c=C7pD05(^jo-F([VP0%1Kr/"KSfgJ8Y'%%]Ta-paXe$S&5Xc#DmU)bJ95UtPU5<!5\o@s;\>W/^`^/<N)tu!5[^]D@=DU#Q<(-#b0Y;<+:+F4!OrD.]K:"'%'o"B_9%Lpi.Spi=H=>YHJ3iC;Z9D+fT"MGC1e;E`?mY+B%sIjuQA+Q[ZKb)#(Dq[Z"H+;IE6)3PKq&A)V+VHW\QPr9.GD;FqriD4%X_Qs,!uN9"A#SU&5t%`Q.*.Lk"(#Lcm)<`eJP``%dK,;C,[aIB3[iKk#gjM?PQj6<!@L?4AZIShD)grM-(D3JIo-=+dZdl_9uDQ4%]FN.@,R-)33X0;)7)Dj,>o+e&-&VlZ<F02<hX>S%L#jR$C%-4&:;io`g5=1&:k-l!*Io'FA0QM2e7o=M+k4Hl*Pgmnj2nD4QZ]^8%"Z7S#5m*C<ab<h$C*7Ij'6c<9hkpkeY;(ZF*gqkj1,+3@gB,_i^>j%[`-*:]$^6/oCG'C<+a`dR+u%*l?M;pLM@H4JQ9#48)g[F@%BhB(n#c:7'k[@7'U9UqY"Z*<IqIs`K%;h!LW/_g1RMuW>:tCU];AM#J8->[g?/0jC2F7s7OuU%[:)VhHjcVS-YeW@OV)'A0:fT:4%(o^0QeeDcISsiL,M.dH,+ddg2)+Boj4uRpg"GB1//\nRj_'TEr$q\$a;1f8k5ph+tn,RD0`7"`hWEQl5aq1Wj2MH1a1sd(E%F?_c%\JbOgEE<O`8qm>.0:$sX3Kf<9(3'o$!F;/;@WWB.9/E&VA36Pfl*tWHlt:SV4IYIGaEp?(.j?hjP[TgomLLdIC]OG49SpuE)[]TC%hQesD5\7I$<[,:o(0"tW?tEbS&;mttLtEhXQojP`FtP[\Zq+IHO+N4GKPDnCQ;7Rn`YcOn#U^N[Y,&Nfp&J"[E<@cM6*#tXTFh30%K7$sG"#uYJ"NqZ;CHu>rgrh)XH(^sKR/$`LKSp&Z[p7E#a$o:s7!fsU.i58XL'cBLEp=ba]uJhZ74l=R8/7J&?.e(<:PMkLCpjtA%&Vu?PO5]DXC/9f7-o1'dmAMZVYkL'RG,,=W&hS"NA5*1;^e0EmMOY?+79m:WI7Uuc%BqMr-<4iL0Jr[<&7#+$)pi<#5rK:VaHLk$%%7G5p_NE5SZ-0K['nW,;oXrEkTVSP3\MZ9'TLm.X+aD8$$@oN8%pP4LB4,4j3>Mm6j-kh1-pW@<Um2'J6[(X(Bs<m88iDY?;.XJW%)ebt%gPC+_R_XoS^lI[3d%n+J_$HZf*j?<=^a?4[RW/F6BI%IR1'#[h3*P":!"@RBJs#.-d$[:nV)4:b*)[D,?puS4ng7sV+Jr%-%;04D-#An`8MNA%V!%U^tYXufa&R(P&mb@q5V'U+QBcr55dK@b-Xi48(XZEs)9i`H-@E85(Cas\8Lk&5.kJDlJ"S@[MN:t-:!F1sH%$&[?%"#jW5]a9KQ2VtIn_W+`>,(&t6&J,B=bTrTg_*fh#NNZ#l+KRY=J9H+r`TRR`$P%"T@Pga3-`B4UoQ[aNPf:Q5b`E\q&D:Q)%X"u6VY8\3n;C(KG:Uq&3?/-sWdtO?kBG3.o$UitU/p#0C]X!7#.VZ_5/JP8-Qtg$$W!->40sOl'\au+P`!N$<8lu>@UBE-]E&9]/%N=FO'ia20cfYDrqYXum4.YnL5Z=q]f$/d-?[ismH.o;F`i)j9li*MDU;oqL?JQ3'q=g2daX0q!8.RuQ8p-9m&%$XFK:m't`'EP=f%X-<%iC,c2<V`/"%PTE)I*?f_^^""Gb7-6Qb"BPn.Y=7RTkG/oh!N']V+N?e^o>F2C!7YK$JAGt4a8oQ2\EmmS!75ED!Lk:7-=*%]%5hjok3q)<E^ai.tgdK6tm2?+Lh?`R[><Ms*RIZMN>GqQMe5>f!C(3lobGZ]0=YLL\&!@E5_>53!l:Usken!O#XLnP7,G-MiXg!%R%ctB."m<6WE]1gJjIN%HSfKNk_D!/5Bm/GE5BQqmBP!*AdJ3MIT`"B2L@r-0RZ4k\;p/d?.8Q`J-EPF91S7)rfJi'Gjj<&-[Y1D$X%pQk;aXVd<k(81p`>^%;(i>[&DX\IU)Gg7mpiY'V\DM)?M!t8u%O@-n-g9^,SJkQT<E@\sEp;YhLl]bUjXIt(I!<A:)+:L(bTZX-!%U!S=N4$XIk<=-!,Q8r0uBd$eDK!$A^f5-`Z"fjE$I_&C]^5ABcKddTfm_ZImnsd!WT2jrdd9m2I.iod_7PPGL9E_7VQTJF#iTrH0%CG?e7)9U.,MerY:G&1CEarLN92Mgp/*3BT!8/QqlmK&^!!<ss8J9[$EM-FLg!8!(?Rt_.`/VuJ6_V'kpl6Va)9dMj$*.22!Cp-Ab%e>sHF)h:LpYWeE$=>R6hbS1Lt'qB::\e;_nR+4M3Nn>P<3>0\=;;6od?iUSp&dsq@`*h1Bjjl>X$<$KC!X'Gi]HlLE&L2^&EYP9i%2$f*q>=fG/E0O-LpAf`/XD\G`7:;;CdDJKa-j[F#Cc>lG`5!HL"uL/)XXipo6-3"Ml2[,5:oojWZM(R6)1_d0d6>@>^^.)c)7M;_%I.8J;=R-lKH.<J3.m8lM$_X?\BYggF[NTY##&Q0]02@2J)H+*P-c'U+!7[DrSH4qkS7ErPS^OeT;'4l)Q&O;A]ET5L^1^iJ(CZ2@%^!a.%=<!.U88F-6<>1?HO[[lVV#0qi;henK!P?$qX\H)%3A(ml%#3m6!5g&g/5OIS#-aGg_DhYEQ][aeg8b5kFZ%rcVua+2b*$t]%Vq*b9-/q%AK0'[MkSf`kHr=hkX-Ne?(thdG63,:_CYfpU%\$TQZ=`Drp9*(R(k@H(`?J[@@eCK3N#HXLM,%QBH1^*MCD<23!SHJ.%Kp=t6J7DNb&mo(1('8"(44>!#n!`'Ce?3:&dEo-hC=e;`%N;97/+@A(WZ+"GPu[uGTPKZ$`>VRZR?9oG&nkQBkA:L4lreq`NBm)-%,JXK`gpi.C1@VkQHici09uTA^lBq*tc4"*HZkF2WcpebiOfj:ePV`B*4SZ')F#E!iOm4pLh#SdRCE:qD=(Wu7nM02,<oTdr(+BYM%g56S;q@3W$fa=0apPtROJH83;o"$kCka886]Aa!'IkjHVML,t0s0MCKiJ>/ami*QOO;)ss5L"FTkg?(9OL0R+NVna#a8cX3QRjed%;uO)$nj7A9[U)L'a:2HT7G/<$Y#=/q"fd52Pf2T=afsqN-rG;Z2FZt_MomWVIjeNYOiOe/j`1`@'1EasrKU*rQa$R*;g_#Y?r.+/%I;9e%=!4*UX4YJ\.e,b)]qu[G.(]\87Hep!Iu,:"&O)R99NFX%a"n:NDGR)'fKca+M#e,*aAAg5"*b$.kF5OScp:qT)2Zk`'Bmqs%6j#IW6&K\M0ef_I(AI=`=:r,MZrfCL/M9@dc1WE\`@1pCPNiuFOpG!df.k"BPR*?NQ2OpQ!,/sLd>R`-ilNu$Ta]%6PQaCA!aqAV%\$/dB5XlS`/Q"V2C/]`f8B/'+c#=6N*p%4.2lUWGb,QjF-%C%mGI\t*W6?`T<Mp7Q"KNOI9L)I`WBd*.lDcW.!J$/lZ4\)69U+"+%oRJn,cQKVd79(CZnQj6k"(3G6M\TI)!6A2U'q(*ta#nBb#nDJ1#,Pa?YN('L^mOeM(6>O1905#W4^#c+&C5UmId(]cf@487F,`^c%!K=i!N()SW/-R!",Tg\YRUtbtXESW&?'\8bOqGfeP;80-k)OH@<Z[Zb-imRM3$4(f1b/VWQ*rfu0X21fb[1CqZ3gTe-4[-&F;(q%%j1BD'c>tk6%SD)V[$q1UM)tu.mq'r#b`)c`:Sc/!]3<3SYu0AoO[O+V_BFI?)N@5C7W]L1,12\'5mNB-NP*Gr=H:G.Ke6g<*ZBh[%,8No71'(Rq8hopEUlDBL4ik#(>+GI"@\KQC$Pj0PF-muJN?l/&b7Hd*]3abU7VT+Z0lA[a6Ipr/S'=80N]K\B,DRNK?kWXK1(ne=%UD0k<o6(O4P!sC'Qb296%riMe^5l<gCrX*n3=Y*(6XZ*\ehWE1NTHa[#S$q&KHVb"lDKg)%YK-sU:<Qn,<QmHP5I(U2T#TYD%@iT%'K;*^-.kKD<#g>g3?+M_Dd;<Bp>Vi^+Ur*:Ag*Bl\^b6Rj^:@;QAMJokgbBm;+qNg!L-S.C5N08?5;l(EjQ"dCeb.n=>oD56DOWq%UfU:t.@W^/&47K"2pKPb]\R]eW0$H73&ZpY0Gj%6.b8Ns@#LctS)b^`(_RsS6hFHi7RDW%?dS?rDe'OAckD)__BGX4&"7(%OWq.0%.>,gTP,[PQb6[8"=QCkWp5H]+ML<dbN;b\pWg@pLE%Z$%WD-I:(*^=)[)pln&Q:f*7Y2?k,<%akaR),1?=,RXjMLBZ@aIEQAaE=e%r^rhIoI(Wm4?EnCd3^>)^.DgTd@_V@)dha%Tn[sa?BGVZej,0T&)_!JOXO5UHWFnk!&1RA'VH)S/o$?N07+F.oXs&`&A0TH<#$uu%!*3h&+n(Z!k\,@XpB6kDb)VCCZEG[QCQ$A_PrVYZ[VEW\j2/UEVD85-La&qQr8Sq.TT)Fj"H9E93CNp([Z!rcD^2h=W/=#\J:T)<%"0JS&htS#qc;@'X.kf;KU94VAn'dk(:IkR=$>'<H?KGT(C]Xa4OYDO.LV+hT&QkAT?Q:ZKUmMlV<Z5Nt$quaS^jN`#:O6JR!0#'c%W":#WW2LZT5cFb'm&3#Q,kH:U(<JHXCH@qSS!<8P!Lbo]e:I[6EkB#[h8Ge!hapkqcp7.k;H<r(3YaS6cg+M"ZP_m7@MXS#."i#E%m$<7/0iCYd<WG&*S5Ya%!u!i/MRF)aX`$8E*6&^FiQ/H;&$4EeAA3)BUP&dN:e=2.\pL7U2XOacq!]U<*fV-Dgjno/:Q16_e2O4`%F@]W.:V&n%7.`Bqd6T(2l@WM@!_PV&3IFP:[3\iW+=:4N"sOeljHCY4hfpb5Kc:Z/1(o4QALk``i%ZRH9b("7Q:33*30^5X!kjPu%\W7@K`YBC%Z%D#sd;\.]ZSt"3).ShTEPncuk`$A4*>AsWn0g`tShc\@/0'>MR_kE171I%9`eB]_Bf6-n>2dhUY+E5D+rQV%&seOa%"f)1ZA6b!t'HU&dMigZQ#+?CdMBV'/J=LiChU91XM*=:XRDKCf9Y?LtC>P&'`1dO.G[U\<Ed8U+Pj"oK.9,O,KLH"o*sY:[G>hD>%`>%*%^jp>@RY`9tb[!t\q&!4h;87-XVW9]FR+<+\X_J_Vd":6p%67r'c,M/5$->W+`]7Z^/6$['gP?HcdK&lQ%.E>TR%mO(A)PK@%ElJbCdQi\O.>8j%iYTIfDaG8//h']NP?'4D8C41L@h"1_)F!hJk%+bJ.Me8$IScY4P^%4U0QgJS"9T40eHj6fG6"LW\Y8@]oJ51B%)JPG+=%)A0:oGKpS]Co;Pp;7XANl\)oC5?Y/-\9Ze`m1*K+]i)6rnOKc^8u=1;Q),NtfU_9&<GA5+fmNHT4)>X%%)Z^ZS!R*3``r%Q6tbt)q&F<=Ne:p85<bpjB9B`.eUSV&h4pr?dO5];#ldsV3SB>/tRGXrbJNMC2%h?FE!D3&>#6k,B_UK4XFL!R&k,?Qu%F9SW318%):6_78\cV@J8\,A7A?f1.Q_$#!\*C^DQB%mG%;mN!:+m$!M+;;"_W'6<>8\0p_O--5eP0h8sVMpEb2"feh-sGGch4Vp-`3@#pGc$%K*"crb#qnLCQ;"P<E3(p[-O)_I"(M7`@,Udp=^ct2m#44XuW+_QZjUW/C5GsX$YG>Qm#'^1FeDE0S>Ir"pW*<<<.opiCRdB-6=gu%7#0;5D-qNQfu(qsL;HKso]:`LE!QZ8oI)[qE%!%r(LJM_+^bs7SWPet`DC6LQ:2^Q/tcoXk#!=>!taoH+s='$9K-(s\74Y8R!dTP%j-/_"a0TH`WO$;*;`"Ze.W.oK$F&II8BV-D;"opN"c:W:-H?N8KsjJF+<Q(%EXfr;oR(]'$#h(h$G]/HAK"3u2Lm'[RLd)%qb2ND%Q<ZE0n0rum&VX)$PU3hm^!VE7G1/c%%407ggDP7$/`BP>IiqRD`^NH04Ok`0&P%W6`<4Dj9/$QC)_h?gN3*b+,l$KeRdlZq3ee5G%%/(.0`t33_U]Wf75r9=uaaDKg1a$FH*-j/4)2prGnZirQJ=``0ZiXp-cO'KmlNC&u/C^rTOFV'$-uk/HnXu=D/rj+t!`&DkO/tu/%j.bJTJIE)7kEn/TF9l8h):()S4l)bF;[4;5E$V+9_i?A3iPEU'\s*E;8SD7[@e,C"6ECstPkCBYV-prJPqRjjF;cQ%Ub:VI(hFsl%O%t37X_KGoLiI@_J;XZ]?0(^fNZ1Wc%ZH>;5*6i82r_LC0$4F-+q]WN-pb8.M2#EDQu+r6ignlj#@R6b;Qh@C[1msBOG6.hK3V]'%"#5fJ!g?3<7:ngNhPBcJ%Q,\eiG?m<;p]n*2ePVe**uJV[r]D[^k4qgdca4h_Iio)aPs/Oh.=5%p3Aj0c9UQ_XP.oN-:X^3EO,c(%33hCRZjC18I+U18`29bc.r,>PIfsjo:`rMA!'4Q<AIO*AG-+;1Q/_BS[@C`Y*lqcP3\5U1n7*.8gbDh*#iu?jRMZ$gEU82q3JB_F%iB*-1fZD\c:TJ.in3H3s&0!T3PBmu<.\j:\ho+P1EYoZ,Ji.QUM*5gL'@B@!3>2p;JS8Ns?rb;S=O'X]TQ",=;ZhnnX#MdCd4aN7%5u'.&^bc;\Hn/eZWeJF6q4odC)t<+-:.`P7R@-)T)rS4Yn&;sHVn8[t+S"="M2=hQ"VOkf%:uM3ikd-sfkGt`35qt7T4pP7lY@lA%o_GMBe!a$4#6pp;U3")/cmB*<YOFM.HN:b&c=4WKF#jU2@.j^gZ2oh,"@8VBGa6Eb$]fR0"(7^`D*j7_<d6l!Q==DN0nLD7FYNt:%JmB6s>U=)(>TuNK1GcO=7Z\m.eVM<aqF.Fu&jA-=>+uW0OH9.Im-"U"8!;,'I']&Q<L>f$i\BQ!joM8SEQB_:$87Md"or1tD\Ae;%!?[_Dgq+\)L_C@g8#6@(VW>9Vs+c,1.J",BFP+B<Uq[Y"4Xqtr"%b[EYH'(m/V*.8`^$!Ub/h<@@G)qS,c=__K,19sYF)8g!3Dr(%b!e[6Burle\<TdbeBp\B@dHR`5knq<<DeuM409.d#\X4R50D0FTs&&LqKGP'"NJm6GYhD1.Z&fKI%FgQbWU(9(6d]Rb>"Cmhc$H^%>$I8jq&GBTDAj,7A4<]qJ?pPI#R-'id1tL&6=:bYN,X_:>(:%,13X1X0gOM`-S%$86F"KX*NceF$KV=s/`D@@L1p@,AfY0T[5;80%-ZS1+R+48COJ,ZWkdmncAl&[nEQ5plkSPDX?7l;b'`uYA_F[h`4lmK[L^HS:a_M)^Q%W+9<dZ/-mG8]3dYNt&kc,Dk9o^illS-u1%93I,1=#&-?[0*bf1KMXD/k()PN[M?hM)#;-HKW6Wd)9n:F;g4q;W;3u(T*?X0,Q/_m\A))\RQ1]i#<OQ?,FZjV'K6FPTU-B</_0(%!ou=1ns>6N/q2"q-H";@&+[uNKm<:`d]X@fU:<j(&9?b3/u-.AM4rVq;G6dVo#`6b!c.rn<2F,017!on"JYC`F8c^l'qP>LT:"^/%jIl9-pi^0\HHR0#M_71R,Zr'*?F134p,BjjlWOpJ_&'n[Xr3a7_K(MIndrb7Z]m4r9pSM&&/L_:V7pM\;WgPN`K@X`!M1B=b,IG/%iB*nUc"G6,bS`)@lm7&`IQHk7j:mdXIU^/Yr<Wf1`5XFbb.9^I%5XIh=F1B%3mCjlK;IjTYLnoTYa`g9kVCr!rlS(`*:cIQ]S%#E%h$/3i;KBbQ/>%M`M*P-JYiA.+=2jLpQH9A,5D]&cWY#I,F71*'L;U.Z!J,(SjO<$pOFT$:lOMRdFCj<"jssNQ1HFCJZRFN5n=8n.%I"!FngQ_(0l#2%>Gp*ab;]%l<->;*GR?q5/_"4;N]tA/$8D`XST[/OgE@q99R%kna%3>es`ZV<h$:RkuYmqHM>q;(>Y1]>iIB#"b%@W_/1)*NN$asAa4iW75_FK2%LjXd)&SWK$XicpX$IChrW_TmJ(1$8..L-R,5i-\-C?k)g@PeI5sapiAO\5oD8SbD(EQM_MmUO&5B%")p^;ilaCXZV;5(M*<7#L2/gY&YU6V6e#\kLks>!__WEUrosW.nWM4!c]H^&+Ft"!OAGbo7sM!i3rXr6PXD5/0E&6)-)c4VngTU+%6ug2MYT!'#(fL5$KkgK$C/@"6XHf,0FS$2sEe"aR)s@PT(nlq6.hWo9V+k\<2>,?<OpuD&LdT+Z7lj]aGbL4YOeXOJ^bk0t760!T%/!/Ou0I3K#LCr0fV@cU-k%35G%0g(k#5^r2[Y\mKW*hd5ADiWV\t/PUq6ZDjQWX3Z/@36<.Ggb!]0p*obc<&J=(mXkFO\4*BYssh%nZW.N:i=irZ><f?6G7J`c3>s4UWgk!:'0'_2$$oE8DpSYWRYfiX#N'lVJ2NuCQtTG5Q]M=@<&YK=N<nn:fl+c-VQP%_N\(L:d][3%=EacOY#'hX1T!b'XFV*3bdR^CpEnR,+Oc_<$&J9p9:<F(.+q!<^)7E32R#Qb5KCp!)6Mt!:f6%,V)[CT,mJRtj&sC92Nj:)nd\N!%Ksh[#!-pa'%PG,.EO7!edX`*p<8U>X#?+&[?$eS:*cMj8aDkNT"JYGTS8EJ9%&f7[a6Ah-#T"ZFZ'!frTQAZmb`'o7Eju@YO,:?)%POu$/`5=nJ#gOJFaIO,!0H<QFlnqg!Y!N,s+bphlL2H6+4%P,ES&h"l@T]9Pl&m(j9#cdB"4/^;ng$cEj(eo9"UZqV8\uTnZme)C%i;$X(H-r'8Lm#/H;VU`k6D1Ma5U."/89,He+;,+$OL(-6OV[_V=U@i&kWIOhL^YNI3Zm$mU2<jaX7e<!d/'3+`3LZkY%F-ACiOG3%EOH3/4H^5+fH<GbSIeNscql;^8<UC6)$q1dNL'ia7o!N0!2J)ldUF.%.^WTu+fPUMRZL7?LC_VC<-iZ`M:rUALT48>in53"S[Mtj%Z-b.gW!C6ue()Xr2kOIR3eOuU)EBK]U\`6I#Y&.AC$S6i4qN)o)I<WNFdDYS"1-r7msYWk5uF0gi7O.-cj)PY!kDs>["L5GSSOu(%7%V!,n10;5kM:c%*UFZD-]H[C2UlcOnnB'0C5U7#J9+st#YJTNGX"0+,Qm55beX%eYOn8Q3GdDd:rtZu9lNZr4.%1+gVJ8,N;5SI%*Erco)sPC3%G,d8Z9qhR>dq]ZdX%3IJq:R>8Q:l&mMVQtS_D#1]oJ&dMp$p5"gePC;CLZ2#-'4!Z>joH9PRqDqqiH2!cr8J[A."p%3ih`0Tref7rGmq&]GET<[@SOQ+Sl'6Q[.GMh)MM?i1'1QDgo4.]XbeiH2$S=JWTur?PMCGJ8\CY?bQI5^FV"@68QTQilBH=Ma.1-%gXGV/0:)*IIX-BlH$aUUpY2Pu^)m73T@[.'iN$%R>BcDu5MRnVrc.RK`LeK$GA!HZkO1(-0(,#an9m1jdl05[kr\Z_s4`;TI.rE<%2fC$E+5WX';1BSal*!%4kMaV9U%On!m0`kQ]6^+gQPZ?+?P1q5TL@uJPkhed*_Q7Yclr=.F2;Z8s*TQ@h#@6/bObVqmDI1;kh>ZP%95i:`hBHrnUA#`7&$T'sabQn=iKO!$ji.2q_;jP'HVB+-%3E]2HTj7SQ^@0th[^cg'`YWC?/HGVH2hjXo>B,Lk'T0'.9(F49&r-2%9s!C'%NWmAB-3Iu]B0&T"=+C'h+k("+5tK3lhem&o.>>7NUe<[rorug3Lkf3l9+kJX._nmH+<kQr;Q%)4,b_oo&Kn*,r]p^GKZ$X%=2R%['Hb2CeoY27k^(!gPjQrCT5o+\\[*7ErkoK@qY&n9I/0,@ZOcLXcNd+$2hPc)o&^ggCg6qf88^XCn':?>mfnh#<S6WFF*Y*G%Ks[_UHH&r@]=n2_qsj6+aJ/JC*C*JIlb!0R?bRP/^$"+@3GNn("$(+CH_XLZ[Cq!ZRGWS(p\+#+LqQmIh-PPX@J\hg/)O4[gJ;s1%nA]lUpQ"Oq;;F=6HUi5IGHL:-QiC/o]mbHSEVo&0E:LWA?AdI7bY-E=G+"g_f7nI9S)8cT1g&i:G^hGTro<PX3jaN!SQC..\L&a1%NFFP0`qfGq@>iWU\<?Jkc5o/u]KEfodMNK`Q6*\l/r"GeMs"K-_ZqrEqn767rHFSsZL82#p?gUqbPUN3?M<::#S1Ub%h>Z8pi-!$%m!SX*r9S1.q64/hl/e\VKDVl8J%.POS))qK]Ka"G:2m6KT>;eelR5R.q;M$Zq1qnFMGHFY.hG2oRe?UPlLsYl^V2(<H_@nCgFb<U%V2pT7'?1(VoDQQB!dbP4^Fssm.%T=0-pmnj(`33u%L(SS0U2OEDS/lZ9ZrIIJ7k$2I^m)(\NaYBs#KG.bLaC6S2/PW+F.WjcF*,"%pgq#K*b>`4fpf5'P]pf0d4S1WI:3>42hk\JQlE>fJ>2qA#lQN+Q2L1mMe)UAC`.7W&@L+GU5'7I58u8)@G^ab]?C*Gf?='M,<DXf%F(ZA'hm^n3bPNC,0"2]TIcl(@iTSFrRu)@O-dOW3h_+BS/HM%?,R!MG\6e0"I(9_,6\ZXRQBQ7Db\h@&VK^5F^BRnopGZF"Ie>H)%C;6ZF,3m-97dUa_FGu/>+Gi^M#G8`E41i"M(qp-LpgMeTpKQsr\@ajAmaXEFNH=S'4^'Yrf)_S`0p(NMSl6QA^&.<up?MA-D[3),%]KioKA7g27beF#>YC.G<OdUVpiVTIihX5@$CVP/Ic\&nf#IDp(4'Hb,C]308DI;[sr>eFEc^0&?>c^&"+':JAkKQ1E33<)*Z4Hjq%>iRi//SX^1%V89oa=IZ_%e`-2hOiWZ/?`A5YEn@`W,/LLT:FK@`6r09Dms4/cZHm41>#_/fK!0<Ga'_MK%'+8aN`%`QdW_:6\@mN%./VBho&GM+Zh*;Oo&fr+ZO[;J)-rkgV?XYm%m`9,8+MU>5-!2STqfV'_kgB_^<c+[htd"S$f/Yg]\V#:*WXNU_=>ljKmapJ^DhVu%q#E4;lp,+Yc2\'<'b5s!$m*e4?i^)0qVLWS6hpBGl=uXk[B!r-f"348IRAm4G&_MIJ,,/a6<'uSoTm0B,#@>JgD3#FqoKnNjWMQN%DP#+<]`("ZrQkjdf6[:tL9"\-IN(CjJK<U>h<i-EWVl`:j*H&rHTdm7@,Y`X7WYmu)gpf-r9W_HgY7YF1mfaTK>Z_]3&<Z]J%0s[%*k[Z>Y,oeF\iT7tLF^KUc_2Nnjps\oI>,SPD,gA"<0FSWbNlKI9+?6HH0AT1@kc,u.6luK/f83qL^qE#E=@TT'6EUPUp]C/rcn+q%WX\CCU1&eS#X#J5R.D+1%PrK#LU&?L_dRlSA.QOc"q0,)E1#%eKYtGBa^PKM\+ei8k:\G-B)%/lAKNsf_t;0o^4aD&hb,rQ%dRle%q=fdTLD`:M6fE=2E0rgpr)ppGFs+)=B)jS;*+nu%%YXq20)s8V7.]b!LV'^mB:?_*bSmuY@+fN8^=Xua\SNGp0F;*h"4-W1(Ql(E%Nd5'ilt0OJ@0*:DNC=)8[HL%+!Iqrp7aK%JGKH%ijCk#C>5`g1BS-P>jCh&DG3!=`cI#DT!oPK$*?!SF1UJG>lB.\Zq:Q=.Fqi;`%r9VMNNr885q-!.8H*a!dqLu2^_1Vb=T&RZWi>n90OCdI$cc]qii/c(DGJ7m03O49In7]I!mLY,>eTgq0nSd:^E;@iAeIP_o^V/=f%.,Z4knAN4icC;9QL\'=RYA^lr3]X9H05@;sY0)m4iHI9hs1Su8_uF)!01ITHHM.Li[Sas6+7+JhRt3Z;0s/]d0Z[m!C\.&ujFS71%Y%&fGrQ#-5`=o14nTZ[)/s^E/D_?gW/Aq1c4M.6S^`Kg#H_2Em?Y$+5eK1@%Y5G$^Q2Go_S(%rp;Lb#frSD#VpN\7^I&UrJhe2Mo%*/:Y5mgi^]?@TK`(rV'q+1?-icbSG0M'pMXN!I94#29N8g#B`f-3B&g]h1J5+N'Pg0@-n$L<mr,+m/r)HT`TX!k@fPkQBdLqn@?I%h-JmP^L#b-hd[.7'AZM?32A.ubNF(3j?<-S>TAfne)LJE>rlqH-Qh0dh4_73ah&kh41^W:mc8e9-fYO;LN6CD^!g^Z\r]EP(\5t-%]X-&Y6=%[Qb="fi(\5t-HupP+cHFUhgee1IgpD9I+Wk"2?W-,*bRP]^h?Ms;oksTH>EteMc@/u(?/>K@FG*_^n(urWmpDVQlH[4U%lrMkJcO?rMh.ElkB7G\[EV]=q_oLm*p*N>d2oAeV9"k2cKmUO80fECmG.$A7?LWBV0@/iO>K#.^mZu%cYJXOKIN9,hbBLF&s5W\D%C3fjPh=BRkgUje]GCrD6[)S)sh&?$NXt&9s/300[N[D<38a^8T4.>4?aX!e^?ru7=^Fl]3m^HGgR'.S\s5_+!%j'3j.f?Q8Pqf?0%D"aIr-#/C:YWG'N7*M/8P>dbY%Z07R[,#HkXe-\"/C26-G.4g:@^Y2O8D1V8o&QDbK"1<+;5T5sTI+MQk7?I#pl\<I68A@W0P+VD%mE;ijYa't02Jg;to?G[#dubK.G+58_k%M4ag22jnS(3WAm5@JHc-^FX)Usu(D4Y6!IVD)<qd>)'bo517>+m"2/FL.Lqi]EA]W`'b%qdlf&,.um%6Y#b93AcI$AC#=1$r9$kk;bARccD^@d!1[SJ@t4o)S62.meuj)Fa=#)g#Y,)dW+a2:Bn;kHfm-`e@t=@0.-_KY'fQF%D*I-kq'ZomTkp:?]MkGWqgI.@GFm,jcDb)1n4YK"r1$]LDr/-UIs,i/lg^.1^]$F&1(DOCFj)JB(W+pjA/BKfc/V&bj:At,oA[7<%&Q$5*")SJha;/*N&*0@0^.@sG_;DtTqf-ll9B'i7YnJWL[,q<NNqE(>!'G^2?_SmO0=14+?BPDXOJ?R!a/[hO-d7"8lrQOZ0jN4Q%%S>\@Q-?/7kF6M]V#>UbYs[k'QelL5*%nfeLZGW1n@<hZg`BRc%7c9tP#7u<)Ds]Q7+l'umEi5/"#XigQX\G]5*2O:irITd6X0O[%UW2b&LYeA#3>sc87ZDgSC>>HK&;dd'-B4e0H-eu+GA$+5B34!H?4IK^VTJuq,B%nfELhTi5b=k`59180'(keKa5u;uq*,D5S+GT2%5c<1s&+J`Tp&4"Nq%i9qDBaVZ5@%U_OD:RkkNRslK0tH5*j36glgZ&Y$n\[RoZM'Tl2+:4<=^2!0hM$=,s-Fh.=YZ%`h+8pY[bPB%/c>4.')q5?YIqQ\]cPHYYjaFOqB,;F*FSl@n_d'OmVdmH1:PR`P[j!Q-SQJ;oPjQr_c>?2%`sa@K;cBE3pn`ab2X#H4d2F\Qh+WU%;emJ#9YPe9fZos<7rAjQi&X!YjVU:l0+haV98ao35+Xou+5:49IL#CQpUP\F@[n.o\3/L=D\(U25<,+rcqO>@jBcR0cp=[Y]1g:C%iB&N:T6\[$'u&"pn."7MNsacAiB&N:7tpDUV=;1J\?p9=32aYkj4d@hDt!lN285j*GLZDJ)II]_NZ-gD8E9T.gY7X1GA"h8IrElN%=6caR*M1,\?^ej@$Q8BCb.#:Dr!l]?_/f5-k(n7jf6obQQA@[Fe"PQ:GG#g,NbLU7%HNoHiY.$]VpBVX/0fOVbj<gMG<E8^q^SOp%FG9O_J%ds*s5iPYJSm]BSR:7Rp?*H4_B85r],GSIk0d%TL2rXHg(.aPm51b/=\K2G_uj19]1p/6mm&PT,l/rML\C\tT9h2eI)LuP%Z^8c!%e2Hm_*LC0+7A!WSM+?BTC!gEZmn4!Xo8*FLI7&&HoLo&!F%fI`,;u\2tH@U+a0?j<h910)IK!q]=n#bJ%"au^0J_GeiP@o%T.lQOYHL*R*Ga82H!bI?(8V7S(MEcZ]RJMLfb;Onq=N6jF!iQC_B1l8"L8qA4tbWXSho!F(QkubQcQ.%fidtf;$3L&a:M*lk<DRc%q]Y>9Q58PqfU^!8eV_Za`OkFa:]C1Kp1F,V;5T4@_>PeYIJ,1Y^L2TT^9H@e]Q@iXdSX9Gr-`h7]\rkPV+9>m^YbRXAblP$-;8ac%WUJ2/9cTnLI.7.0b8.:.2A&dXl&U]2*m!i9o#l)*PeigG03_'2"&XD.,?qI!jTEoV`fFJ/2!WcMjo,)BjUQK9*7>V6X-n>'\'M+u%q]F*9[i%AiHfoi5\38_2LMo2"^3:'ZOZhS`LX4&5n"%)]XlHkcSD32$9E`D<o*&s$LLZ*'hU8opZHsENo*6rc?`jJ96jPG'("!E%%[euLg[kl1EbHCJXn&kNAk8`'.-FY"+P,7KNd+$t^+G[bbeYqQ,mo+lJ*AW'^^;cuD!N`JQhp236Wd`_Ej*/!A"4%j5.gtiC36(D0%;9=`Z$D6t'hD;:0"&8=UC9Y@bml<R<]pL&e:L]-+i\>l]oETT4M%L_4HAnDKS:.<CQPm[7p_C19rY4i\^rUtN_$Q260cWIg^In>6%7IA-Wh7b\[Hq]/g2]g[V3`'8^`U1#tCk$fD]N\Xtm=U7+?fq1`m-!>KHjBr$C,FQlJ7JWRh(4ko3mX.Mlf%"(`rk<J0942pDH)XF%+*@4C,FptBSZ1KS4.AE8L^>OmE&dip]<dufD[5&AYs7m[(nkR!"gs\2&p`OeRR=<6d*VJSY!1Q,G\/XMDK9m-#BR1(.!Zf;*b.'O%l+f*gI&H;&^7'GEau:\,(\&Cl!*Oibq<mt=LX609PBfUTl13Zl:&[TOh$7g"^O#k5p!:*K`?1siGCM0dd3SYegTSR`q!\)("k3D:%\+%H<%3PR2J:8N,dC5mcs&V4lJC6XtYFMYnZ*/7,o#<OsV3N-.GJJ*$];c_L:lh*Oec;elVC="ug2U\'PlYNk!H6fH=mn09.>"%/%fbi=U_UmmO\_=N!Q34[-fPUiH;NH7n\_R[1a1?;+PeYG.p"5Ri+6=N$^f`t@W3sglSg)gGFfBbhM1cjQRW5)qf)b0AEQW:5/,27Z%VEY<kqnlcZJ4)"Zn*\IR/qY9+o(=(pYKCja6I@8VfrHIDj1)0?h=,g?n*.FcMSW(*VCoo3'AiFT))]uGgC\p:A$=&-X*WQ'UIKaF%DUf5FX`_=b[LTWT_^nU0o@a4,[1-6qqX/+RGcsWda1U.d5Ls!eGk]rX\'ld%9PFQ;]^b)cqae1.*7.tPV3s_O=W;+U/3Q^:(m4AI%!tsFEC%`kYT/&G(-M006_HS*Yl>5ct),N@`m0X\l;6*mO6NW%^<I$OG?\\4'<4GJ.a!-W/984%pVaWf1XGMV#lt&2=4#ZEFmom:[%(?nkhb%VUT<r9n)F`\S6UKq"%9j$[Q#99Zrgt(gndOSl1IgHiF\qSk_3"STf[C-NSWkqsAm=^MaZ)UI)]p@)Vh1So;oErJRQSo7a%H`]'qa_@mmrmI(g>,bJPEJ9fo0+FbpA-3M">WXXdE>YHmZl7]AQWm;oe6:D:cJLW%V80S]9Lr?I@FGOU8qg8BL4rs&]"tu'LEusC%FP&K@^Ats:^]YS]>=bLkF67'"__a6jk2=\u\/ouAi2i%ui7Q+Tr5+JRBn2KD-BP4hQ_s<T?JA/SOYu(HaP0JUG&/,21/\-s7_5HM%lbKcf\&D^4B(UjCNrJ_oiR:kHK%P;)P&A$\;i^i6]tM)tr?4]DqM-1>0(3[QDSR%ZQ\W`lOqtfY,8*jSkf4fbI([3]0B>n[*.@LW%=tL!ts6f;ROWa>0M7lL_&;`%<_T`$mmleH2]?5b7n%.l>?EME)\?7tE,E9jigg8L.Wip`PUR@6$X3o.)b1]V)n-Aa'KS2TmMGje#%pl^"9+IIh0,]Nn]%K%r3LBL;lD`S18M8;h@NX[W95NVULpWccACY*7NP"4]LkIg8/c[4Mlb&n/)980/lS@pRSmaq4NJY@@&-tnX<%";60W&He]^A3#MN@Wpu6>ghKTg-1sDdF<Qm4##QDRJ@WBc*q(u^'2R>S$k$.i^'#O\e.[Y0V9W>%9,=)ZbUZcqj`1!Q35]D1)5bE%E<B1%'Q<J$.DTeP,qIONrZM<\)V]/H0f!8IG6mVJJ9srVTLX#SJqD9LKj):<nZf1:.CD^,AbaEU!11OKWW!$F-rd>Q>VFstC-,rd%'Ga^`3K7k\RY>7Eg*<718g^,3C7'QHE:DPSA\\#+rGo=/V.)0[\)Sd-KE=0US5U,X+/,Q_Q<Y'0*>rf;qY(\'llm!M&5$@mU)"+b%&j]t:^B34%of_Es8HN%;=H27GKlK'^"T3m]FKbi9b%WO7FKK9bAI;698hni=!^s)+Pm*5".:RE6.#"l+Q!,c@dP"=q-9T)M(]W5X%r1JHh_hr#A;MkK55nk2n9`dm/ZUb2%J//Q0OpYbY;$9VY?pS?8f-BHKD,jN5B9QR/4%+q$9A:kRW*#AG$s\r&AM.D#[BN94e4*.l%!1?5i-1-di(461DK.Ka5%9"@#,hYZK(n\W_+9b"kageQPQMusp`S+G2"DjANU*N9lL%tjJJ\W>@m.5!l"=XeM!'7p;GqO6t:bg(%%Q\bl#.N18V$j"E/i*5niJ_:`OS;73p9d$67..Y0gV^SM]RKLWUn<F_7YE+Cg<%<Pa;^oL,%uXki!.9+tUOm>,>"KDe;gSAG:tA"$%<_=9*:*?ec;`b@j-#)(Eb(1,^VQ&D@&&emFH4//f3L@r+P6n>QQ/YV$Q-6#^NOud]E2io?N!);m!Ig<\F.h1Es"oq^]o98Md8W0[%.fY&n`)s*k;W,a6R"/'#!T3%)6%t7bC6E`l\q%Xci\RoL%0MMB*<%O'UlYWW#`.5p&;Oc7=K@@W`N#??l`SmjVcF)s%L`gWoEL"Q%[FEa@OFQ))Sq"dBhY*hu(ZsJPV;dqpoG\nKnDA`dZ,]'$Yn'(kl^N;T<.%1aopc!YA,l,-msOlAhtc!@I-aYdQjhaNbNh[eqq]$`%m+3mQoDJ4+>kn/.rpmnbL`;Z3NL]m:^\k"5IIESrrTorM^A?L"mjO^*KB9QI2h(]gJ,>WeJ,@>8^]!9?I.Z65=RE[%j6]G;aueM\%[u^OK5<eqqJ+iR@<l6[YpFnbP?[h$>hu<>Yr7\]H."./RA"L,Bs579l=K(*tA$1>e"s*g+0pIW'H,r:>1>lfhV34fk):90NrR*>^%i.?!LEBN%"ck012O6)dAn-d%pMi+Eb>8U%F2J),h6ObXeR_nKJEtr3FKcl1>'rU,!?jJ&t=q?A7!gHM:"+[>PCSuu.K#lD.-hnrd%.H&gPM\05GJL?3V">%Ddpp]15Bj"?\c400b&-[[BrR<P$I/JWcs,N;8rPZ5g+/a3fMLF1hg(12:(PDE_W\:OYm2*)^#=8B=p>[:[%hiE4+2!oYWa$J1ef7"\rXaBHU6.<?qIN11]qpCIWVJEA`3,"cSUE9_8cX-Kfd'W.057X-B_`h>^oY4T+E;4MLF80hOF80hOF80hO%F0U3IGG"-Mid2d@iS]2<pR(g-QIiVdqdDtoX/->n90_e,^E!+/K`4WT+$61r;XDGAkeEAYYo!6iKmr@nr<M#:rM9IYm`WSDrKZTi%.n0?SkfZ9>DY:P.BKi/<S3\71o#e#[kK5<9<icFsYJ0/oFk<5cTBi\mp=Rns*OVpL_2k4ul..ra])2-a]C3>k2)h/?mb$%iO#?^?%-Z?QMm:Ct%[^K4fnMRiE\@Ln77?o)fY<H98lTIsiFDPAC\\>ed\iA*p8N!$P"]R4UETG8XY!7'?8K:jV^@jM3^[o8Hhta]>^&Hg`%FKa&5qUG2i>\U9ZjN:s[Dm/@$Q]&WK#9Wa,O$EJt:H\LD^NoU8hslHg`I>Q#p63N*23(per5Q@^_7BJ^4S4u4r;;nrnZDidO+72L%=2+HtO$ER12f?qG]m&@Y>ZV$ET-jGuYC"l.I-P(Rp#Pjsr:Ed6o(7umpsaN%rqIl@ia&`\p5u7q2#ocuSu)]Nht5e*kOEJ=n&PJ,%e)t'<TBC^tgbV1mmPc6fL\JMsF-&G2UIs(!UXu$KRiL5[m12AReL,k=m*B!cl0%:%dYfdVm+EIDq:3MLo\3T&jP;2eOa2*AlK`B_%p20g&LHk[\$dV*-Q_b4oo<W'^I.OZdrp@ron*S_6F[YZ5WVU#n9cs5u[smi5$S"-=o?n#mrnq"QrQq$s_>7).2i_3MFdeqLh0U7@%jq"%>_P8$qrSX0+^%YT@fXjpaI0:e)V5\tA?2sEE$dZOp"@lHuGkT!U55onsBZ&*8?n[OFIH#-nn^g#'L&ZJ]KpPKk?[hgI(S:H+%J,/]f:K)IB#CCI_fM1dIp0F<ck)Xsl7ZU6n:Oi/IO1f&:drc;M"=Uk348.A=I/_7f2C/VBouqVDo>g%j4b+kUiOV+<L#;gl'Arhh%3C0mdMpHh?M\!ROdf5bOY<6jdWpB*dio`Q"N?:B'K`Lc)B0Z=:hn3Zc\`5_QiPaQSC[ZZC>>JI$"Ah5\j)9>CD/nMe0Qs,+l1XcT%5Ofg[Z)dB2e,TF244i3S4s<qYpmk2]W:6#Npr%gNmAG/+iKM$_Z%i[Oqk,1umP_kWJ%+O&Y1%>0hY(sDER:s*NqD>#roP^qpmL57%K7WoN3cJ/,q\nA1lTXs[mlgQBV(B=Tm.\6hU"<$6TP+=>]t'iOoU\j.q^7[drVZJ`I/DC].J:Rb!U%ABHTRDR+8PL%T<gc`AFKD&%IcPm^j'F.j:g@od`dd*`TDA30c^R[cT>1$re)1/KH[fUs\G\HJWK2QI<#8Y$s4:WSmXL^$\X-Xtn*b_iYKsBWl>ApeoErCd4,B$r%*d[Ho(WqsH<Z;jhp?4m<N=^;)H3WT<)dTS(Dg:0;^\N:V2=pcbIenJ2=DW-9-u6+5='^02-bT/M%t3RZ=HU^J,XqEdc[=qNCLPO@%f1Lo/RZ\>.q"cr,o&j+T^*)Z4790?_>;lA,GFVLS$<"#0<6"t-pc#tb_e5S<g%.[E9P@BU<o5j+-BPh=jPsVIc;Qq1qHg)fM:4C'%1E)&gJ3fUZIcJ$^rqL-?pm#dqqnMG+aplD79Fs*bMq`/p`udPD2o'%YRk2N,$GFpSk?e1c\%T,2;3];m/Z0PdcMi[>e`9o>K%ZFe%J?#+-E&IE`AZoe"V(0Ng4*gF5JF@H$A_-r_3HFblX,gPE]FtOq$*L#t5>KuUV386=V&n$7#;l(n1X9ZoB-&+SgS_r/N-)<<4@Vs<%BGMZF#P'0="?],tM/:k53?LbqkchPS,N)ETbnp0fl4-1;]QENC/IIp[F;@B$0CmMo?(U^U=%n-OM_:<=Z0#]4<#A_jiUH;nB>#^E%A,#jgb:E5<Gg!]?H4Td5oWC-FF]d[@n,LgiB:j\4`>;m+rn.\ZqSBYD=0-H9&&*;I7BO7LnYmm"pi]khlgO]%+.&JE(Otq.5HmVD%J*[F&m_I"1pghL@:>p9?>L[rojVL+!?E<R@CY&cXqTn#:<p-+Bl2[=OKlUGlGVH;tG)-CRqKtTT[stA^#B8]F[@CV(`to`FH26P0%n'Y236`]`3If:q"eCjVK_`BG8o5:DQgV3-`d`Yugb*>0[@V'6;o=_WSe:#GYSX5uGF/dSl/i^',o)C(WrE[b;T[HbW`g-PE>.Da?%ci-,2oH%WiMa,NPKId!SkKF%&oU]>fH?!#OrmrZ$krlZ:T$3"GFtufJbBG3Do&.6--aIq^'(`I0\q<V9bA-#=c8kFD5EdJR>JK@2%dZ`kU8dX\QrC]a[&e@.mYg.s[;cVJ9dg?&b/WJce]r)k#GuC[oY=O&pM-BoC-WA_k=57Fud,`N2T@"SXBPK$IH0KD5XtY;Gph+qY%07D-iJ/2uZqFdG:RPY?&B:lN3o>5.Bbkq*D5I.6ZrVs??;<Nfe2W+1]n!.C0m^rMsDHgHqq:6'>nH5o=Gi="As0M;G].3$.HH-9)%puKoMrq**QIJ1]WIc1BIETi3aOo2?=s2.(tUHeUmhuBh$3%i%nj`?Y.3rY@rF8CRhS3H>g>r-"NUgFlAPD<T9*lDB5di=<u$.'C2%]$NmN'Z8SYDbT^cM?OjXs/U@4TfZ14`*>Pf"`H7t_r&Z3h@l'<mkeH$pn)7O9Pa)[_/T1aMQnkWF8RO($ThVT4*!_lhlEt\GLb6q%*'\oMg1u`k5B[K0SQWiN^\7N(P;h99_o\)iY.s\?"mh@%Y<IEkM&U?Dq:)OM\b4NP2rAlN`3mXg2G#8;^$;&%:Y]p\Xgd,+kFHhQ%FlsdShfe<[2k7DOR]DI7!?SkUlD@d(^[pmBpYP4Vh0[K4]C,m,<S&6IJ0)6.AIe1Aq]8g5D&rE$f!t.Y)lF7NdcX]8!J%Z8FcWT3%Y.h^S4q71-26PDPh?H5fWR%>@?X![7X6]%6bq38*\##qC;dWUScX"#r2!.XEmc,[4HHi#Te@6Hd>C:lZTDZEhV?R$HkA+rrTtu6N%lK`>too@MODGRUb:Js%E:o*"'$p[VGEU+(c.ZM:lDnbUV='\2"O.^0b4]mH9#Tj%hh0g5U<2T</e^rYs/&5HJj<Z4/"):?aH'Y-0%Dc;)/4a3DWWT:[P???'>YXqWK*s)N2-].uO0r2Pf1j[bhDS5D+UCrKFS[eLhe"B8S8[H(^$5[;Y7@p>AU[IEZDcb9f1/FLQj.=tZ%B%SA6^hn".CD-luW37)4Y<%,t!dX+&pXV5&jKM2U#XC\N%-;DFW.fmSOK_)UaNdN`a\mZ9g3`8;5WWfsd!;NV3id/4_m8a/DnfH>%45c8N567/n`6[c2iIo,J)F17?(u9N/g8j>_"R&Y;Xrhjg*VZ%!**6/oXupn+NC`8`/.majq3jHa,YK%YL:MXRaS/"tY:Q;2khJ$\%P]$Ut.\[>!`si%K]espA9h=E[/^9lA\sdtsbQB=Pe)TXla0,`@@!^>6)a$jQj(WJaK#r$0W>i"l9f]_,E8j=eHMZL`g,_1feC@UW%$RQhn4Kb<r#kWjMYIObN\uNTeFmj%S%Y+P=Wub=a^]*:g:kc^8K"LK_oCgp6h#qA;R;)f**Wt]i-D6WA]D_HXDS$Y!!QATH_iUn1%m_m3dDS55rRr>n.L8koQapq6ee^_^)N=j3l?%%upVNX9+*!O.0*5d*R?7X4r1TmeZ-3H?cp9FA<jl=/en+=%;]t6`#dG7,APPtV6%SoNg1X1,a"Jq,N8(-)EPcu!ep+"m]1<hQ\7VX^1A@\1V!r^(7^ooVAJ2ALJ+-C8l'RS33>_'dS2UOs9e`^fV?X(t^6-rYY%Dm^FV%Q/$JX<C+DZ!pV1q$aK$!:of/tFB<=eS-ST-qjK\ih)PmK;&TRGK_[KR$4JK&E;4WGGEpq/]?"m(f*rG/a6gIKm*UeFDeK+Fo^(r:%BRaYfohF.Q-XC!'<$HPdCOc"Y?[I8T1"F1u>GYA:#u#3kpHR"(/dV.-rO["H^[KpElu&,iTC@NrZEH@iL[Y8$^OG7+O8d+j^&.`2%AnFE%'DUftX]&H-J&e2Z`Q(18:S7O>5CMhc5PumIIpI@u]F-m8Y,Ndls-k,,nAdclKn"I/M(a;VZ&_'Gcu7_^lY/\u\="=AJ*l"j%p]('M5QBJ>^[_!#Id(pGpo?W-qeOdg8^t)9M8A8V]^8Mpl4]fedT=0^[BKMoB-7)nT=jPmP1%hF4HZJgDuRQX+8OFL*rjZT*rk#n%rq6H_qMip$`.PUJ-U4p95Mksd+8G%aI-RuW54oHdkP]o">JIg7_VH[6W318brVe`>pn%50p`gmVnGE7LS\KV+1"'6P6LO?VD#`MG%0E9a1*rN_/Hgn/Pp;#g<06<2sX=J1g'Dn]fg!]g0Pd9hY?G91TBL$ic95":G`5G2b>>',7-s^i3WI*srlg*t!<FM\oIP*,YiEY"&%jL.BPVtNRFPR&NO.1V7ULuH0fZ66B.4m#%,'77lTTRQ5V(ZJcH=D2gP<GXpk#5VSU;DILSEgHPJbra-[3Cm[^PKQc@L0"c)r4-?I%Gp)pu1'Wmop\#O\)#s;e/1jbm(P6b@2h'Xt2S[cL^*L!gY!Q#2HPC&=mLJ!F8b7+EVd)i*c-+RHe2AFiX#;(G<tV5`"A(H8#GEeL%.)n%4j>,4!bC*eQ5BH_>.%/r*[^/cSPk?#R?f_2s]EDHho0K.D8-#7'B&Kf&Ft]NAh=^<hDhLtCZs\pb>/aM#b'3u*,XL&\;\YVQ%>P_f[ntDDo5W&N]@?D?P>pN#Y=2U@\Z&GPVcJR&4c0A]q2=Mk?P.F[OKe`i&Q1;@$^L`#Z?.r=^P4J.EE`k8s5UjWXW(a</<p>sJ%<>-E5al$&"hT#b;m7.-=>RV.M,6_F%+n@Hk[Z-,u5k%*PJ:sS[s*Ni4\1[nZE0q>oe)YHYa(d8;Kn;O@JmJKZpR-"@Hsm![h^Ab;%=C`6t*lL,/ofT&.UNhf#rpQ*o83J,0#+IZ.&e#Sbn+B:_`&AIo]fGk[ad'jQ"Nl%3l@5)%1_uJW:O6@l7qjH%0"5=aQeN+XbOPAa%.m`cUe,Dtf]O/#f"O2:ir?,h2/aWd;mquf'BKC?)qa&]?)qkgkY2.NTcnt-EmXqBL\$R56/\@_RT]u5?Tj+DmTP6B]qs`e<kO@[(%kO@Y4s1)D-pEA@JF??>rEhiSRO*<3(\mI&Zr8g2U(!W($h3TVYQ"[lGBm32@V*t2UBtb9ph_!(X8c)h.I\gc907$tsqC`W/(Q88o%K&6I#s!!PFjN(3nEHIB(k`s1aT"=$L>>C_O?Km9eQ,cXk]"OeI@!H4,TVLK>;^RiYWNaE=\N:"n1[!ZinA>dOmsJ_nYetn3G_qg[%3I:$kI5lBKI38:''E@mX;c!AT';,'@qp)+Vor!ff:Zd5SPp^<5W<`IkM>t0Vj6'`rl(s_QI.##krp,EUHS?273H8UjY\3D%,@A1S%S8pD)]P6cD$X\ADr1(e5IcZF+V2$+Ab'8ElcX2(fWQ-)aC=Il'i:m0(djB:prVXX4s6VsqE")XXMgHXtU'Eo/_IF$+JU:-_S2kVk%B'pgX?j-JU>g5"IpFB$nc9M<8mDV+^5CPe<$INnTG^\k>VsLVMGk%b';Jt"ZQ)>f:Iec"iq[;BGkKc;2^@MPR=l;#YlB)I>DZ4nN%aUaEh#"UapZK(ir'q,>ks6.k4L>te,3-o>tIK*I?;@uGla%68ZbK.Rs<PAOo`W(>C^o=)1>^=B^?X7VipWlb[)S+tnOlHn=:].^8%fb"!g#jnRS1:4A_.aYX5J*;4hm^^tEgH20WB0:bCreP'5K976t6F\k<c3Tcu";&<?k`73Uo&9ge3a?sbp]pi"_UU2%J*tJj7aP*r%H:,`B^L/jQjeh@)UK]=2<R:]ef7.O*\_8l>-f3))fhQ$:M/h!`*o@U=<=p,Q;,R9W9rKN`7CAO4:!iB*TpA[mRuKah%KGMTIp](h%<Fr@bL[+l<a8[D`DB0uiJrG?SH1AEe4o*#@kNBOfPZo2FUk%ET-452#o8-!;r&c_r-<:T3=:C2C_p[^rkI8Gmh52MnL3H#6ME]D$%hKFOZH'O?Y/^amYDG+(7O'Mep^VKh(8X"KXV!B:#G1LP:!]t0.IWoen]tMj:P*F&)PFV\:mh6Se"V8VW[*+B\%/rb;S1+59L(hC)%MWT9p99\Rc%=j`UiVmV]n-L'ZW*bc:TQ^O3PNM@S(QKUuh=Zrr\KTG(rZ3`[,8lXZC!F2G?n`.QQaXo>`>F9Y*H2)$XH/n2;`uH/%UOTKuOhp4/p*;KikgQ-A7R$[U#JmZ-G3"$%FN6mVr\N6e=>HJm-\1j*a-B'95F.8)LLL8$rTL1a.+$Qj$1.jXEe5C$S1jt#Nu&m/%-^Rj2&jcDD@`iXrKpRfVQd?NA@:e_@)YFgUAf8cg/A>t$i+[QQ5uYqaklM5]+&+Mh&<%)HSMc&Sk=KM65.h:n>2Y@D/3F95CJu\!%aDkLrN!K-R"3PA"JrejoepppR`0sRM;h`bD88Yc9n*n]pj`JHmR"R[!1nSR2"V3kcSlI\aTje._Ioj?jLT5<"q4mGrZ_.9mU[\-k%Z(LPRpg*Hr?A.44gG,<enE?=kn,FuBrQ'[74CVs'0;%j;]=bK9'pc@X3$Edn8D\&-d*iqE:W)YND!mYia7_V)^UJ*niV_I0kLhcg%SR-X0S)=-nXYB8A^"k3ngWNkT>e?uK^$->:noV`VF#;Uh9Gkrs@44qc]/CD6p)].rm_N5R`@H0[g0ilnrB-4rS)$^%%\[WuU&':H%7R<Z:&4?PFZbS*NiL09mGG;q\<RD%i/]#^Q#mY-:\n"4eH$'$\J7n^\f:]8`]'4kJ4>L.M`eYm3RppV+:_7S#)K\SdKViDi'am:P%8=#u-Pi-$!7l.F]CfUu"?4QTpC7FpR1r\,^F$:4+/q]<c_XXF8;ljh(+9BqOd^iORTF#*5JKH+*W3Y:c8Rm-1,G=pAGTT<#!Zh?W%G+N85:%=mj(iYT]5U87dDoAAPD.H?^)4KWF8-K4t@6gh.lWR@/Ype0IXVf"DFE[:fTU1`"$2l,`\et#AY`]XWV2#Hb<CoYjUgX>D%/1lhd]XLS_C*9)lEM5Wg\eE_"=s3?l<gEtbaaPs;U&-=4R'6YR_CQC78h-'DKE-]k,GIL/1^*rd\.fX-;Ud=WS&0jnBFGYs5*"`<%6Qtn3."q`1(s"j+YnAg6b9`ON,ac0M-s7)^r5+-rllhAt5gL8]r=Ug:Ua0eQ&Y`5/)O;rTKp;n!-n.Hr;2Oh*1a?B[_/TO2Pq3=f%9&N.7O?b`HJO56+)5RAE=AWqj@"<^A1(3ls&X66#S/r/]J>7Br$#O@-PScahk=@@EU.A+JKqcXt^BnkC'XWS(!?SsWK/ULP^u3UD%AGSVP`iOKe'J>+iOeed'7mXn?f"rc$Au#X(Cl+m`:`]_%V.i(D*(5CFCcF_D\<$eRJY_c`Lbu$?<D#$m0TCUH&n'_J,dmau[K?:l%*m?+E^01lR.7tHaejkOdU]Yn*'I<gBdPjo(@)mh!a-26$,`r7('%(8nTS)`C5WMn6+nZ7jbpt>q1.`Y^/GaVE]jM\/_*oWi)p3\=%:omi'.Kq!rd*&*175,^K,Ec;.5+]VP<@Ut$&E^@lY_pj/XjScD)@D$NVh)l$106/DXK1<eL1?"AUCgW_la@5@5Y$@0PGT2FEhEt%%a-..T8Gpt(\]Zh$$lW5-`@7+iXYQ+d7qs3?J>*39FihUUNtti(cSKhC(b6o+@%N;.(<S`a(hCjtY\Lq'?6LcSA]b+B'PNrR2[MJM%gNI=;`fmZTI)B>oPe>7i3a][._RHrc*%<sV5VQo'Q_YZPC=t1)0R/>n7YR^1=u*oN.HaSt<feX;Eg,VTB&T:HBJRqd+:f:50sj%^%Pki;FdTcd9PemJO!6moPOqdC>+Y:5iUr^q9l&n&)^3NKI[f?JeU8:1Kj@#MC"MKsF4qD`W.nUuj&E'UL^r-I6*t'H:,#$Z)ZF\AB%OD^_B,O:5"[rU/"-K-Fj`,\H$<]6)iGjcA1'@M/1A[,E1NRsia^u)HdLD.3F&qD'k1;K,SAS_f)D&XN).M'Zla)i<Ea'<Ak>XkNt%9a/[=o#db-D;+Je:jGkilm@pjI/8MtQjm9.O<>(HnVdYC\l'Sr#NB19/L\(Q#1.:]Ak\CSk"5d,(oncKAu\6/Y]m3CjFQ1$3l*)/%-kuJDZot?%H2?knWE:JYG+_lpA*k.j'fX]AR7&h!)D@qEa[U!+B1DS\mHg0:P-4-rQ0VLK3(:Eq<O*L__'^'.:@U[SO_#ij'joiC%!$@@JjmW;il-bHQ84^HJ"^%m3Lrs`HM`jR^6h(CT#(Y[,Z.SRT9hDI-1_r+0kjp(%Gi-=*-F)l*6[',h6Kf=em*H''jNpJ=X9LmS%,UbqchN7nqk6@"M$@B9FFNR9<+%OM<11*Rs_\AP!./gCs,om+h^=6/>97S8.&/&7m-/CEd@iVikLJeYaqN_>?TVVt::lHN:L7if)%LOgWm@*XkdK0p>/N8e5ri"A]uM.U):fQ#&+,N,JI1R@)hijaZ<=XC-\"Z-m$A-A61,sB)m;KU'DU?lD/GT_9Fqe)K8;']CV[c0JI%Kn9K$IdV8sY+\51/JHsWU$13gDIJ#`GHsih[H8N>'6Y&,WgDo_BM#44U4be@h15j%Va22D*DJpoZMD*J.bS=a[91P]s#nRUgpK;i%/*t[rLn1CU.W+;"RuGL,mm0P\GB`e%.^.Ch@CBWg=c*#A]"tslYsXS^>iB$>_KipQ1o$NZ-L-(f7-[c.]eVKej!$no:;$C[%Zm*n%YOdXY?9bF`qY,E?Apbh][mCr'C#o8sdsq`nUY,qT5Dl:JLB\N(.:p;*QUDW^KHOi!7C[O-7B(N`j5`O(c;L>=33+WsA02Y"\Q)[,%$5m0IJ/=FScr(D^<G@&H@0rBa,$btk+B-'3;I#0V>4r\&P+abPEkdh==Cagd.1[ueqqsbal]NCeG-lD?M\>t&6V*=s%ic3nktiu:%>#D"(I&.ZWb*=4FGu=P_05DtiErM]/7G7_l!+h$EK=4df:ng5KLZMtPW!u("o9*<XRAQZCb?tde)HaCSRT@UV!#_jh4'%f?(`-A?%6<]S(P7h_'"r^3D77L3<-u\[Q"VE7>!@Cq0F]jSE.'*_H$C6^).Fes+``]8uOdDCa"@62P"h89R.O,bIHDV4;TnV/B]SmA(+N$!S%rC;0!1;'-kL,WWNd^$V9:^hrBVQI5Z-'CBKPr5j`nrbq#;PL>cj7:n2.7iqP:%2nZJsVu9nAs;rdQ/NVHR,N>Bkb6^=;-6t,^=!P%3/3R>JI!nJQMZYBQdfIMDg71kET>?`=H&W'XVs#DWP+=^EMsh-9*%^DM;EEkj&P%iIBa'%h2#1Ee7,d]#h]@h)>qo%Zj2D?9S8%`%O+=i`eO$WN^qnMD9koQJe?WJL"d.:l_6Y+f&_8.)$PgNT]5"V+NC!0m%Dr)2VQYaha[X3(pm*,ipHaBHJbqgHGdr_7BRK%FNVY1C%Z-@*!X,9ZP12pr2E!>90LhPuq!_qV^=`=aJ@0(l:m'3_q?W]mNfnQNB,s.89.oh^t_,1pS<8j6;<T%%7:dq;e(flY!nkc"aU]nh*%E6!?YbLn*3T7_.VN.Cku3=G(14Ab-Hs'Sna!4e_6Er\AUgFU-7R*5YjSdlr?<o'[n8dRBAH3*I<DY4600h:8J]`8<MW.4S70,@#:%RoPjU']/$VRRPQ3FN%)4e$LModnq]oZ!"o-&[WtR(R,^2"U]-$'XWR=RZ"t'A$[Bp%na08j9S6,":0%`T[9DCRC5p9%(@`'/);%!%miC78Ff70/Xbks*7YpOS>D10MU3HBg$qUiX.b%*7`uEB*5,$q+aQ*G%%b-MFLO+M,TI@2?e$_"@L7AB+O;]F8U-b;`B@'rrq$S25%gil_S"JB4X8n^k].&`CZ&a``,Y6,b&`>WtmoTD/1@O69qMPKfif-.?V7Lbq:=G,a!<4:o2epISj5/0EUh!pkp7)s3bg@]6,3'6#a%:cI<roLQ&c9]e-n$p5-L;bA@!KsG6`$oA/Ni^,A\,1;;QE`-q3.L1pfT?HAT.`dX`m8Q,\p?j">eU^!j6gV[1L>k9!AH3%D4c'lT%1+s>8'FL^43=UQN%a.$$j.M3FPnt)rK@RA-%&FC97A<@.%E/nu%CiGJV$r=%;E/AsXACZc:>d6u5D#I/7Gsii7h]Rf(Z*gHU(>Am%;UXV04s\@KDXA!p2'7@VL&msEm6PfXd"oS</g)@)BU(J^,Bo<h.3T89_NqZQ`O_?e&FOM)?m?pMBM]2-;hCu<.0R^tm">D!bb3c%%S*#?:_d-3\8B'"8?.37R&4&(A[G7j_ZN=#sEG-7%0Y7@aQ:PS_]qo;12WMf;7GLk.b>>4Nmf?Vm.pu+AT$Hn5Htu'l`lCtTe4)!H%FVO3u6\*HC/YC-s7Y"Mm!laU#C0l=aI8G&5#G2:sa[iuGILiWR9u`)kP*H=898*i,:b38a:Zbs#q*[!qB`H;1+,47hF:*8J\W'Qn%Jt)h@h=%(C\Y@D-HnGW;Q\.3-]V#Q_4DP>."/QSXC*K+,'e@/]VG0<Q'3=L]_*iak[S[]cGm,ml_\nj!f0P0M@ek7Lm37-K9pC3h%,W"sig?!HOCnri[XTi:6M+e*^%p92Q5uIVNQOeuWO<L/[m'C)&0FeAM.NmX[&G3ki*/ODr,RaX99W/u&]0].@_LU"]i1C;Sa[h8H%L_L/OJs@SeoV;5kms%u`B3?$$B=u0@NDpctLm1:5]g22:G\"pSJ<r2KR0Wb8aQ3;aI'X+bk`TO#M.V:q,mW'>#(X<f^J"Q]HqU&>%O\t3D#'j>k7DmXq5?=IkQH2;&+&.)k.8+,a4g>\oL]Vmj3t,@#Qt,*kUmBNk`MHScXd6=l.]nd8^C/.,l(]jH7620$+H$rXWGtDN%Noa6Y:ZQ:E$<@(V9_Q1/q?&\rRZsKF%%n-L9`>$27a<;k#_,BKg5`&Y+M`SO!5h_Q(C%[O31oW*5[)A]N>H*p:&@Q!=<SF2f#VJ_%PI=I>oK>@-QXE*(G5$mh0ppHJQh,(!.)k-U-eDU?Xt#c.dgV0jgKY#bX0'P++,T*;-@H231Po#0B[I9+`Efb'J.;(f^4IAlPTYC[%OGo]&AqgsIja]=mZ>S;Wf!X@7**`Zb[DUN3P[dVeY#+&<lbRZuPLr#Cr2@?`AZ(H'.`#j%()36f]u^.k2JbJ?7?q6%&YTH.Y(a%;%%X$$iXuR&!j*V<rdS`1D@DZ?:6JuOZEegBpq`ui-Z]hsQX3#]q/<p;u&,UD:=s$?5H*f$sM,Z38;5kt6.`sWFZo?-t.o5\E!P6fL%>FJei"#k7$.YKaZJO6lk/%IbHAk3?>!aj\65:sf`l"'7'1_q`Vo4F!,TGhAV7[!R,QuMgDX*Zh&IE4qcr#B[ZZRK,`!Zehg<q[Md%0?SAS>LLoq<p>mMaBLJWV6*QPQV-PRKGk_%AX$XE8&EC@HkJY)[+k-TG)(8<P-E]-M$]J(0>S)rCM\L2khZ_g7C=/]B616GNE@BO%?^]o.cgW/Pc)n&7=Ee6YZ]WN4&lNBuj)_J)?E:50e!Ym_ms#ut`u7cOJFLiE$QI2D*+%O\GdJ%r?E:r\Kd4G>GG>4L\Ha'VLo2u,%5!^MARu>7^mbi]IF=E8.^XD43/AHI<1##,&g302KKgW9DMleo-^Ph<C<`F7rWt#TM%R#]NXT;eS;V=L&Z/PsuO#'3006ZJ,H0RcC%Z=N&d>mfXjE$$[D.ro!&rge;4W%JZNFZG0:"9G#$)CA>b!Jf_[-bpSt0GNDc-k:[8SV?'7nCh9>fNB?b,tZQN*2^P*PrS\>0Hcl1%gMrY,n,3am8.m:YiH@$honbM`(4JOHa,'V_KRK+8"`gN_3PmC/[mQ]OR&B'Vomt\f,VB75&gd\Rhk*$\@7Z/FW@N(R*8W"BmluFP%_^PX5?:=L]W3QNH=fE::h.NiBiLCXj5<5c3964c\%`Hd8]V2#P7b6S)ZnfE:T^ue=49EY6X\$^:e?=6J%'#dGU.FEO17cZ9>sL!O%VITFlV'Np5:;md46<P!Wk,DIoKIAa(esjp^IRuWgEO!q``PS8u85KmBVpuN4[kb"^fts^T/ff9=s/DL(&eU;Cq8LnB^j]3D;rVBX%)Dt7VE$_,e9Q`>M/UXM:23P`p]GcRqK"rCAnr"28Y`0:6-,%3]]XYEJe[k[%3JfYAK-rdX:?%J6*4eJs0N#RqHfitO#"urCHeL9"%\7<h$W/1beW#A>2=5,U(>q6sKWug3)W\)Vb\ME'/4n1([emj59J:g=t5'60"l(`Kh^F37/=*QNYZXiu_9*"DFnCh%h=bLE!2p1uS%T>=$`?.Dr!S.S*aqeW-sCXe(S>NsWQ/5XoQZYK`B_=;(_c3u&Fb90BRp?Zf!6LFCTQ<%'q)i"X`^^SdIMCkh>1UH'k]1q4H>Tu@r%"e7fN%q`NJeJG)(0'M[Z'7;21^IU,!W,Rm9jbV)*?O\[>hg\`'ZBPA39bB59LeWd9?AFj'(j-D5c`d+=-*NN78n<XX9#RQJ^eP3l%p\B?qX4=BK#^WDGbud8Eg?<r>D+:NX&aT/U:M'1Z@h6)r<g.?s#[#S$))k91@m%/a9.S,DSQJdZqaFcb@M*\!.8T[M?pon'[#]c-%?X_C)I3MtEg4pQA_[Oti[SVIQpaVMhjEBmkO9T>dgPCiu6GZ_''(G9(1qN8qH\TDoQMjf:KkHB_$@H]Nd8OJE3%D[>k%Pm$`_,LT%@KiU2:5UbrY,B5RoHnu1/JL7W1bt4cW)lGh]Q\B!pa!YI6fa9/<oNp,8XF'rHYrd,*2f2kQ*I]2,d-C0B6jZo%hTO;o!H5h!)k#L%,+h3@Rr1B!4[Bl<VG_L1Z@6m^'lVHa6"Z>F1mkuo$3Ou\kQ*;97XE-JQa*;eo<Ki>k^f*0,4OgMDa6H5_obeA\1&1\;4P!r(r%Lp%Kc,cM"+)#O^du#N,*2HbJ1hUnNn:$"'G;CcecB,XdF1C>Y$_LPb.T*79S^a+>Yp-KGu02-5S]_dfZ/o7KTBUG.<^B[$jhH8DkI2E%;<-kW*"![%PQ\`%+JAe`nr".aN[FurJS&>k,gQL)<g:^<,V!5(78=4b6%Wf=0eMueJX-!T_31a<'VgAI!$uMRN+3,aJd<=WBLV89%9I7=lNm\K_U>CIT_%*'!LRT%KQ"2/+;5@MAk@n0+[ElW@EcMsBfnGcZ;>:;%U3s-^Ht+G$X\$;\Yk"1Ppb<[9Bl7<\RSbJc]+$'"%S!Rm4m;l*98=#Tr+%dgn1QoR2b.nE,.YrVL3(;>nX7TPPej6(.5s(`R6'-US@OQ)S-YPK1>`,Ih6l`/K+K?9;#P1o?[fD+DNlN"H%1DEIn$QDQ2&P_qS\eYfJ5]L78KLk5B,:[g^@L;sE%n0`JH(L.W/2"=+!X)\=#l#J]:gAhl5UAssW/*$^joJ(^aXAGb-2FCuNf!$X%P38VO8e#@!aY_uY7EYI\P4Sq%!F]E#Ue]JX+rX8Y%DU=+=Y^je;Rl;=lI?=OeI>)+8DIb/@:b/18pMd+8$I4@?m?"?8/CJ'a?r7m%$3s9n2+UD!HuUA\@7VHSo`A)-+Bg%C*,Fmg%0m<nPeK[U-Zp5c!L,Jj.e6!'d0<-t6lp6;QH(!p'WEhmAWfI87%iVPo"7J6$Md`n%<J1uZ)?kccM_`BsS'])Q3[ni*cmn%B`$dUJ83=sd(N9KDf[NSo74=rqTW01](jB$K.jGuESsH7-+DW'4@fuha6sZY:bf-<0j$f>T%Lujmm<"9_HJjg>tW@`P\)<GebcC6D@=%S'2ZN4p>ekBhWm@a["c5JOA@bU@7;BE>o/jk+<1iH4t+ol%W1;4(k,:1nZFm\+:o9r,b%?+KMeZJT&<Ta0"(SC)9-NM5$hQ?I3T.'-("MX?*N8!d2MCV@kHTWo:Y/s,b-O2?ASo%u;'S!X.enDBc62iI]JjhEhR2l#"Mr3u#&%q#pUS-3#R>"Nc/:%ALU-Jr9FWHeCKkmsPa,g=fq%g#?M4A?ndt.Hql/p=?O*!?p:DAbGndEPZ7iJ-6[HfhA1=`ANl3'gU7YJuM6(%jg^mi/<>9"*hmk(H$Zf$n:,j(R!?X>[+;sUgbTG;CODo)pnf'jhRXX=Vo.24BaZU"^(:aeN(s0'Abq.jRA%GQfgO9\@@PG]s&M/_%*db_VbbnK77JVpVr]hNbaXbcW5.%MEMJo<=M0r3IMn$D];18k%'pVk.H0R2>j`@\SThTUJ:CDJD5#_eq@<oZj%]2-=QpaM3pXa!!%SP1r*FMO8c(@#uhS<4t!%^o`FWD!@)8il/T&<?9knI4\Njo/tfpM'Esa9g:\'9;p]JhKc=,5;mComeE9]Mp:k[k?62^RVZ5lT*"V%K:pLYq;TM)CEWm\Q-eZE.HXSL0D`<]Zs5qn]GbBr@I:d%fGYk$1ao.un]P2S;^173)"j]=jTmpdh1JbB,X_G7:8BE5k.Xfh\Da5R%'&^V"MW%)J,m\%X?9R5B7h6S]D^a1,;AD]8,FM`mE2(Sla9._jH26$k6`X?$]l"9+f8@KA'Sm^!FKN4$-"-Y5ef2r$o'p6%DCmhe%lORg]6'JO</B/=dNTb_a6ein,[0\;Zi'b.5^cDc3oT>qb,bHV5oB2:>M<+V(=!WnX``?%&<)HO8ng63sX/%k.do4E"#%O(o;J\M\%)Th,6dd,tRF-0M30'$JuK[M1o?jiOBd1mC:fqP/gQ;1"Lcc]6CO\>Lh&M%dcaPr0dpkAEiY!AtRFcF?I`FN</B*c"*5Enj;8mAI'%A0IEp8Sci`s3/%[?`[F)_Dc!L4r%@<PY()k.'qR6R/t]Y[T%@NkHcpB89J-)TMKY=,mtY!D(&2VTa98C$!iPL;DAEF['-5J89Es&%3C%[0[8fi><"P($BiZ*Kd1sh@=0o/Z_?JSYc+?Nu3a)TolX'uAN>7Y[<Ob7[\rKA4RBTPqpG3TfZ6"Jq1mgl814C[OT7>tDV;\3e%9!BY(!bg[U:_?[UQ\r"m3BpE(6Ri*O6'XpIX<_%dMG+%*8Z+=8<tS+haTKns-cmEoc-]Dt:.a%[9ZECE@^@s#BX=*hEE"uA^j.2%%hK)8u;q88o9?/f-URa2?M5O94cpJWbh@FqB%V2VJ55"S,C-7pPN>9;%)U-32BfM(Zkdd*E;d]XNaa@Gt$`SP:!<Y$3eXkilXQ$PK%P5-*Am2#?:/X4TD!r6@8Ddb2laJ1AjORT>+ppbQT,^lcd>u89D/Ge3/X5O+LH)U!HW?VaV[<p%KX.FDKN5o$U=%X9nq:c+G.U/DO%/3!!IdP4.3A[6(N?)\5N_e^Jr9^6o..n*g*>#koXeT:9$[sS1"18Q]nAh[H)IRslndPpT89da"JTe+PN$.jcAI!U$JU!\"C!mI1Y%UuDATf&)3oEr#'*.\3q8,tg^Tl[_bn)_:uqq!b0rA8Zg2dtah#C+QOq)'70\5Tm_]7!<FlQVO[u*<R+a3QJ@LeRNb&NP/.[\QON&%`U]K%4k1$m'ri:iC8c:UXej`fR+F)^?QuTZQ.`ZUQs>(l>G`?u@"m$DTkNaffSJYf3F>8A5a5]u-h7E_nD:sJ,Uu']Pqm?9%XXuW%3gRlueS/+1;r"1E1(/e*b=S3SJ:Ue'OQe#=pf:<i0A(keP3Xi&gKFSC*<g%]60mQu_e"^=e\hY=9u>Ij`A.\A!*@g/-'J)"N>OpR%A.^RiAX+]CF-rdRP[]CW6D:`uLbpodI,<fO+huG6Enq"8!=/B(G8.+WLY2f.iNQ*d&"-2SCf+ecnSAAZK$?P)J4.Kr-^BND??M@m%WO+2d9o4?LPt5Nc6Wju^,V)PiTZQ.9,/?Xtm5O?TTpYO"0FD>sAJ7pL@_ujm]W)^:eB'#03_O**'9u3MDB(H-WF7:V\\*s;B%S8c%KO&V77+QI;!'!^@9jfA"-uJg9'Wds*>JO%^R&3K;MHs\:hB#R)Pm"sO\gt!gRfr2Y"V,gp[JGD(S-KrcDa+N3'qLI87hdn$bo0-r%1n1AJkQ7K9N>]OS*@1uF_EVh'Ze8>$(kpIc7MD,W)&`d:B#gp9I'RN"!G_Nq>I[dD2-&Fhg#sjjMIDI$[)*6'(%!T#4Iu6"4!P;'%<k,]ASNd0!'q]piD3)a(j@u?>$"#S$p\2Vm%0H`<"+"39Z(bi5N)1pQd'dL03=+r^cW4!k(hqB]1q1^@$D!'=gStO'cG#?nGV1"d%^a;<30_%iQ:?2FL0pPcP+kHSoj-5Sc.e>rXZ_8E8^D3;-"BCNoYZ-il*4d8pY"g2hFb%OLiF+-k'$ZunAY?g]^taTLF.!]%Js&`W%<^(:TLCm&eB]E'(c,Sd/@!U!_'hoGUV+4t(*0B,bC:9gV2N`"`qWotng3a'U%Dggl8BS&nBlbeX&Th,Io1UR8S!32NA7XIE5oA5l%72WJ'U^B*`F8$-CBeXA=N3(dD2\<'pRE>Q<Qa)D'+]of(/,;LE,.<?a+XD1)@`>.2#kVb2iPn3NH+HR+-KA.+2["hu\GdqIEsq8R%DV@3-L/rI__i+G4in,k`N%;`8af[lM=$h1\@jTPge?C)P<\=[n4,:WlpC;iE[!T=6Nqt,cDs3iYR$,ED0HTNF'A.7:W]Bj9ko-^s%Df238BP<=K[.Mi?_qndF^1V5VFZi[Z+0BGN1k\a]?_NLLm#>tlXkf1(SO6(Plek+I:j9VfkG&W(88sb$;bI[UnCd;W$W5O3[cD5h%DK!W3\dJV)^WPBg2HZN:Jbk;@p"n*4mWKp;*_LQs`ksuI_g33#_8In?a+pGX<dq3L(d>PKAELNVJZ\9H+j`/Sgh?-:C.lr.;`>^Z%Rr4UrEei8&r`.Fel?I<.T,O8-#Y]o!;q=LIE35&Sm@2MBmacu.X#\tp/k%odM7"fl@TIS^H+4Pp>Fai.l0e1;lWS8&(u!p280'cm%lGIU^E4``qX'lpU"%Y%tQI_D.i*6/'\1c62*V9\OlN6,'g'jie-C-&[\](nHk'//sNd=#2b]6p7^eNE>#LBcY1j=]n-DR8FWMss=%^NQA(*fk0TDlMm?g>E1T9G7=AT24">[&0/c'>_&fX219D?75s]a6U2XrJfWMr>TjDRqnKsljdRc%9q't6Z%:$CS;uloDZTF*QZ:u%aQC`J;J@j,mOq67[daeuI[VSrXf7CH#0)uLlL9%&P//t>ZA!WZ46Z)BosNCH7p8<h!61jRSu_8>6eS<up8PuX/%&QmLmm_T\3Ym2%\Y`Oi,kKeJ2k#;Fl3qPgEaD<oV\4Ub\QCp-p;bnQUXdV1H&.0,&!g$B#c,U;XOd"uk^.A`ZsEOZ4rkNVi1ZIX$>tfkV>>`+c4J6k%SWO[;gpPu^[56XdhNg-JAdOHm683(k364]o!)Tn,+^e.nJFmrB6(fKUb1PueGT!bIS1Jb:g`1Mr*gd5*D%<cF#IYk^=@6AU>FcaN%mgUpo"su7f`P>#MHmg[7d9uSKr8MNEW0<U,bcGoO'Gb,VeVWP=VV7E!p>pY_!Lq>gf>]$A`)"`rXKf=B[VZqD&8\o"*Ea_YVh3,d%J$_;0hj@qXLSh]1#RP;sc[ioJC2"/i`?c`Zoc;ZT?02eA=P-T<]</W=jGAW?A<?"f>J[Ka,)+e9jArVCD%jmW^dN[W<6e+R88@oP%&,],8)O=(t4gs`N"cRgYNJYcUV`r]Lg>L!5,-++Y;`L2k[h-ZDN])S&bRT=EK0=eIIM,4V]6>P.BBk"#gio'FiOP!S<#FNL)@-a)%"c&hG[=/Z4&$.+PTu>M5;P#4FckB)o*RecX>]HuX0%`6_gL6bKapk:?%YoBhh+<-3ZlNluRTO?rcB_CEKStJ$/]F;dc)N0M[kVM(%*,4^hACj/I6AgELdQ9Z[2:hKoWkE.?[aoAJR69%+`G;E_UOTFR7_6;6oGA%/\d+^NMT^jY_"^NOfUlVf,.N33L0cJd0pGu4Ssnl$%73f\59U354W0u'j!QT_U:!6Wq]%gE$+k7o?L^8fI;FjZn\'0$g"SehY6@e8NnL@dSeN[CW(hr6'`tUkZ>ieGT=o7!D*boVm:!Eef%-L+eleqYMO99FtQaLj8\>Kr;0R9nR>1t@B5!d%>8q3@jcoVL`5NGsB]Br/Icb9An4)rSVL'6u4ch`*FKj6l/EM!./a%A.6`m92/3%"7c1E0YnFW!+^<iLejB".HjE?@&sPI6p2aG)"G&91#_%e]gkptc)ptmUm`B09Sbri]=Yn_:^$cLP:IQ5^[^f-W"YJ>lcPqfTImQo%0VhT$'N-ETD^23@;Hn^1._e;IphL<;$HjR)Lp08l3`HAUdgj5-/oO'&?EMTeQDq\GKhs9:92OkbVaAnC>_X1*.9K&5=;7u+g5^E1%3<i[rFm3Xb_ri&EX@$hKTE'0d>TD;!!;#f@dRldlMftc[L=Z/c(kr'$;$Wgc@9,oJlW!YTB*[jiqI`XhDU^oR`hJEgTe?n1"P(KK%U3`W(57nZP_5Jn#K=YBgU/E>E#`C"80Y`6$G%g_7DT,TRX:.Nt8M9>+>R,aWRP7PO299m;*[tj-)iop"NbJ6e@bueQ)C'q2<5Es;%eN/pdJYb-%N]q@30rl>;$Y"B/`\O:<;$L?*B3_UL$Sb%)*RKao8ARHjHlH.uJVZOC?'2:L64)D[iaCY_GJ<8^$]LG-20sn;"eL+X%_p*$e[Xcs7gn9,r7b5frrK6IY<:ruEGUTp&SF5;^0YAi8'4-bE#VQC6>Q\rp)FlY[a[CWX=_mT8E0J*'MoAfi-qW_WFj+Q9S.bcC%l[qM((^d\OUHR53lOZqJ4k8Hk)CCtF%k^>hll9TP_RIc!7K[J9IkogFaj^M!B#c^=Vm-CX5MA3Uh<sB?_Yq`eX=iK7_'O3-oH#Oh%$akp"Y-*PD9p%_I:GpEe1C-Mu[K@b&N=4]F&;6K/JAYaT0itn?AMB]b$^n7Bp+;1_he7)_<,>e4AVJcCHs,Z;9&;+8C`I[A_kCOM%0&^-7<nb1&fSP,"Fo+dX1qZKE*+De#F%&Dmf-H-;ls0n;1-O+5X5/_(8.Z)fF!=&7fm88-W(d>bE*SUd*uQ:2e5V];C2At>7b]-q%5/hU5fnWX(K.GRg?fgDt(R"s[[F)k$5;b2<PU6k+2,2WFgW,54U;cB'+@_Z-@a_q=,pDn(6?B;H-0eVPn-+XAM)hT@DQ-obpp>DU%YBq5#Y^h\\gY'BXoLp9m50ZWG,+pTX0sD0<1kYkt58jeTQ.\;IN<\D*FGEqg!9.U2+9XRG:nft]ZJ6m`K7gM"-A95iAUQbr30J/H%ZWE.W>PfkQa3^n+:T2YDNfs;Qg&NiL8I4i4U44uM9<GQYNPMG[CLSeg!,Y=$,K44QY9s&4[Xm*M&CYGp/#1u/U850.CH+$)P;iq\%X<UM`:KEBuK!a&'k;tdP.LEtmqDJ19&U"j5P:`AfW"8ca0lS)Ze[>OaA>V]3RMb=ROp@gdG@3BHljY_H+@3G0(6ghkkQ?-PIOQDJ%%="-C'67L7\\dqO9hD(o\#'URgXk5hg:G*FbZ/O:h#!'K=ttt?&kQSrKppbt%;dXq[l/I(/2->Cp'h-`LRROt4%IlO);#9d?n&TW%F]>CPWn^5/K*j!,8'_=eaWMHn<R3T(Po:VO'6P7F8:5Kj*fYo!2D7Op95BZEBOJ1X./9B2*9RkI(T<\-o1XWF6p[lJIqWXA!*c>.%\\<*@$'6q'=k]Z+LU4JA$a@]1Yep;Qe'[NNPM)u_7#Ke$(+%*NHU7gK@uDSFkpc!fo*83fNVO-QkM4EVH*bI%FnR_;c7V"Hj$HS5%gKQoDXB0UaGK#d:0K,-s_J3uE8+o]c5WP3^EVaKrbu`/!IWkAH$Uim":V1)/,-CgK<?KebS_P(aTUKQ^m9!aE?)EtR?"aL;KSIOb%^9N@#]CjB[9!qd$gu3WqIIGes%#X3m/_Qgq5kLtDe>B#e+H5,>_jLgu+dqr)!'@SL$/1D<WpQ)pK39<>j7Grg?m+2>>1j<>^n'D<%_gV(;;,B/:9"oh/^*U/#&bQ5"bYoaF\)l`rX+"LuGSdF[\Q%m_osRh1FeX=hn&TH-;`7K[2]c8-XWNHRNs(=o=1r?Dr474gN1X2S%Z_+q(]a,QNo:sPq-`cYE2Fh#aV`X>^97bKfn642nR`lY2[ZWuMR:tXI8.g)BA3tPqf\A3#-4s!hM(L2hcp*QraB18q57JrZ4/7/P%Yi4J10!32h,W/B6q"7U==d`CWh@>]c5TS7[&T>(<1NlKD"/?AL4'U;<!s=iS&>YBAp:!n1+R*liFEnPD`KBuqKh/kWSdc5&<KE%_%m^(=/6N>tH.0hA;QuXV_V/#9TBc=EL!"HbLMbuC.710&apXIo-&.W\TlQ&SlJT9pWj;\$u[WeuPn"WJW0;O3)aAS7k%#hVh]/<?f%1l.kRgg:o?J@Wr#HJCXkbCN@5A1ZHk6[I7ZYWk$!$(W`s/T**BdU3]CLB:s!h:l,Z>GB=PSCbTS!5Hkrl>E0L:@ZdiSIA0pZ=P4M%Z('K6[ZLZ@EZiicZlO"E`X<\nl0R>AWEBKZ4.,6X"eCm"opH0n='Gc?8?R/Xft&%T.nADucC8O9:u&#[3\W;=[FsBmR6)(LoFJ<!%<Z>.6O==QC)@On-"r)1_=kR!u%0[O!_(Y7tPrfm*)5>9C.(")/]bA(ed^3j.VhJ\XPsk^j/+_^'J>GEGScPq\gec$2ki@;Ocj!\o%$2[eE9u40TXd$9]kmdo"Lp9:B\VXP>3p5Ff2n'c3lCP"+(0.r]k][H:Pf/^`\OB5JTb=6YnL[LI[?=<-6jbk,?CXfFfBR_3!h4+t%7a!N'aeb+/'6sU6"q=ZV:cV8Cd83YUK!*fFi7A/'Ok@gh7m!C6mS\;CG$u-h+.d^&c8E$8LsGuOKC$&n-`M@#IqWj,kgEcjOQlQ^%^bOXJC.3t]lsdqHcE%&XH]#VJS660mGL0<"Bm=bT]JboBWQi;VO=h5P!^k>g0.hX(:dNWn;Z$S7>7gtTfm$7S__1\9+j#ZD=#2TD%i5MsDrEMICh&u3(6ZK><"1=U!]%@],N+Ia\Ok$l$%PoX9M"-;=^m5P,Ona%-@%:^pTk07R)f(<38#B_7bX-8+d@kkG!hjR_obq7i%Kq0_'>;sqia[?2Hf@jW^1XI@]+t&kJ.Z(it`D5ofjSN1;Pj7HFd#*U%`QDDuW;njX(S]gsp[piP`ue!1PO2"#5f8P>cCFuB;/f'A%oYeN\E"8c2UejB]N1:97YNFF*Oq?0+$u1*g8O9R$F'NAD0WPEI7N'[BD:!ILH=14!4foT4A1R2&ag3\dCb!87&Vs'RftllmZ$&k7%PdDrtWdR08J=%sjJD.[s+R\"#11t*+HkZ"+W<9/5@5GKZ4X3Es]`DmZJEtE*J@5UZlDq>c.E6^Ma#XC^lQth5i?mJ>,[nP4dfZ+3%T8HbiI204N4AF-e8WG8a\=p0QFl"!_$4TVk9LN+lA2f74RQCmuU9)D.q?/F:YHbu$g,L#k*U,cJ:Xun^X"cU9M(Y_)*,sT@F>lFj%*XN*8Kd'e%p-q4DhPh&H\Q)ImTX:);l\_E<^%3`L0Er&2:i^&9A%c8`ZUEPO.@HNg^(kd\D$p.t23doeqnd@-Uc8hcjmd#kHbDKM%A8EG50npX=;FRS8]@NQTFY/KD&KgN-<$sV!JT5QL$B2H9!uGF[.AOi`=2Pq#nP[VP5k+Vb_Yp&qc7gm<4m>WqaD<19gskEEPe_Ks%HD*aV831^o[hhU+U,Nu-X3RK*I,15Nh3al:;+rOVc=UQJW_Li7J=P'OfF/V$aVLt2%+YDJeMocoOF7%iqW<fUmtLi7C.h@KS1q2J%$r:7l][#*+Yh1@I;,Kih$<+;J[])m+O\!EAc]?Wf!V,R3dD/:sY'$[>b3CdHB[k&=nPF$Xgm%BMq0"f^N6JEs7?l;oDIA<1%.bJV%`#^04BT6q@Nh9G<ogcor!*lln3so6M#&cJi#n4Z&TeX(1f'\eC&:78_QJ8X&8WAb]!.QQb#E_HL27t"(%<&W>Skmj*],QnH$L];D%A(e[5Y&h3p;j3e@4:X9V%n9_<K-9gK.!8'7ZeAVU$RrlrcL%M.nEN\f/9pl)B5c,_Ec+<a5qG"!%$$PV"+o@sNRktZCfbk`TrVL"%KQ;O#)YFf>T"\;g2`[&j,Dh8g8^BF3TGD)6Zou4?3Kflc?4.mdMn0/h<^YUK0O,?pT3KWpf<U=Z."Plsl)$odC-hlO6=;beSEMEt%E_Ct7\OJk*I:^8I$,aIKKLiTE[mcWfVHOFW;;.FoA:\@bc5Hg[BkIU<TE_pk/a,`+)TZn]Ja@Qr%sN4+LDNmq5UU>:$X9NJTa?D%%;aY="FZJnfi0b'D)g^;e?4ao-@q78F!2!\/]$?'DjBBdl@U17ng6-t@nhelCQ#>.%_gu/I:Y7>kh/,gA&r>$4A`2u'l@Dh,`WFgY%19(tB>G432[dLTCaWR5?RioV,l\cnB%udEurGlC5V2Q\8r(FGM%dOf*dJBHNS@T`_='[ISEEn!.SX],oc;B^=DpZ7]8]9o4p$"T3%[F_0#Nkg$VDMi@fM)oPZ7=8ooW/1Z6qGp=PR@RUMJJh<D8\_]4fuZe$4cHQ&*8DiAE.u[k#&"Yl0,!"+J6Jmkp$b(mM8DeC.d\1/%)h512bdd%?gOd#K[)-]WZTX_Ub\"F_oYn-_q95eM.C1\6l%0^1lM"d<B;Z1D=ECa+Ht'2Z'qY68FLm/!!b_*Wc/&?qE(gQ.#4QPV%]GLaGR^^u,%(ccg7q1f+525JJ11W4B-r)-kVc(Y6Cc7[(cp>1RHE>!2&0:85HD8E6$4NB/gQ3q<:?5>X6gtLsA^CuN:`E@DeCkM-%D"El$6;V8A(M$our@,BF']3o]#>aaj<jUuU8'n'o5Uqtr>R0r=X:iKmQ)_Y.:=Z=W_(5DP"`2-d+$tUt0qhi=@X;)&q>C>Z7;>0G%]jK`_JNReF[n/]T\Uq`YY^oZkVDY9E*$W9ZDSZ#8TE?fp$(ssiCFON2\bR+;)=LB[PDsMAZWg"D]T#";*RYNp(5aPg<2u[5OlQZf%R186EN_h7t"eFk7!`B'sIG+Oq7Octb!''n]@WGqQ['c?ZV:*fIUao7G3hj;nL9tOPG\Im*Qd$5b+9QHA(bog3O@5g*Tg+WKXYd:*%:M;@3WE]acTgitRl$:P+NF^Ke\T,77%M_W-4nPg*M9=9rW'(B(H8*u<',`+F?6;H?p$0Un:?:/`1e&3d0a'rn'[,HnL/LSJXMiR"%?3cWBNo5g9i,m>OFa"M2Z;:SdaQ8R['te/JUe=p..os<n`<gSfnU,L;<ZI&]OK;h7.1Mj;J75-V1j>TC'EtX"fqGV5kcQ.W@F^iN%A)3[f4D94SKk7r*Ke"K\c:X8QQ\bfY2mCka!*EU1;ooi\OugUFOYTor'n$_D=r,^>353:fZ'>J`ZF.TY,6^o@8o,$cff,t>-/^cn%O46)TSPXqohME%`k%:PZiL/<uFLZj(EtpWs0'P(($]kSCDo$SR7Pa!R`6Q1?`A0&_fE6EYMA9O()YM32JGEHcbeb^CDgc++A4s'F%Duj6P@$=^9,Lj66Fne#7PR^QK$QrBJAq1J7'sk-$Gg_jDQP@DDl.?+-2Dq.[_-FiD;^fUD+F/BS,r)g!;4GDS1-kcqgB"Tq.f*,\%<Q]-p2m`<"4'qH).]5??$HhnsL6RKiIT@4TWpa$<^Gl3'*e'd_4Lc_&X$VH=/MTDVf%eB%2aOsgdRb_La1K`kSRQNn=nMe9'PN&e%j0n*s8I`$:VQ&.YS.+NNSZtjaHKsj3E+N]>&890TRj6CURMgTn?u>t+fZSDkU(^hV9Xhdh?3%D1[trn+O\g,N7Zh;`6]JuWqe.M1%gblM)-]#c'!?URJLXpbeWWU.3'9gi;#]gbGof!Bsnp.5HX)=O#oN+!GCj/p,&qmI2?0r[$R]?&g?D>#Bj6T1A2`Stlrf1-BJn:/q%0J-f(>EEY./-O2.M`Oh9?>KmG%@o@b"%\^3k:[*(<**r*&h)s8"1HI/[?S'6VXb+/@=[i'iu#,"=eWl!6[+T;4J3U\d<*$2N8)E,%L75]%oUo$4j3gk3cP3=p&42;:1>/r&N"sd;r8R:e\-:<@'m@2<7i7?)Pu3?\M45GMBMFT^etuOIF66$JX60ku;mR_284P`[3a4uC%rDdaA^,EI>R<At6lpaoZ(GfT^PaS'cU.!Il!@bg9d+1Su>TH&[GfC.@&Y5:!>9N$Bh':s2J/-KIU8N0P&n!H[CJBl!]:j/n2e+nK%$YNt>KQO#`_(_a.>;;[68:a%/7M&IR72j_0r$'[@"sRn8+'%2\dkMPO#"Y.uR4'Yp7kKk/l/A'TRep9q$IW%*WSTdLJM\;.1(>4?%MR3psU^]j@%>.'*aj/4Ec&oHdGR=n-IGPBH^9g5<)a.KuMe5MLgY:YTV+"b%g=krB*,gk%R@P_""77>14fsQYM/MHLGZ7+8jjo;e%2Uu`&[!l[Jfjf^m8b@tmcC)$5bVW2YG&R5T`W97,BBX-)Tk@M?n>t5O5g!t_NfRVEObM&Y%d@4G1"[l%&8;eEMU!ItII5kGk*]Tn%@tp3bgfd?S+r,hV9<2)aQ[g=lVh`;mZs'7-%<DV8?T)h[FF8o,/WgP:0E[8k'ZcXWm6!a0oSke5+>">K#CGTY;l!>[0kH3KautkL%j57*)l[0d/[FEQ;Nc\*6R.=4KkqY[gm@C7YOb.T#UR_m>g1maOVMMdKN[8bBBDRd(X5cnq1SeD`(0>:+/Gm$3RVq>u5e><2/1h#B%F/6^u27Y',g_!Go`injs$9dFS6s;CYeDrPYg0S'UcUUJ`+jss)dOKH,(oFm6CP;C@5hikee4M#B1F44#'UoM%\!Qom4@0CV]r+r`%e&IO4end&BO[;jCCp$P.h8?4c0n?XC@-hUg9TG3r(;$"E2UtOO/`TDi/J_Rf<MWW4W$"Qd87XI_dJD!cTt@lZl/?7UdV-b$$9S1B%BoKEW*:Ol.ekG^3@.d@XVRn/[#BfH60iLf#MK+H:.-p+3]l8-Agti0qp/`3dS'OTnAXb`d<T[Rd;e"XQflR(UNq[fNT/Ln:ACEG4%8*]]'jtD3Z7+r;+o$d+a?XU+MG@#_ZA[Er*i7PuRqQsLj#88V-le4_Vl#iJn9V'MrWPgN#\?pP4](Yo`.,$f>L]jiP:5ib><K<>-%cPKe6fr4SfQE/%tITq94@%:iIe9\'h4tYsMFPTKYFmWm\_.3)DG9^qt<9DgQ45Xj[HZ@LjD#JIt_p$aq?!g4(*%Q@Gb^4!#oi#JF%)mb"IiEMeYi><FH)908]R8,eYrH*:r[EXG9XnB6kZ=WFgqW8>>5@)PRT@OHoDTYaVNLI&>,/RP6a7/\j+Td:2Ak^c?6hTYWB<JL&%#P?JA7T)CSZ(U`+V8#Z[%=1)__OG'akjO:NOjk`Ta2;3-itI$R]"S<]oo+D,ZQU$R=bnESp^K&WgS!ID<PI#[;]Vou?k@)t5bE7[%kqlb]L2,ohnOacgOcH<BS[EPAMIVchKosZ^Wc7o(6Dad:Shh[+7\G".[@8<CqRi(MpgXq?aiagLNWi=`(</@m(.`'Sb`Gl9EF3LU%3SLR<(b(Dc/<Re/B3e!\PL^ppYAQa!'n;/[YL>7OKV^Lr'D;%+.T5@+.nF@p;K`.gs(MR5(aV`^?I\[KO0g5Po3!8+hS04l&.\j2%Ims%NoR1:_QYhiXe8a&1U%`IjMP;@fPb:eaZU-]bNDqkn0P-4XH5&CL"45W8k:Oh8YN.;nFncund36@8%e`<r8ZXbV"rt"+S1R`F%^s!7_aU78ZDM&Y:Wem-=Z"GCO209FYO>/TSX]i!9-.8O`(%O8:P[GNq,e@k-QAqlM#r%VJo;+I7/Y'XVJ8\k`2i&U##1Wk':QBri%lX:j/e0H9ST!sA<6d8/M:'MU)en*g5g*?Gs[p/g]RI_[N,``hNUJ>%o$jc7W`ZR#<8g-1XhaiLXn/$mf'^deleZmn<d"D-J)67Q:%<>_[rHtR*1/cBE%b$'r2o.ZQ1BYg"5>-__&Ck9@`[5f%O3Y8R/b7baIY[$1TQKdU7CaQ7'eRncTle2OI/+jGPJqJ\2=-b)`:ns&D%jnQ[f3N\9Tb56s7I3Vr+7aT!H&]qB$.5Ue$Ea(9AY-Gk+oT"SFCD\jIc]XF06I/s`99uV:?^5tf300RK9>4K<GK0HdODfU2RK;+Y%'BKm1k\S\JSqp8:B[ZPg<KERlJc)*Vam0eBOK;MHaUqlCG07sQ(P/i5T7IpZXB[A8!8TigU@?H<_7QNL[9*bGR&b(^=c"qTjaoDV%XkA'Q\lqUZ,l;&glBTA81l!UfBuqe[bdpkhmLRf?UMh@EObL#`cQ,>SAoh-I=/MZd_plS2A!Y##XH>BHQ>EO@4(XAAPn&*cU$3Eb%b8nVP*HOft;8G8tJ!Z-4B3hU9V]!`?3R\AM8,"e-[+)0T-,W8'5/04Gn1[??qB]iAZq+UL(9s=iR``O)IZ<U`r+4:g/^o=*`k%";%ERJ2`f.,Ti@J=7h6^4F_qDY_)*T^Upc&c<t;,N#!+7#oeKfN0sM&rrOGW':j95+:CREqfLhbBeXDjCf:<7^ie`to<%<8&/WW<Zn[%C[,qP2/*N'2+bn./!>GF=6OWjPaP/lP;GD!bZX!$.Gfbr"=q$)NlOrFfG@%&BZI2'YIuVhmAMbsN[.878tWMW)Y<F'0pAJjrT"g+%T,aX"P@O5k3$t&)8^LWdc*%L[f6`?B6S,NUn!FI-,W'fLlS7^%_L*C=];cm`f2f4u]iT.4G<[U9?$2ECX=R1;l`m>B.D"oaX==J1%WS\;3b]j6dP)Ltg3Xcct*CJ2?jU1UhapBLY$1U[qWH(@(.SO+qKG])04X#]$=c"L@Au[R@N7AVh<!/ueqKc$(H7(FmZcOO=GuKnS%S-K^T5,@k9W5ZW"E@2$nOrA!1bX-*aLG;^L<YK#KY\e+79hCMTV&</-U]>qCi-#h'4&H!978Nm-idGU>dp5lc6d@Qt9N&EL=Y+Ag%R)qgs[IE8Sd#t!e>OGLiLp`!))10V)V%7r)@WEUi`>tfjFlTBZOs%)uI:JRdJlf7CA]uo'EO*?P:2rZ2>pnc,L:BjN@<RgcgZmBd%EJk6^S4Sf`8pWdulWQGo[R$\;TV<P(mg_)u%T9T:rHeM"fX32=k:F3aGkR<W5hXPeI\U'&H/8eI5tN.rC-#>U2B+7>%Z/rIAJf9V%pX.&a5?cjuA)7HpAZaK=B:J3Ck!4##]q.;Dq3l>(!3ta.%=2[@?bQ`/)pl4F'bDd?Y"Zj.CU1KoO1`XFW+HU%90#.1%:SR9K*-t/%Eaf;?f37o4?ZH6p)d#BV=V0R>/ULLZ[[2)ij8mg%mCYfd,Ql^S(qj3'JC`+_]sXW;r38kQi>`98_3`^I@s[S,I9CXZ3:^Y>;AJ$l%4f06;:qH7DB@_($Jt!2]h_&s++YZTK^#m5`%VMs2m2^#EeH#bl^=CHpd-,#m=@[@lH=^\./Q,R!anE8i3,1N5H&B$e[%e-WGHkZ[%>>aOTm.KbS*P7RD[?W4cV0:!5hp1V\[)-T`+l#q)qQr4ek4KSh9pep?S+PAa%AtX3fG%cFPSCh!..2\H2;'PW=KM$q3"^*_V^#5W%h+pt/-I5:t4N]N".,,Pt#03RE\`Zu*:t_-AS_fG`<t7B<f[uiO3,tV=9^N4(CnuB\)JrC&BR?0E@+6022#FfogY'2.K0+k_mSb6C%p1*J)[A2>e\tt`jFVVs@(XSaJ^dD_#,h"=cRV1Drg8VC+fPHimT:+E:"k]F"S/Ok$H/fW&1H:o%RaFgN<k0`Z=jWQ/EiDt`/*g`m%fPZ=2c")hc/=;/TGjX&GFIju:eDs:P(hIMu0<W!k($u22m(r+m*TmI2ATecqA$bj,P"Vrn$@*HbQE,c=/%:4OGPXN!pHXf8pE&jY%J0LDd2dk4F:q$s9C<ZL&$JVp3Chg@YT7bsZTM:pOpH,in?nD&BdZR(L+06WY`mtnd[:6?\BE#SI.nV(Ig=a.s1_,n$5'c>Bcs**s%R[Gn_6LCf::9EJqhBo5'h)a)\ff<m%ru%3&la7QB/M#?XBta?Y!bb[&4\Ebd/nf!peqrO51:oh^S+\l7ZG"gI*-3mSm=Iu2P*bd#%k.0=5.@^`/ZdcCo)lhn@3k]dk:"$>hKu_0`0Wc,5%F]'#7qN(]8k[&9nl_k7Sa9V1a8;n@ZS\?.oVsGlZhq8e(,TXUI:X?[j)M>-%]n)0*",$K7+^$BVasX5B7enZ)AL.4dRr>F[`%>4&\=^Rje(70EQ6c(P"@SJAM6Pa8.SU9:-P,e1ObN59*5=DH`eW`O;rc^5@W4#a%?g:`ocd:@;TS%Q,5L.X/T:j)GWpKZmSJb>u"J(_Cg#Er2q\+)BM:B51Ti:<9km9C.6aF0WFS7*GeC0"r4%!Y1K$NA_i/Z.12;=^q%;bmehm0oP79TA5fj;W78HA9`E"J+\.h4Dp=R5gQWg\&]pSY<AS6&0i:gC;9U-\4=!Q%NEA*dI"75dT;gM`AL48SGhkm)/['SV"=7%*a#Z%jeD,-F*La$R-D$=;h[n`fP'Yr4`o^A(%s(:j\o2ukY:c=%:uR[*X3S0m#4a:VDRg9\1D@%qu.HkpZ^#=a?=Xr^BOLEU)K3]%:Hm?B.rOcr7$<bXPms?**gs@jVrUZ^,7Apc7qAtgLFX@;WjDt2E@Zk)_9RA-pRF.-]/FFuI@9M$X3e8FDZqTE#mh-S2=JH!7,?AI%AYp7bG2'j=NRbSkfp8.fcgP\d!OB[hcGEF$@b"S7.(@?9hjAj#<`?OB&W9\IaW9[-W*.cbUS(\JO^lcZ*AY#_@_,0K)s4D3-grUp%#L'JVbLWO^Zo_:S&r0/+rdIee>IkJ0>d4@DR^$2iF*\0e3QG4Cm;dZ9cX_g952LL4%]mPC(FZd7PpFOQSj\WgYG9B:md+V\=DP5J%?6).@B;>):9TqX/NXls*s0Z-X?PQ;<rWMCGJB/4UhA9-j2GoNm$OSAX,-UjcU+CNVr,Y+"bu.37:N'lcju3c4FB;P?;Q1q,</Ma@%QLe1La4HOh1B95X/I9Y95>l!6.5DkFhnH@MW;==Y<gtm$@)#b*hN*Y*[9"M.;lnpP]jCS7#^$L*pHLO6NTdofTjV62h6^JS<IW-2%I(B)#Y^qOu6u]?bh=p0+L=NuOs/10cf,o,L:ITK])gg\HfM7iZ.!i"bRV9>P`>T"KHZF-rRT&;dB5$\42G`,9H-2HWVRSLcrDI)=%ZI2nqEJ*AoagaNYK<*F*E'X(tSeR-aJoBGp,>1cns*`[e($h<VQ(7bs5ke$coXN>.+kKu$b_XuA)Oip6GWjlEeCro$PP)3$"1i]V%e*Ii_bISrCLg&5@o=BX&Vn`A1Su]naH=Z<(g!Cu(fTe&aZG0%,Mn-'MeT>O[O%a,,H8.!h0KQ`cRIGD!CSc9"a-3B6^31QcnFl.L%dYOHFU=@J[%-`o=O+E(O1G^)5$k1CQ*BA`8lq(EB$sOL4BkRs\Nm/W5-RoUL$u'C7*god(r4Gli17`,)9K[QG:'Gd_PB2VOgb.-)%Fn`J7LO+Gg\iQ.sgj%2I/;#i>2'as`$1i7LViH6$pX=^eVo1ONd]!=9Rqk)BjQ*<t[$F")p$#s1mUDEn\i-7tS`[SrOm`bVr=ic"%LQC&nKW,d=-G-_6$&[5(LKqNo>8BQuk"8BH?]VM?3B)SYN4<lj_\N.JX^gW#b(jcBIr%gSE4GU3?$somE,?h!8'?[oEIBSeDPU-p%XM:I7"UE>.X#_+9Da#0(^(iH``gmWAnA,U:iRR,/\[M]t]ka_FE3@g((hu'95$\,eDe6Z8K2HP5^uQ`B7o\T.[?$1"CCq65.?Lbh%-??:i9P!2;IsWnjH9DV/`KlXJNU9\OCXN-7QeND=.[0/S(aXY+9J1.Zm9QNYk%0@jFk$u,k&^Z,K^K<:TR6>b6bin4L8EauN>>A#%XYQV#e9Q,qFSfYEG+d2m>(h#Y<[0._95RjcUM8buLG+oE_a5kJ[fKDhK.k,+l]p3BGo9L1<OR#H]5FR<<nZI1MLE6mTuO*n>oU]&%?*ElO>mXc;!e<jK]nX]V>+Ii?qY4\S)6*V;lBmT_1K+0UXcc60AYf13U6/.dT_:rkd`l/;WUIikOnrrH)6*)EP`bf[9Gshug0Xs<%jO2cG9_Vlrm0"ss7k>C@@Gr,<obBadl8Pr5bHN<.NhW3ObLROT'oj\C:<YGi_@ab9[(+S"Uf=jiI`i=%i@=6;Z)5B<mJGp<Kp/uY%\'*/?-5E]42D03KE/egr.-SDX^19ajk`0g2]K8ZH/N@P\X_=do-IC.K)PR9fH`cuc_a/C3NUF%=ao7\jlF+8uX"JJpo+,WF4M_W#%[[h0T&`oL7p;#GUMcJe0ficQ#<t,*m\U=DIBQEA)Vle)&LZ,/QjX9lT,T&3SpsT6[%>TES9J.B1T6-qXQSr2fi'1=C1V[cRFJdDr%ookS`G'W1FbJJOBL/N+D=NtE1WfmL-CSi`;Xh-.[`VJ`Wh;J1RZB%n<>r":Fp\XSM<O1BV\n&:"lS@i+H2cMXj`+57B)F#Ha&O5[%<gS`Pr`X^!jC4O'Hp:B-:b8JoXo5eYAk#rtFuuZ#.$410?&"oZSU8[55+51$IWZERW_.GMaKW:6b/UHEh3L7>Xo'SJKDeZ49A$Ak%YhSTj<ds]3C2[spntVBZ%[Z'4F*a!"5<o*_-XqPbrO9,MPGQTR\iDijHk*22s7s%0s.]&*pkRij[<5s,dDq"G79"VJk0==g.?8!:%VRfAtMi_.EK.T),qQO,8;e=TD)RR;g/)3njbbA+bYGO?d'jW</>\t7Ai1X)g[[V/K*iY<-R<PVdN_4=D]l9Ic1"7f>FD%;ki2Vh'%)kr-nPo">3d]RC=,1h9kb>%`H[iSmdXb$2:C)pG\kYf6tcs/f<I@#U?W4]EHBt.s%Cq9gHn!LEF>52OGOA/fB9BX=1O!C-sChTC(%EG*bnG@Yd"h0J*)flTSo5)t#L9fKP?24Lb-/3&scB%&Wn&2Khn\i)Y@kh1'd9@e!`oi_lk9ipIiiAfJ0B%*%,dZqfFN0[1>VAMA)%$"M)S/'Fb>]iSX<Cq;CLC*h*6ZK]NC7/P/0Zfu3]V(lT2PprWlLDakc?.o-5=-sm_S$&il_,#<FZK]N#Wl_Fa17PFu@Um]\)]Qa7%'uP?TN?apqlklS[*r$>Rl,n&28nt/^Qq^YJ936RTf-o<omb6f.\q^.*+gU@T)Q8Zl*]BM5TubVR_4NimCq;BeVK2&7SPA8Y6QM]*%\V4YJMK>(#,rZg(Qq^X'h1;,SLKK;6!>le_II4TMi+$O&RT2@a,2N'*$T@?.L@*<(2(j'O?'KYV81'D*?<ra:Aj#bOb&Xa::.:jT%ZQmqU1GVh0BIUt?=Pu]-HESn^eQN[ZGH"\MY4ZgQlB7nC1uE=S6`8Ln\c/a,lr5Y733^JGm@emYrRHBOWN%EHW/YFbQFRqq)JYp#%GD_Tb<:VDha!4VWR&32o,F>qSodcLEksi/r>Xo:U(:kHqb[%ujCs"FOVT`>^UKCjdY)b8hQFX'XjAt58D9CWCHS=1'@W))tpKW8]%g>H^^CJ]f\pX7_Q\Y:[?m\f^Y_!Q/f?tf/,GZ":$kNS)5LP8.-b+p4k=10YV2dG^Qgab+7Y"]+:@t%incs];$e1(V?Mt[[B:Xi`[%b11u=7aC_h'7DlU@"uNf<ul5THD#C^R6rjOBIIP1I*kd&B1)*1`QZAW^ufg.O7U?OhEJ,0bB=X*l:lQtP=Lmu`\FKi<fp\4mBiie%egds5)f&!SX,UB]mDd"kStGK/q=`^)nQ%ngCb-KrlB`a>g/XT?,iuM'TXmln<P@#<</1CqQn]7m[JkESBSfg1:qs[\3MV8.bVY9i%IE(F"Y>X=6>Qr$G?`iU826;4QoC3*c"++(:(obO%?J@l&qU91oBB37up;s?hHF7MQ9m(0P#KUBWUbZ=?Ki_u<%roHJ>7t(iR<T\D%"DmCTGA>omOOtl!>TOL)H5X/mE7_+-ouIm9D!#5QNOo3I+"MI0_(4UVP>>.Y.<"ii=KHI#8u92o(%1@8j4)]u.br^'YN7Y07S^%m%fh\eT>`[:"fN"j3%!:qdQBN7[bpg8K'H7uSZ1d3")ribQk2UK?`7h)8Y,InR]iihlbl6hs(OK("kgX>&:<g%5@hP!k;ke;X,NcJY%K4mr:_F7T%$D:m3L+oV<f@=oC+cWI^PcJkB!kn6^l-1)SUBE7D;/BK=RmU-*C`gZ8ku'&MQX'o=q6l9F>+*;sr\:FEfIDl[AXA8o%+h\4MjLDA]+"S3B_nOKVZ<NgPjg]cQC0U,2c&R0*Ek+]>O23N"eXK"pb<6VN2QAlsX`@[upTIfrU0Hk9#:#R^1i]ael8a0N/(UJr%g@C,(ccnJQd%s%N4VF_dj-6XfNo@CZX-2p#eIU,n-5W91nL6m;e,!BH/ff@e1V*#;@=g`2;JoiSH?/iG;=(FOs%:hmF78+Tm%3o'%\[bX[ebO1;mYWCVH$"=i,#h8W[bDV5j]:Qo@@R.?qphmM13^,@k<:K0rind.hKnaeihOWFmIThm;,n7cVntr,-C[&4PB$7c+$I1t%0HVkniD'8BDE_*tVB'iWCNBG]5*0mih:/gN4/[F*8U0cdKa7&^IbTq#=IcWskPbL5^O)4fosPBTWmV>2.rG.7b1j+"\URt$55N?)%Xo.DEeb:Fip7kme9r?ltS4`LT#eX+qd`4.t3Q7i*9V:KaoOXSHH1S0/8bq/"WKT6dh0O'Zde3354F)3noP7WHP;q\gV,K$PG^!l)%Y]Z-)<*B+_`N,.@*U8Lnm*;+9:4oY:FS%%p^["6L8j"BLq*,Bn=8=?3P.;HHGG[+;]j8'HR0>?NAX;/?L@EWC3u;PE.T'j;iGP+r%[)T)7]f!7"[+^?'_6VK)#GRE!WkTks1q#6<nX1f-QI1=Bj6O/;P,Q3&f;\$:n?'9t:(upk_unGe5>'+j=M<?;Y;B)f<sMC]7<-lE%@r>F*j^>&K0tOb'G&(pI8>!?5bhnR&%U0dc#KsR\)HuAScdiqNU-2WTD>dX*qo:BTXc;/lE3Jrc3'>BO!sf)tD)K=VKP?u1enDI!%@noqL@$gd.O.sab`S9BW4_/p#H3[WjI(?XlGq%')2Y)$Z1Uud0i"i6IQuH+I1Y:dqd!%cWGZD1&0>h_oZ88OZ:#f]4!5Z-7NOLOI%dRS7-^U!,c]n7YpICLoY7qBl/p8NR:="auD@l7(kOd[n.hg\NA2r:Wq]3TI<I5)><1Oqsj/&+5X.VGBN"J%c\0>oZ^r:QWLO479!%?/mARs&a>P9iZ9bRk!PF5O.!'7N,fY0$aNW24Rn]7^8h:3Wi7GUf9sNV@-I@LJA>Pg0]TY!c4>.=FLcP72&$ie2(:c:g&<cEr_!g%-P'6TY>huISH[Y(#I'nZ=[Ns4gDMKc'lBKF=KrJ1jT*kDfed:A2R@hNXl]^s!Og5RChY+qSA*P:!34nC\@u#JrQ.lF9L\cW.^G&C%-sp13gh9.P3n%rQ\P\:U3>L6H>#E$1PJhGUjeFp*.P'G:X!h=0mc*[LjX[Bt2?'=t-1rcY.*>WT;W6aR=*s*/1o(<llMB`RXKgOi%<E[pl^eCmch$rIHoc*:9-sP;AP\AhFFo?']mTS2IBs-b\o%d-ElM<Bp%5jH_Ie?_>3b"sVWU!V-Z=kHM7]boWYHU)#6mL4S1Z'^b%l;t([4D\<<qKO@0Ii1UZ^\XsZ,Piud?,-552,sWj>M$'-5kL<reFflGlIS)3ZD"F.IDf8C-ZPB/Z`C/'M2\-jlMAV]P5_J16Y<1f%eb-!;03$go2-=/!>!6VQAq(53rT_^,#-#X%HHuDdFo=]Y-!T5Fp%S`nX'(`E1/(ugRP'-tgFOr2eb,uHl;s2FfKMsphiid%a.37:%`9QXaeQ;DoS!RRKqUGaS@hn/*]SBq\qN\1-)gX8S<a*+f@<'"G;I.'6K.\>C8#klfWElC9%o\OmD;IX>kA&)LI\j0*ToRZ[;qJ4e%Q+CdlPJ4VWKB561U2@qIf?[TSI9$614uT9L=EV7H^fbA=`FkEI$k6(cYI\(h2sCdX$rpTJdBrGPFo<5bT#Xa\YJ.$oJG&\l[&"cP%[_K!&@&<XU9bhQq)831[0alU8l;sGM3(.&eiT8]7FoCUU*5:6NoX]LK?_pd$#.q:B\uspuH*>-:orG:]2bH6Ip82t\4hf=-iOPsq%Vt)BJYahWfWd_)<:2a"]YJ.#DR0S2.\pj<PrCV:=+mSpS=7p@=kGisU;f,N!EA-*<Fo>M?/Ouo.=#lKC2bspGo;(^KN?rnTZ*%HI%@Yf&@*-M5F'glu\2c<qr5#OFArVB8YL90]BIpu?tXrY*V?[Y%U+hMp]\pbq>95>q6A6ltHh7Q[W'"^%m?,-4gfdtFrlM;5S#PSR7%rKY:$n!.e0#J>#F/hrpkq?%]15EKBa3b,*PnD6lDgb-+D2P^lLoCQajc9!Lm-AIlkZQd9!+O"$%HXZ/AYXC5?D'rPZS@R=!\,L7X%Yh-X,Nn)7kjlO0`I;SHB?uC#]4H1\#=2""CKo=P9-\Kt$cPGu>Y-'F\h7J'=\G,X9XLIm#GN`o,>7\C6_o!M`dF-8iYEuDAn9Q25%++)<LY.EKU40u3dqWL-.Q@&X\rT:ea4oaKSmJ27E\%eQjp>4X*]'16Lq"<,u]^G377us"_^!@(iVS1<"5L!PA5$snp]R"gi>[C^[%4MJI2^&Dt.om?Y0DV3-M<+b=fMqtdOG4O>CqK.gBVWY\;T'T4cIK*pHpA*gmp.Q#<4eM]NH8W>-k/m/aig]>kfsR/j:Qe/1$95Y=%no8G*mEPP:;mNomBlD1YQTl!^VI07Kp57Au;GXL?0:i,gRSPQ-7PC;FOB>:6RQjoeHZsbCPZU<^)"*@Wq:XQH_FQc;Ks<8e3KE$7%n,AcbrT;qEpLri$p[Te\pPgq"9lfHe`Hs,Y</^;_k9Oq^rO[)qp$q#O@T.\6)tPPag==ojha2O!F[Gn.Hau8&EV2_kNPk-&XGsd:%jYN6p^"]0L>Q/ZD1Q=u7:[ju<=B'?cEd;6Y'9[2AX)3=(;OTUhcUu_*en.[[+(R30&'lkS<tCq;HhV5oF(tJ_HZ&$:A$A2D5&MIe%Is;;NqB0Ajju,gK0Xs>C/[OuX(4X!6?WWI'Nd#*[:NKXSmhC19=B&pGJ[9f6^L"caQdi2Xh(J]\2>2L3Za.+6G(0boo.doXp@nF'%cS$f_\$?doR>r>7hra'%ocI3NllZ/-:TJ^4+!)ud5J[!D>GFD*O0*8C`LdWY5!@9]oK<!Uq>!O]o/P0Dq;k*W(+nq7QQL&tGGac"%8>?Br\&(5Eb+faoh?LG+hTjHMiRbaCgKjljEh06XFuL3,OX9cM4bmAd05F^2_l6:Zostjl'/*3#)ZX2i.'n?sk8XE3ccq4=hjen9%roS-CkK,.E<Xp2"9Ysjhr&a2=#;<[\Q#JkoZTBP,k5X-0O_fX[Z[S?;AV)4&3[QfJ>-A+1':O?W;V#ZX;9BXoW7a>[2Oj'h>MXP6%2fn0R`fKcVmtYg&T"h%C's)mepr&[bJ%Yff1]?6,Dt4MXm7h72mB`>IY<C&e?XT">cN&=B7:IiW6I.doo]=ZYAbl^hs*B6G>(7X^%i1`F9%JK;Rmc3:Jk\b_9%a;3o!3:_[!*K-icem'bMOt%QE3i14p,eI2oCq.,#_6C_>fDWq%d&R+?t^)6LgTceIf3KC^T;hYK;")+%?j,gcF5G(4*3S"jlg:h4=f.KJ`\a=cH\)PG47bRus31J9?f@W0$R-]1S.?qWBf9qt09Q3)Ud@dis16B#p!9Jb71u2bqJAAEF,n%h%4b(UZ@fF2.m(lb$=DM^:]FYF_L=YcEMH+p-1\_etqq;6KiuCbLhL-sZ*j9hYf;H-b56Y%5ICliUq:EN&"aPXBpC*rP"YRoEVW+Aa%\VtY0mk5#OMJHA=8<&P[\^*dDf,BNDTt[`dZ1>*HPXt?6:2\$$G&&7;3dSO9debqN^'Tj-/kQ;+R^d_E[:nLga/,rn^lPn:UP1;j%_n<S#o$)O,2$I75GtKIn1[frD6ET5fo'VDfe%j0+#&^pO<E"-_AnP_rC3)oZcF,+J$i8cP!3bhn?<l2e`1OUF>;6sgf[B(MaJ>/,%a1qW7Si>8L0=6WT1[6%ids!0(Mo*A6`nK2[nIZT`H3A`e]8lGS`G0BXd6(aj!87aGIbq_`mB(1H9m3CVNFPckqX7)(_@u&8'V]Lr%Mrj&YFU:T[[=l*7i.G64=;S+"!I_Hd^Zkj%qG+f)P$1Gl$RMi&2Z]?/k48\dn\ADr!5uGs(+:n3(a\Fnl:7LJ]m/\A]K!IP=7pk/%=kEAY1[Xi36"hWTId[2j_hs:qE)St5KkZ(B'INsCQ?3c^AJ9:5?C</6CM&aUP.1N2pnZn[[u!.Xi4JI_lpJU<Tpr\a)$]n"qFCp&%W?Pr('0dsY"8^sFrl<oMk7#<:N4=46_6Clo:JBrNL:V]VgO=Hmf<LIiFtY0m>AQ1<h90$b;eP)g43nCs*H09X_+2CG#9RNTj=M\Z%H-Vsf?_9EpSm4@lSkck(fmW0K^3ahXr;-*7q=TNlf^>p^q<PkZF(<M3f0:mK*Lo*K*W3EfIf8B8I;nV_I6$QiH?79#QhOEWo']r#%3aMQ-njdIkBN/6o?c5)d)9A>a4!>Vsk-(..Gfo%`1k3K7!?K0;B`<lLKCSl"61\1%)1AQ?0kgQD3RaD![lhZ?cAZQc[5)C!^6iEW%r"X:-iqfH:,Kq%\S#n&tF>R$H(ER1p8l9*Thn;hpZN"];0=Xe3PJ;!X=+9#[SUl&0NWB=NMH.'L\BFX9O\ZgCNTTKZFQhojr,m/0%#O?)`Q^h2[nA\[n<uq,[0oWb<&IAB2:Ykd!X&'j(\`8fRdi@JokW_2#,@/Ato$0I8)F*=pmk8NOIl3U"qfpJ<C]A*M\5AR+hcnc]%EqdGG[:kL+?TdmmrD1<(_HQkb_3dhSn;e*6%<:ofCRm<,rGF`[7J)'[YAR*2/mhl_r;Q;8@]=FHZh!Ujn*cfs]@ah[3I,]:^Xnqk%a#@WYkLUBJ'.XT#D`iK=`LA6q(Z.t7QCQCa-'tkC?@8B8]t_2WH2Ae6(OG!"Yp1,!CL>@/S\G'slh]dW0-<A_3qj0Rh"T]<RoA3^%^jOeif_NT(=NP7X/X/?$U9E0-s2cA]g6m80n&siXhSECCr13fbjq!oq4(ur8j6^k/-C9>Of9:8;="kBm%X=UW0:V:V7Urm`Fh<r5%Dqo0Ch`f_kIW$2iHF9A-htVB\_92H,-P'7\^>8$IDs('6G.6<k#X@-jh`HVlq!J($LHEW==(pda+*UT+q2<!c]FF5cP@g(mk@Q"]%fu4;-ifoe)%S0E^2MsA/Brcpjb<u<jcdAk!8ta0Q\KGLL;&eCs@WQmErr\)BGb_<HgKl%uSJQu-3Hb&9Ol>PMq1nnEMtt8br'PDm%f_f/\ro$e%6@YZ34C+)!qRuFT]Mho9$bQHB[Pqibg%-NcL[WVLo7nrI"nlPi$kGId6p&THBL=oVH+E@uItbYOP\kpK^5/#%afF#X%^7DDVTtU*bJr^M(QgabFa9i5o=Q%6o+/=_`;Dih!EfZ[.bNS@hdI)Y=W@:p5r,RHSP;e(I_>O6:G7;O,>!MD'?[0)-r(h8&l/Tn;%ntI:KU"Y5OYmRI%lbWMEp>,Q\bM)8HOqoX`m+o"K1;;VYIIcUkIJ3Wul^QWn\))Vh77mBr\,7cLNIt$#p'JEh?n?KbS+fk!/FSm]%JALBk%5`RlX_@Cn*OPe<&;uR]oCXI$NXh@-n>D@tEnr4aOP1Rbfpbu%^p7<1HuUmMoks`]PP+b#b?YYZaUW.T>@.%us0=S(A]29D%G![%hhq\ZS-S,HGNdWRVSWMJ&?ePn4\K6Ku4"#B/ZbX:?RD'F+>\l1)[m%cBhC<OcZ,:?[3kUKZVZhk-jQ-!hQ"a^:cf#Tj4R,Bt%&'qUimUF#D1e8K2ceS(Il^8.Cnq5<ZbU$2Oe*FJ%FVDeOIBL9V("%QH^&Q/4kG7DX[#[i;]n8?!P?*.8m;3GjU>L*QGZnTqs(LcW%EolJBF&;DqhYg-j-[B)?hNn_.;E%.;$\Fn=g?g/U:?38/dmNj/?oO'TkZ!;2EI"*)GF:G;<J3r@DPs]#T9ikI](=Sk?4+7l[E;eK%/,NW+mt.m)mZnXVWW)3qff?T*U3#n^on^mb:37It,%S^7eZX8Z0lCIN?Z^1?rM#eF/lt"%cg79X(4GC?f/2ID=raXTX)gq`!)RLa%-8rHYD+P$r<nbLKl:Pb(nrd;:IF-Ba.H[oZ)CZWSMlg0Y.q+p<e=b06L%a"u*'2VhN5'c;Z*-@aBP6.M$L.1Q49q@n]^F4_^3*-t%;g?g^=WOeu@N;Hkpl?6QNO;-Sj>mGBn#GGV=m2'V^Sm=MUX-]SP1.'+n,?m`>TFU[AX-M,B_1stntJ&AG>rUOQT*=L;os$/M2c;>%YBXEBTsIbtij3^Fo.NiSGY6353UmJXgW&QW@uhN6n%[WR_M?)X?]N423i?dKgh+Y!C)sQ0_<1<D79XA:2(]L1ct^H0Z@+U17o/;J%?ns:Ine@JdZ,]9`?E.6GS^9^+>MRQ:"g9M;[,A1MPNCJEYQ"/SBs58M>!K]C^5XlcA>iOf?hi4"b07`0I<9BnX8C3Z8R\ilnGfV5%mW>>RpN*]ar_<6;3n)Q.]KWm?q2Gp'8*_P[J"HDKr:f9Xj%o/o4np]0S)tB5OA,jt%)9`:p:b_4kh-8lI\M&CR6Ff"G^7!uoD&1F%`VGkDs%]X>[/[5:pNUagFb65KJnOOGbX$0[,Bt.+1loqZ,O")`a.%;Zs4dQLk6CptE.bq*L4<OFs1E4Z^$)<or"F_s^H.tO)a+.-%puMh[n1R',R><2]9meqm-GEneY<"t@FZhr_-_`0VL4LFAS-^_Q]1E\^'0X.*DA;nD3Mt^$Q*f0/r6ng$lg/cbM7NG=rHHn8Iq#bE%.GFacKMgS8@X,fV7VS#N&&Ka\7R<PIX9Vk]ojdie_SR_cAmpu=ieP'4d_$Nrl,7S^JV))RW@<I2h)Gnm$#2S^1.&jrM[7FV33^IY%FXr-cjAT2?bn?XQnu5PM)#-6g]m+"]Dg80F&.]$X`dTk?!MsKhcSHP"5cQhpilI`W,g6.>O=Z1h(J1nX`f<VANh`uN'TDOrmR'hm%F5psM#)%Y4_QT@k&TUSD:]*mKeKYK73#$:#8F]5-N^/d)V?blhOc9R/7kqE9FYc5m<S.2.B^3Vm,=.p^1`(/q$&%J!p@DBM'mF.@%cNm*jha(WWdYR'_?m.X%IF&hT&PSWhN"gTR;,QJnp`f-k@S)7ngR2&4:Eir--P?`1B!Io^6Q0KDf8J[R&2-b+M]<D:LRsjSV\5XH%2j@rP7"Cmu#pW$/'<;-L6jiL*`TnS+%Bu4G&F1A;P.O6jUkbp]3Z0K._d(U2?s,t4![P`f!/*C!?&6.HOW7Jjk6a0K(M_Im11"2d%[Y]O,A<I-*0QCO3,kdYYlc(AE2f(KJZ9TUkhEV-pi>R\bin!*]6^^n'O6=@cHL1n*+-<9>rF^Rgjn8<.ch$T=F6i-&O'usOrSut^%V%CjZR)>HPC<0kW?\1U$%"S]u0==nX@'h2b]SONJ;@np8M:L$@W>6]T#D#<o3['U79-]Af#QkQ[h?5`38^QFr"St.bFb/:V9Qh/,%*_0WNo)_.b=;V+Ir6Qf:#dW)O[+M`&n:p+G?Nh2J-oc)0\8qf3K]n%TN[:Y>L271UhhSnk^'R?gkI_0+Tc^fNp#3D*0\+cR(CS*9%hc-_I;&?/-)#,ORd]SoA]OZF4Fq.o3,jo8Aa;?UFKY7O?a\eQ0('jU<6uZ9OP(Y6",a'K/oi>O)T#U1soU,gU.<m87Vc)CcMpHR(%!E_/b0#&Yc:lh9bMgY%5DLR^Ol7("9+aL$#T5cM?Sc\2&KYiG)SAe^&5Qh%_VpZ\Yq+[<_"?$s_Hs5m@$;suU8J5//)Gbbscf1o(%<02o#kP650"lf->NpdhoAf#VQS7mPKSB,-P@I(jKAj_,5-$eKf3sfe58KaXW%4kL@@2RG]OksZ_3)i:S#^?[nUZWbK&.@J!i;$MB%LnCY:#WX4I,Futb4i1SG%-<tI&ZKcrG7j2W7L?Pa=XKl#LD9C`hm[ZH-F!OVQt8,'=WB,*JOg0)n6$e?KF+jU?h4se;90\a8hFbW%!g%Xmm#W:f57]X=dk"nO/dd5AJg])IH6'"V@d4\[>Qk#tOD2s<Ah9TJpo"mbd4%iF.%p]WJ08e3V*34]Ka(5!-F!R'_*ads.37T&%ipRj!&H$7(>6K;-+si3/;^d]lEY/)ON!,lha6tGcHAe7h:LH./>S#>1QEX+W9?-Zk,M3e*1^rJEH8J#1'HqXIl?aHrF>3QrrJFcn%8>-;79q7+&QQgMIOjLlQU;);n1RS#2:L]t%7As"Lf!WY/M/C`Tr/>k#\2*aZfnMcqSIMHBF=K!!Dedr8X>kU]ARPDXK1)hGcjZ$b%YRMn`;ThT3kReT*1uMXDj:``M3'pN`jmQoRe(=ef`Na;N6a4M=):btF([T`k30p*lgPLVL.'Z&cT`E?!0E\$0V[7:_)+Z,CfG;8O%GR:LM$oTUU&RobHOkpNa/O70N&,Q\1<ueJC';6K4+CV?tC,"C@R$`[n.A9jZV`\Q&%p?".6JQ,u6G)Q'a2*?Y$<0q."0ie?LrNln%7]6=@*[ntkW5<i^"((P-h@;)kp'S)R+CV@2egOoOj3:%:gt*sr15i-GL41K,"J%[E=Tj?IkduZ-VC`"0CRX4FG-EAlUJ/%_(Zlmi%:arS]2f_8O(b6mk89k^:88cP*Un/CDAV+/#-#"]ud_(<?b.UImMKg'dMlU_o"F92-+])b'cN^Tg'!P/&YG$*2dfN9P@u.LFKrl-a%T)a&r;!^E&`4dUB+5GY%YL:eN[mFp]A?a3jml(MC@5!JeHNoC)"<mnJ&kdWq7S_jaI-N(m]=q)4OeAC@ne(6L1aV6F6+<'3=+Ci)%=:u<g#pUnCX@,><8m%*W/EG'6W.:=m&['K7.*n^Y`GUh?A0+#m,#o!aor&.TW&RlPBMPiTYTutg3TX\p:Sha,n7"gR8Ksr^o6U]5%'9\(_if06BpZ*ZQ>p*d67_#GMVgcdde?:9jiR\@SCZ-S39K]WC1ELBEKh<:TdYPFX$"Jn_/C?/j;kVfUg'<_L^RP$1R%Ja'<p"&m%IF!tB#6WK?BkEP_<E#(E4Zs>(<0<"@#@O34nSkf[AWBEI1iX,FQNg*.p(6c@7M>!p*jJ\e")^Ff"h^)\]Qo5o_m&RGbZAtriB`P?%8l1Z67BXj5D'#T-O=!i!=dLjFG%$oAARI2's"V2YFp0I>g4?L:[(R(2PB3s(*)qidAWSZT`0X&`<u9Iqn6%2R,+.+9[eoV55ma$d%g(+j1'jC'9KOjL7L00i5![8F$g>&?9pt@huD%DVZg_6_I_PQJ]:/Rg/7.C\2?*P!s-nM$W._hc&XZHj17j!J!(g&t$%B6N]jLE*N%N$$0>5b>3R!R`SFk9Km9"hY7QO@s?dN$2,Q+cfu<`(iuP]ihU5<1+ni1DNq#n'Ak=lE`!1]EsKN:nF0oV76Z,$QC+E=VD:9'qqhl%JTa#G"!^AbXM4c903&cJq\pfTr='BLItNA%ItPZR#C4I22,%WYAGcm*hAj!l%O]S`'$:#a'8$05F?#Yk=E0/Fi=Jl@^X;!?9=,bB%GTUW=KotJFr-t:E`Re7g2H\0"n5H('U7Y$+//6<H&^1+ce*J_Bk'u-qk%rcSbQ$(nQcc3mD,b<M`uiaV@=J^mmM?Ej5ERBe":HHf%=a@BuO5!,>]-dn&qI\jR![;WKB9r?>TUF\FK)'DqM#u;`L.=UV)@Gn&`:^Q17!$,]R/7mlEPKF+&#'$M(Z%().Du*QmMn1[a2f`=%C2&;J9*+q1,]3$9.++VHU(&.LV95RR[#p0ANPq2B%\dV]0r>D/0CpbE7&Q".(e:6.#ZIco&6R,-UiE3,LM8bX]ihMnQo-GVFMr?3%p'"AVGXdMqMemIQOJlY@]5D,_C]$Ha=THC><l.+KOU)BKB7%m2RV,E%N#3La.#Gk\5pV["EnD#9mX9<,!(Ia*GVSRi@_].^d`8m9%FYX]0F=_2==Lt(Gd,8uQU0'GV?k9-!$iuM;m*%4\JO/`PliP;Ucm6c/%7*<+@hm6r6Ae<m`<aa6\sC=F@.L'<FX[ACS@_uR5U"dH%njU4t$qUSpV+BK9)>@#;Hl,](IL5SB_,Bpq7*rD>cU(7iF:mfOYInjuJ:Kn/>j]DS\m?GU%V^<e98b`-=SGGK7W\VY&Tq,i+PBJV%r$Y6r(u(l*6R;4(p<W6UN^Q->VM/nBi3JlD(D7*P0,:UiE!"DlKcE`8S"Kl%pjgT$);sf@[R9\hg>D/lgeR.h?Cjb7#gl,LXm4=-%bqQ]m!b`:d^>lg6,41*9<_@m7UiN^/@?WubgIP`PUg=oii<FT\(AMP^#&#ub__N-KW"4"RV*[B:FXREF/T>$T[%Ppt+;*nUECXE:%X$)$mJ\)0Q&Wm2`1WV2c'4XZQ#-]C]_]Vao1Ve@2p)KhHhBJ+8"qu(jR%d6RX^O"J4RA45`jRXq9+\UTJWK]=0Ak!AT`nj-@L-Ht%e^m`NfpPT\mh4DPj;I#(3_/^-4q8]R4s![n8M"C.!"h9)a.4[cdGXX!Nn$E`DbP[1T0MhGLHZq)Ga_FpOiu.ml[pXYVQiSZ4Ub[(%$W$SlQ`G7hSf]WSAmVPK:N?6i4bJl8MelsP;8pV<.Uq.%K^=0:"-$\!TV"e&++g2^WZcP/iIH!4Orta>LghQi/1DJ43N0l@E+DNF%ar2<g$H2,pAtt%Ck$Z'HUWo$UIKFU,nT:u^L]SM94O=i)e'mo(a(.=LJ9cDccSI\*7k02iTV3_qS=iFd/\K:s^I3':%n5468c_0Y%d!D19@!;)h+Pk1*$2<"/N%?%3ip-lGbR:;/\2&$6fl7!)TsmkfO@#?/^^tUZ!Z@7R3TcOBM8TjDjur:$i-WI*(9mmk8<Tgl?^DBa%)C1t!nS8L&]6FC*.Nn@udO>p>SZ<%!4Na'Th!$ua&2jm+U]5p<M/d;j6k[&o:IQ)j),DZ+s"oJKnicWRPGcW+',mX0&s:Bo':P\d%"=tk@M$SA\&4+:Z6#p3il93!^oZ_Z4RT+o.5.ZqPlY4/`C\rWQUfT$i1e#05QV?&J+G,d#%Tt$sbkansbGS1A,Pg_Bfqa`5W#YTC%RN@/+n)p+-+,-DdQ#m8e\fk`/fqk47UE9#l1P%i!4Q&b6RA:'2P-UB^7\pZ&R4;$&4QUi6J:&)="r'^\m0S>-`eoY4TnaHWZQ<O8%`l'$T7]UB2!,>19n7(?oRV0k.5]WV$.hG.cN=m-HYnb&5&i<=HUmq-O(Bp?OO2)4UF"o_2Ej/Zb=njF-k7_EcU$e=&T.Aui[+LJ#%bfs&eg>fmk%lu*M8L$YDnkL6)=48FU/Oi:nLG$F_Mu+QBpuGAal6`,2$37eThGOnS]^u>YEGe<]"Ah)1`J>NYB+Z?10cYF1ZbV9S%>9ac2<hSAW6RK^a8BZMna6Z`EQc'S[$"\\`<Qtg8cO>B?%l18E1R,3TNO,Kk=Fo?riZSj9&\/tu_S%;YYtopG91K!3&o0!%;4h?8%=^gff1f`hHJPoAP&0]Z<B!?_B1s6\\"1N:AOY_i*0GVau@BV/7$mf@V$=JI+5c8nIn1QU3.,$)fN_!WP?0@([9W-#eHIo=)R#ME_%,m5X=@Y'Z]SLCY6BJ%`W'.051%:`[L@6R0eoNWrc#[0W*1ALnV1,R&QM%\Mh'V]FMg0PK52?`KUp.b24TnPf<I=C<&e-Bka@6(F2%>dn:K*''5phA&.:e>GLWkokb(7Bmb@*7,"hVfYJ&9pdn&CM52C(0E3`')<4GrLsl)4eO2BJYX:Mb;P!i'&\j"-`/bg&K9#B/D"S8%]NV09/l$fOIcX74)7pduU%<;68.>A,/LlEJW]1MFq%S.@;=hU8,s("m*0?AbaC,c/jOb+:1:b:F(]$F8"eY"0&;@(DV4i:ZN!4<L%5KtIJBXgo+"g]DiOMb6riW.!<@OSN(aCG@jpp<n.LnGN<neM,qicgR-`uTe?S>[7'<da$sG`!^26=ATqQO6lOnRh&Z=os>)QA)Tn%1;G*Xnr/FjTf+2.$l@5FAN(Nd:7unG99_m`jQZjdW5G&=oIA,Gg`ej!NjI/9:LY36ZT&f#i=sH8#cZe$2g"g#m73c-&jigN:W;kY%V``]&"ET-N'^*])U%4s&(<1pE#ba[;&b=#RY>Le76PSZM#\lR66JkVjZc;Pq;hd8!-oeN&RgSta(sfWeV`)4V6tJgFn7_?bE1oX3%5kqEH9+=69+^7;*S+r\)$7u<J..YA\5YVX$VD,u^V_4j6(c?q6jOWrV&0kBF6mmB7LeGcBNl$*!cB+P^)FJ79X?S:6(;:!0XTM""%YmMkd(`o[9IZ:In5XpldLIKi#O)bghE_QF(a9ugV_F&UN#bu5b`Y3olQ;JW:h\`KRaB2dsG"&a(KBhi)Nu0'+4J%uA'h!q28+)\?%L;hZtoN[=h3/W>!4^ZJD=JZ_4D<E5SFbI.:?El7^m@1@A['2>>&0ntIVDlVgMts$ge!o]56p?XYWFbq!&K[^>L7-#*N1m/X>kM^'%>cbAVJU#>q2Ag?%kTK%V"cocX[DHT8i^@\$B$TIX!\6<g$VsVnL00cD_#tO&NM/a/Tq/b3Y=%-SjbG&3O?46(jtjDjO:BLO&93p_%OcLOd!(beNHN51[-[,_X(=2R,H-5/!O!^0%9e6@3>0>5\(/kh+4\B;l4<[cC@c9\9U)#ft&OFa+"B'A7AMBXm;!ent,L3NQ>B\@V%&<(.G.N$9:+>?.m%@%e-S,eE*R#rXpM&>N6#EVnRJUk='RL%Wp.>OrJ`_jb`,:#t"!YT&[i20o%;YM?'G%6[s8?>.R/1-+-l7fc'%*%["hZ-Ep&3DNJU+,T4S@k_G"4>5p/=JTGD\96%/[LX:=I2.]N0u[N1(@de!"c26nK7M'%`6]?9?k=(/UW'jkDLCfNTBGc6fFrOo%MKDo'&k%ilYjq?d7`gOc/sc?r,,+_fYd!IuT!W2$\2[BtSCSY\;[_Fh?bhWGa6`m/(1JPBY=,be[29)YqmnA5jfDBY4rFYe,@[BP%Ki(qa6huhthW0I]5XDA(]Iu\k+0nho?HE&6C#]YE`fQ?#1DMg1kbp4mpk^3%_<cUt1#C6\odJ'2Tek!"&_gHQWaHH*;2f@OjgIYs%QumFe-n5g';2_EVp*>rf.g&`M;PcK*;C*eJ8(&'3D^'t0YmR#PmDKu^9&"a;,1]#2.KWOJM:EKC*?;"&F:9hE&okjp6PeU%YOJ8.%"B)psLnT^G`$R,l,t9(BYS*Z7\e'4F/"<65EDVbAES&SAm$MYM!\lIQ:r\so8E<0qIb(lG,19RBaI&fV800+_7<mge=D];J.<C.I%^%,-'DlCTVQLLjmk5J8EX4a2@>\E6bL162S#3=rD$M^Ul'F6U.->/Q&@fWpFO#n,_qRM-8S5=R5O<q%D@bClWMp6&'9>tk)`/?"=%03)K8QYJ8B98tq>b^)ij4JNB1MdZ963'EJ>e/2-$4Z:mEQ\s`H'F#_.U9VjZZgJ8247TVLJ?\(WGn3FY\kd%JT7*[?cjg0Z.:9)@%ZnI]]@'jK@^/XH.(:h.Y(gN4SO":**j-1c`XQF*9AG*8gi`nnA'H1(9g;"N>>$n:\X=r*hg6[\j.=1*\)B5HgmCU)3kT^6sMl/8^%,*flAMce<#`JcHM6L7>K,Rm-*9C64V@lm"Ip^g*n;D"boW>G]T/jSMG2.Nr+<+O9NCXbNQ>:KR%^/U#H&ID/.9kC6F0\;YKb<p/@%B,jG17:JdI?uro(^oUY.B8T,7X'-]N.U*<^;8cU*(<]_/4h_ITEjnXB5!5+B'dbD`8M$J8WPJs>cT8X:.9Y6i<u/+=Q,Ip^6LQJe%n(Ig=>)T`a<<B1EQFkm27\E\-T7'Z"T*`pO`/mGu@`+?GmjZmMOiH`LV@R.R_S50(CR*n8./VW1WCLf0(PpqQ/8aa6KujgH!J0bD%@=eL@OddYQBbR0V3sudWR^SO4;daeSTlc>u7'XgQ7ppKVOdMkXXOS+Sq#WA$/jeUMXrh5@dWbk:(6ifN1`sLPJOTis4>&\W]PGY_%[SNa$;HgEV,1\<QR'ePCQmBhFVp&'2,DE,*</Fk:^(<c%V%V-eWPO6j.P]fP:#hN]F:TWEl(1LB170pl-,sP2JjS/6Kis:N]/W>%%ZP7i\BdRZ<*b4862teOE%srk75VTW9g8-28.<\*C`@9'O/sV7$9.abrLh+ZGW/+;WNMRKi&;<t*<ff`A$8S!Q9-qT$WG12@V5=d?%/iA'BS7=6gQWd);V'oW/hE^3Lnk^#-K9Q2T8tI_1Z"I2j/R%LhU(2*8?O`_=;i=er<+9[2,,,T`H.DU?:gUT'La9MMpQ<J\_A9KW%;Wpr[r1=tO?kHKB(i=HO&Qm0^Y!%X+UFam*O]J=i6DgTI>p8J^=GjA"8,]U)Fke^-lHuS"9Wp6&8(>V;j#:-H#%H\F(sSJeoO/T6%MR$up1^`!1d5k[R\Q6N@R@%FcWKell"X"#E+Z5^[J3Y;+)7Pg9gK1H'p?Pc4`\-NYGkI:=#2Z&(+]fFVTA(b;JC.u78B#*7Cr)Z>%5)-Y'8n"5oU/F#e(@#.(OsQVF/J+PX7Bqph&m<0)j:j<<&H,3B,-uVgKI$82a'uPP;nbXc@XM.s9cK4'^+Mg.l(nq/(:-Vp`)m>?%X,<]5c7(0Y(dFn1MBFG%m$Q&=7rRBU:]#Q7is*mlOMsUh4nuAHm#.5:X5"E%/Rlq:X?>Znl6-bQ0,dONM\8s0Tc1DhV)og.7FP*o%b6DG\E?H88L']o?M@rR'%/%M?3f`&s#g^0k7l4"1apkDWV22H@'ba'G\gWjN.B5".[gf/^Od?OiF9FRZ[MgFRX0`1k_32mM#OL'J%CS\2E85/1pSRT"K@gk+D\K$lKMt@E%\BcAC*kAJUF3R"]VgWoXpMu<.2[&I.?;Y^g4dFuB'Ldjleh`]WAX9VC;8<f"bVY'1\gPa8%j4Q^R%P+dq`jI;a&/^2`g;[QA;TeVj>u8VI,dG44KW49(oUCB0CZY\@'n\oQ&)<Jf\>uM[`"@4%EBWHu=m!7"1HI$+*p.^[-]PJq%#%bT?*F`,bY-,$mB8769/0Zde,d@gc16W`$F%VUZ>_5%aiTq,[+I/63,+Q;^fgHs;9f+2u1l8IQLoi%]4?GBJ&4.Yo*`+"JEqGPB%dRqD3dcP.G(PpWs%49@1!@-Q3cOOqMU0'HKb`iEn-AS_V4^eK3k6l_1fqCg`fqEu8fqH@Jm*N+Vq4Ykda@_Sm'1]/H!\k1/[dt>]%^5cu-(a=']MO?s>;=c1i'?5Wk$H#_L/<L1L6Q-:0&eW/8`,TG4(cJB4?H9%^9'IVM!]Gd%5WXS;5WXKCf:H.dRt@9Yg"\@q/2WSf%`Pne^(4hkZ(4iFj(.=ljHW<U"KD$bO8Hc9YaA@=8/9F.)*=B[r/32Es3i5?"U?(%61SH4Q,Zt/(U:Bu%+n-f(`).LCYXh/PYXhGV%YSbIVeZj,*&]3o.VO&KY"ik9$oU4HT<m/aF0SHaT#2(g%j%MXiZ$3dO89kT1#Sqt/hhHb4*lc)Y:WTU9'r('r1!q>"750a]@**JT%d:je,E9*V:6-(%^@M(_u82PTKU]X^MV?9q@IAWZ);m6XWOCR9O&>EBj`'_8IrD`]P(laAZkoZU"p`hFn&l-T/9ZK!u\WNk^f$Z?a%I7V^i+@^5cbW%9[VAttZnE".`VF=gk#&f/7(b2$W.NV2]VM=eO7UF<4;oX6"&[O,_Lss1'*P,\b([GHT_^qHDWZu1C's7,](F'rC%AuHmb6^>^sPcA$:_._`#enMVEH^j8Oh%ZidETl%S1`jC*f";ihO>>@p"k8iOa^Y16876I5R.X7=O@=_*[-B,HB5)#$I'lbL)gd8%%1l1[+$;@O<JLQK=.f\'t]u\1"-W6sI/iFg0D*MDeMVXtR4??E2c,\VRYGd1_N%!m)0stCV^/P@M:ODmtC0;`1o0m%!a7/b,N:TMU%lOhHoYFWuHi0O.A)u0nd;ZNd=(LC!l1S5"rS@:Nh'4`j'A;K?0$J&3Q767G?8M#G2S3MSn$&fQZ!*%T<XR:5Ne;l$>D&[!ubrb(/%KutQ)G>p8]PS8l4;(U*m+>-8pMh&Ht_S@IAY#6PH;->]D'lglhi'_<)QK_l\oi/k21"$u7S]$Tb$8/UV+iZ-VZTo)DPae'3dLDqG%cII7[,:g%^@Z_Jt(B[0%TKZmqZfe2Z/=(]4cB85AV7HJ0UeX%;Q=+E7QDgLA<GuiV@P?!e;kR_Lb%0J;(5n!:&K""J@d6eNWK7_'%p_])$moUfs&Fal3o:9"iq%splKOQ,Nar[@;m$&*rfA.X&2[uXe1;UD/-ZZ@sA?[2-m6s-k@KZh(mmrR7M;^iK915/9Y)eK@Z@p"e%Z@mj-Z32@$cq'uq+MtV7fjkE-4;>^l=!GN*O?hr-7$Lo>n5GQ%i?0UO6=<jd98pBHO@4h2;A\P#S^c^m;!7M/TNhdK%;bT5)-$5B%lS%a%F9k)4!8kGj]tsh*M%TkGM%Tkg&HUC+PW7.Y:8lPC0jBR<*0V]m0]a0AK\R*XX(^3C8J4!r^*DN!P::fk.mV=k:6H0M8Wo__%kpBMt,XKZ;,pN<(I,>9Mlsm''7s`186`!<Z`2#rr;o!((6*,6YYm`=9_j=d?;%RJDOn-^(,[j+BHY5$RSff^Cj19BV'lcP:^pYr2%2b`=3RCZMJ[U]s0L)66Bf;Z\^mrdr>KLIq(m_Qna0rd$d)=E&ElJ#\Nd@NO&^k!leCJBjXb.uHG$3CeA17/tV:L`U"J_H-,%O^Y=%[KGZ&JNCoHe`J;:&9Y9$&G<_r&eZ&T_%:oG&rs(M_E91g0u?&?.-@?ocE8QP3N'mM,quCL98p9)bb,9=Q5Fr%lF'<5-sW6FX2jQ.%a)d,/Q6jtnP_doU%48H.M6Z3&X_5B;CtUuX[3!e)[%4>LH5r%8a6oG-V__#FFbseNhI+pd7>1AVKJ5D6E&'s-0^HeRR94<nb`mF-%V`5,[>Q52M^+Kdr?^HD-[;Xd-lqh42g5\PE,?E:2nH]DGAsoB-)()GrgN=G^b*QPgD1jnWUhSM[U2HjfFBGM$J;Hb"O?%E>0SMtc%a<M7;oS^0D_pIfi0krNX:e*,RZUZVX`f&M,DAe#?0,[<';Y#m'9GiA7-jftU9&.f[#Y6/#ZMeSN!b0Yf&VNCd"_h\0O=1AA8F-O(%+I;PgY2UnUDq.,Z%\eOd"==>?.Pnr\_Bb;Q0HfX%&$opP@MXsCC_22NZ,=AaY'IkW_4E(/^.OEBD6CGW64fNmehCB!)ho&!5]!M7%r_s:-I55tU&?)XO8[*Ut<Gh"<":%dY#Qce:#S+kc*O[$2d-JD'H!Do!e6D,,<*SPCW//soEbB]EpWN;p2j[m#St921^0c<aT9G*b%kN@(_kfIc<bJa.uPH4#-bEId`*uFrC"CBK::JYoBf^AZ%"+ar9~>%AI9_PrivateDataEnd