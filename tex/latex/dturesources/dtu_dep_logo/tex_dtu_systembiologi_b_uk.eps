%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: DTU Systembiologi B UK.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Peter Dalhoff
%%CreationDate: 9/16/08
%%BoundingBox: 0 0 180 26
%%HiResBoundingBox: 0 0 179.9673 25.3164
%%CropBox: 0 0 179.9673 25.3164
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">DTU Biosys B UK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-09-16T17:28:01+02:00</xap:CreateDate>
         <xap:ModifyDate>2008-09-16T17:28:01+02:00</xap:ModifyDate>
         <xap:MetadataDate>2008-09-16T17:28:01+02:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>36</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAJAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AF/8AOOtzcSfmEVkld1+p&#xA;TmjMSPtJ45hYR6nte3ogaf8Azg+nszXini35u+X9K8y/nD+X/l/WomudHvoNUN1aCSSIOYrcyoSY&#xA;mRvhdFPXFUD5b8laTZfmXr35W3Mt1f8Ak250qDWrawnuZg0E0c8cRCSxtHIAS1aA77VxVS/J38uv&#xA;KNx5184SzWksj+WtdEei1u7ukCwsXQEerSSjKP7zlXviqZ/krcTy/klrkkkjPIJtWo7MSRRTTc4V&#xA;Zh+R0jyflN5ZeRi7taAszGpPxt1JwK8i1zRvKdh+ZeuN+cNhfS2mq3zyeWPMJuLkWMNsxJigrA6e&#xA;myLQbg070G5VetWfnRNL/MDTfI4giXQrjRReaNqQlaRpDbkI0bMxIYCJS/KuKsG1P/nITzFF5L0/&#xA;zFa6PaRx6zrNxp2nXd1JKtpHawkKk1wwANWbn0NAFJxVMfzD8z/mta/k/qOts+lWN4nxPeaXcTyf&#xA;6K7wrFLayFSObMzg1NONCDXFUf5k/Mrzl5c0byvp09lps/m3zI0qwM1zImnxQ26LI8s0sqxPy4Ot&#xA;V23rSuwKqX2n5zebbjyr5puxp+mfp7ya6vqsSTyS2c9s8bOkltInI8jwOzbe47KoOH84vzZudQ8u&#xA;6fB5c0mO5832f13QhJdysqxxw+u7TlVHWP4gopTpUnFVW7/PvXrX8sLrzI+jQHXLDWX0G/hDubOG&#xA;ZByM7N9v091Xr1PXFXof5fax5v1bS5L3zCmlGOUq2nXWjTyXEE0ZryYlxtQgUofuxV45+aKeULn8&#xA;9pYPOOnX2saPDoEctvZ2IupHjuBc7S8bZ42ChC4JrSpHtiqv+XGqavL+Wnnp9FK3vly0u7uPT9O1&#xA;m4l9aPTkt2M0JMReWJyKcA3v88Kp9pnn/UdH8l/l/wCX/JmiwS615kszLZWdzNL9WtoIYxLK0khr&#xA;I32tt/4AhUg/MbzCfOP5V+crfzTolvaebPJk0UTPEfVjRriSPjLbu3xKJErVT7fQqyy5/MLzbFe6&#xA;B5K8maZa3+tHQ7fVL241CV4oIoOKxBaJ8TMzEd9qj3oqsP56Xr+QbbWYdFX/ABFNrS+WpdNknCW8&#xA;WoGvxPNTaICh+mle+Kq+k/mJ+ZUvnbUfKOpaVpMepWWkyatGlrPPN6v+64YwSq8T6zKGDUPHcV2x&#xA;VZF+dl3eeS/Jur6fYwy615q1JNMbT2dgsLLI8dw9ftUQoDv2YYq9ZxV2KuxV2KuxV2KuxV2Kvl3/&#xA;AJxy/wDJiH/mBn/4kmYWH6ntu3/8X/zg+oszXiXmX5l+T/PV7548rebPKUdhPc6DHeRvb6hJJGjG&#xA;6j9IH92CTRWbuN8VVvy88h+b7XzdqvnfzpdWcuv6lbR2NvaacH+r29sjBygaUcySyr/U12VR35de&#xA;StX8va/5zv79ojDr+qtfWIiYswiINPUqFo3xdN8VYXD+W/5u+XtK1zyj5Yn0eXyzrE1zJbX14063&#xA;drFeDjInFFZGKj7J3339gq9S8k+WYvK/lPSvL8cpnGm26QNMRTm4FXanYFiaDtirBPzG0H85PNFt&#xA;q3lu3tPL6+XdQJigvp3uWuEhLAhynEr6qjwGx6Yqwj88LPSvK/lLytZaRrtq/m3yrbnTYbNnrez2&#xA;97a/VXKQx83UkUZQ1FpXfoCq9FPk3zJpP5Y6H5W0TS9J1VLe1jh1ew1dpFikZlDSGP01kXl6zFvi&#xA;+jfFWPaR+Tfmq2/JbzD5MmurVNR1a4kudPtEklktLSNpIpFt1lkUyEfujvTqfmSqreafy38++ZdF&#xA;8q6lqFrosvmXyzJMjaTdBrnTLu3nRI39TmhIekQZfhNDvWoGKo+18geZbnyF5r0abQfL3l6/1m2a&#xA;3sk0VGiRzwcL9acRrWhb4SAaVOKrrD8tPMVv5j/LDUXe3Nv5Q0mWw1YB25GV7EWw9EcfiXn3NNsV&#xA;UvLvkPz35c8q+YrGztdH1O61nzBeai1nqLytbSafcoq8DxjP70tGPhYcaYqjvyW/L3XvJ1vrh1QW&#xA;tpFqt2Lmz0axllltrRQCGCNLQ1eo6dgPkFUJ5o8o/mRafmpJ518pw6beR3GkDSpINQlliKkTCUsB&#xA;Gprui9/HFVTyj+WfmbT/AC551fWbq0m8yecvrEs0doHSzheWF440UuOR+KQ8m4/f1xVLpvyu876f&#xA;pHkHUtBnsj5n8n2jWlxZ3TSfVLiOeIRyqJEXkCtDTb9W6qhN+Unna/8AI3nhNTuLJ/NnnOaGd4IG&#xA;dbOBbd19OMOylz8ANTTw+eKpjq35fefNI80aV5s8oPp1zqcOix6HqljqDSpE6xlXWWJ0FftoKg02&#xA;HvirA/zE8jXXlP8AKOx0vW7qOTUdc80RajrN/GG/R8MtzyDmYUV2gVEG21Tiqbfkvrfl7QfOGr6G&#xA;INCmjTTxqF15s0WaV7cRJIF9K6kuXlEZ35fC/Hp9CqV/lfoVrf8A533sGmX9vqvlPyzNf6vps1ox&#xA;kgjn1YJGIOYHBiiqSvEkfD1r0VfSOKuxV2KuxV2KuxV2KuxV8u/845f+TEP/ADAz/wDEkzCw/U9t&#xA;2/8A4v8A5wfUWZrxKQeY9f1Sw1TS9N020iurnUhcEGaUxKot1VjuFfqHxVvQfMtxeX15peqWg0/V&#xA;LJVleMSCWKSF+ksb0XauxBG2KplZa1o9/I8Vjf293LGKyJBKkjKK0qQpNMVWWvmDQLu5Fra6la3F&#xA;ya0ginjd9uvwqxO2KubX9CW9+otqNqt7yCfVTNGJeR6Lw5cq+1MVXz63o1vO0E9/bRTpQPE8qK6k&#xA;rzFVJqPh3+WKpLYeYvI+rXd1eB7P63psrobqc2/qcYgv7+N+TN6Xx0D7YVTRvM3ltQ5bVbNRGQJC&#xA;biIcSegPxbYFRE2q6XBZrezXkEVk9Cly8iLE3LpRyeJr88VW/pnR/qa3v163+puwRLn1U9IsTQAP&#xA;XiTX3xVZF5h0Ca3muYtTtJLe3p9YmSeNkj5Gg5sGotffFVDy75o0fzBZ/WdPmBI5epbsyetGA7IC&#xA;6Iz8Q3Gq+IxVFXmtaNZTpBeX9vbTybpFNKkbsCabKxBOKpD5t87JpF5ZadZSWb3905Ev1u4WKOCM&#xA;Jy5ykbryr8Pj2rhVMvM3mFdD0RtSaH6y9Y44oUYKrPKwVfjIoq79cCqdjqfmKN3l120s9P09Iy8l&#xA;yt0W4MCKBuSIoHXeuKptJe2cfo+pPGn1lglvydR6jEVCpU/ESN9sVQaeZfLkkjxR6rZvLGrNIi3E&#xA;RZVjBZyQG2CgEnwxVQ0TzdoOsm7WzukLWckiSKzx1KREAzKFZqxGuz4qiYdS0DVoZoIbq01CELS4&#xA;iSSOZQv+WoLCnzxVBWeoeRbWKWKyudLgilXnMkL26KydOTBSARv3xVXsbrypY6c13YzWFrprv8Vx&#xA;A0McBfpu6kJXFUbY6lp2oRNLYXUN3Ep4tJBIsihutCUJFcVY0vmrzLeapqtppOlW9xFpcwhdpbgx&#xA;O541+EcGXf3OFUXpPmx9Vj0W4toY4rfUjcLcxzSqJo2twRSJagyfGu9B032wKmy63ozXpsFv7Zr4&#xA;EqbQTRmWo6j068vwxVBaZ5hFzqGt29yI7e30mVI/XZqAq0Ycs5NAKVxVMLHVtL1BHewvILtIyBI0&#xA;EiShSelShNMVQ6eZvLj3K2yarZtcuwjSAXERcuTQKF5VqT2xVEDVdLNj+kBeQfUBUm79RPR2bif3&#xA;leP2tuvXFXzP/wA45f8AkxD/AMwM/wDxJMwsP1Pbdv8A+L/5wfUWZrxLEvNF1a2vnXytNdTJBCqa&#xA;jyllYIorFGBVmIGFWN+arxtXvfMt/or/AFi2tNGSyluYTyRnM5mkVGXZqRE1pihE+XLCO51rQr2H&#xA;UdEj+qxuIrbTgY7iaN4SCjq0jFuP2txtviqT2MmjN5B8vR2rW58wfXYPq6xFPrIf6y25p8dOHjti&#xA;rfnfWf0hpuulpNMszZXj2sVsYwb+UwyKBKshZSK9dl6VxVl+iafYz+fPNU89vFLPE1ksUrorMoe1&#xA;HIKSNq98UsZuDpUflrz1bJ6KXyX1yUiAUSiA+kBQfa4cgfbFCcR6Joy+d9HgWwtxC2kyMYvSTgWD&#xA;rRuNKV3O+KsZtQ6aN5KPK1jgWXVFD6grNaLJ6zemJACu9A3Cp64qjL3So4dKuGa80+9gvtYsHktN&#xA;P3t4mLcXBQs9PUFCQcVZPFpunQfmObaG1iitptFJlgRFWNil0oUlAOOw2xS1+VcmmnytFFAYvrsU&#xA;k63aJx9Vf9IkKeoB8X2TtXEqEmnfy4l551GvfVxfMx9EXXH1DB6A9H0uW/Xpw3rT2xQq2lkkl1+X&#xA;wvoFeaS2uBOJVBZgtnVQ9RvT3xVnGtQ6PLpc8WseiNNcBZzOwSMAkBasSvH4qUNeuBLCNLEY1m48&#xA;o2WqDWNBvrGYkM4nezr8AX1VrVTy+EHpt9JQhvK9y+uanodhdmh8t2VwNQXwnDG0QMf5gic8VVfK&#xA;xsNC1208uRNYaxp976/1O+gETXMVFZ2S4CcuQK7cv4bYql139SXyf50t7T0lv4tUuOcUYAlW1F1F&#xA;y+FaP6XEGvbFU00rT0m1i21CPUNFH1ezuIxa6SDG8sTx7B1LvUIaHptiqXaPpWltp/kItZwE3Esx&#xA;uCY0PqH02Px7fFuB1xVENoWmX1r5ispbuHS47XW/rFk03pi3Eywj4GjeisrAmo/pTFWUeQtbGpWV&#xA;5E9rb29zYzmC4ksuJtpmCgiSNl8R27YlLFLW20mbX/Nf1/Xp9HpdkBYbpbcMCm7FW3amKF3lZpD/&#xA;AIADRCJVbU1joOIdBE/GTj259ffriqWwvoZ/Lyyhi9H/ABWLxBGi8frguhd/EWH95X069dumKo3z&#xA;Bx5eaDKK2Y1fTze7Er6AVOXOn7PTFUXqg0m58xamugGJoDoFyt89j6fDkT+6BK/Bzp0709sVQHlW&#xA;az1248vQQx6Zp8mktHPJJE5F1PwSnBYmjjNGO7nk3iD4qqkyUvJfIf7M2tLcCMdP0e6/W2Uf6rLi&#xA;rNdD/wAAfXf9wX6K+vcD/vD9W9Xhty/uvi49K5VHgvanMzfmOH95x8PndfayDLHES7WP8O0i/TP1&#xA;Onxeh9c9L25cPU+itMVRGn/oz6mn6O9H6lvw+r8PS6704fD1xVA6f/hD69/uO/R/174v95/R9X/K&#xA;+x8XzxVjn5Xf4b/w3pfD6n+l+EnOnpfWf7xutPj+z+GEoZHd/wCEvrU/1z6h9aoPrPrej6nHanPl&#xA;vTp1wJTCH6j9auPQ9L61VPrfDj6lePwepTf7PSvbFUDP/hT61dev9Q+t8D9d5+j6np7V9Wvxcen2&#xA;sVRv+4/65H/dfXPTPpfZ9X0qjlx/a41pWm2KoaX/AA5+ix6v1P8ARXI05el9X5cjXr8FedfpxVTt&#xA;P8KfVf8ARPqH1T1k/uvR9P16jh9n4edaU74qjv8AQfrw/uvr/pGn2fW9HkK/5XDl9FcVQ+nfoH6x&#xA;c/o36r9Yr/pf1f0+fKp/vOG9a164qp6l/hn63F+k/qX1vb0PrPpepSu3Dn8XXwxVGTfUfrVv6/pf&#xA;Wqv9U58fUrx+P067/Z607Yq1qH6P+pyfpH0fqe3q/WOPpdRTlz+HrTriqVN9T/RF7/hH6j9e4/u/&#xA;q/pcPU7c+G3TxxVI/wAufU+v+Yf0r6f+IPXj/SXpen6XD0/3fHht/PzrvXrvhKGR6X/hT6y36K+o&#xA;fWuJ5/VfR9TjXevp70rgSqw/4e/SFz6P1T9IcD9c4el63Dbl6lPip0ryxVQ0z/CH1hv0X+j/AKzx&#xA;PP6t6PPh+1XhvTxxVFRfoThZej9W9Op/R3D06V4mvo0/ya/Z7YqpXn+GPRn+u/UvR9YfWfW9Lj6/&#xA;Hbny258fHemKonTP0X9UX9Geh9UqeP1bh6de9OHw4ql99/gz68/1/wDR31+q+p6/oetWg415/F0p&#xA;TFUxf9G+ta8/R9f4vqVePP7Pxel3+x149sVQyf4a/Sx4fU/0vU8uPpfWa03rT4+mKq/+4r/TP7j/&#xA;AJf/ALH8v+7v9h/N2xVJ9T/wv/hXWPqXo/UPq0v1v9G+nyp6ZrT0/h5U8cVYRZf4j+teUf0/9X/R&#xA;Xrw/oz6r6f1jl6f7j1P8in2uG34YUJp5a/TP+Pl/xV6H6W+ov+jvQ9Pjw5/Hy4/Hy4/ZrtSuKv8A&#xA;/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:AE888E11A785DD1193C99017179B7AB3</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:AF888E11A785DD1193C99017179B7AB3</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ea0be9b9-7fb1-ac47-8581-380084d71cd6</stRef:instanceID>
            <stRef:documentID>uuid:FAF2CFF922F4DC118CA4AC5F379C6F50</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5080.000000</stDim:w>
            <stDim:h>5080.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.609398</xapG:cyan>
                           <xapG:magenta>67.578102</xapG:magenta>
                           <xapG:yellow>66.796898</xapG:yellow>
                           <xapG:black>89.843796</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>6.250000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>96.093796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>62.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>51.562500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.890602</xapG:cyan>
                           <xapG:magenta>76.562500</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>26.953102</xapG:cyan>
                           <xapG:magenta>81.250000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>16.796898</xapG:cyan>
                           <xapG:magenta>97.656296</xapG:magenta>
                           <xapG:yellow>92.187500</xapG:yellow>
                           <xapG:black>6.640601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.390601</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>79.296898</xapG:magenta>
                           <xapG:yellow>96.484398</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>98.046898</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>34.765602</xapG:magenta>
                           <xapG:yellow>86.718796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>4.687500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>92.968796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>18.750000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>97.656296</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>98.828102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>99.218796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>85.937500</xapG:cyan>
                           <xapG:magenta>17.578102</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>3.906298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>89.843796</xapG:cyan>
                           <xapG:magenta>33.203102</xapG:magenta>
                           <xapG:yellow>98.437500</xapG:yellow>
                           <xapG:black>25.781298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.781296</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>74.609398</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984399</xapG:magenta>
                           <xapG:yellow>45.703102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.531296</xapG:cyan>
                           <xapG:magenta>14.843798</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.109398</xapG:cyan>
                           <xapG:magenta>52.343796</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>98.828102</xapG:cyan>
                           <xapG:magenta>96.093796</xapG:magenta>
                           <xapG:yellow>3.515601</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>26.171898</xapG:yellow>
                           <xapG:black>24.609398</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>98.046898</xapG:magenta>
                           <xapG:yellow>0.781298</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>49.218796</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>1.171899</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>34.765602</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>37.109398</xapG:yellow>
                           <xapG:black>10.937500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>11.718798</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>49.218796</xapG:yellow>
                           <xapG:black>0.781298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>96.484398</xapG:magenta>
                           <xapG:yellow>20.312500</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656298</xapG:cyan>
                           <xapG:magenta>27.343798</xapG:magenta>
                           <xapG:yellow>39.843796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.843796</xapG:cyan>
                           <xapG:magenta>42.578102</xapG:magenta>
                           <xapG:yellow>52.343796</xapG:yellow>
                           <xapG:black>6.640601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.390602</xapG:cyan>
                           <xapG:magenta>52.734398</xapG:magenta>
                           <xapG:yellow>60.546898</xapG:yellow>
                           <xapG:black>23.437500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>57.421898</xapG:cyan>
                           <xapG:magenta>60.156296</xapG:magenta>
                           <xapG:yellow>63.671898</xapG:yellow>
                           <xapG:black>41.796898</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656298</xapG:cyan>
                           <xapG:magenta>38.281296</xapG:magenta>
                           <xapG:yellow>63.281296</xapG:yellow>
                           <xapG:black>1.171899</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>31.640602</xapG:cyan>
                           <xapG:magenta>48.828102</xapG:magenta>
                           <xapG:yellow>73.828102</xapG:yellow>
                           <xapG:black>9.765601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.937500</xapG:cyan>
                           <xapG:magenta>57.031296</xapG:magenta>
                           <xapG:yellow>83.593796</xapG:yellow>
                           <xapG:black>22.656298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.062500</xapG:cyan>
                           <xapG:magenta>63.671898</xapG:magenta>
                           <xapG:yellow>92.968796</xapG:yellow>
                           <xapG:black>35.546898</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>41.406296</xapG:cyan>
                           <xapG:magenta>69.531296</xapG:magenta>
                           <xapG:yellow>96.484398</xapG:yellow>
                           <xapG:black>48.828102</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>47.656296</xapG:cyan>
                           <xapG:magenta>73.046898</xapG:magenta>
                           <xapG:yellow>83.203102</xapG:yellow>
                           <xapG:black>67.968796</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.781298</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984399</xapG:magenta>
                           <xapG:yellow>45.703102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>98.046898</xapG:magenta>
                           <xapG:yellow>0.781298</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>48.437500</xapG:cyan>
                           <xapG:magenta>36.328102</xapG:magenta>
                           <xapG:yellow>33.593796</xapG:yellow>
                           <xapG:black>1.562500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -25.3164 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 25.3164 li
179.967 25.3164 li
179.967 0 li
cp
clp
[1 0 0 1 0 0 ]ct
3.57178 0.234375 mo
3.57178 22.9111 li
0 22.9111 li
0 0.234375 li
3.57178 0.234375 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0.91 0.72 0.23 cmyk
f
20.2456 5.26367 mo
20.2456 4.1377 li
20.2456 2.77637 20.0464 1.76953 19.2876 1.03711 cv
18.6494 0.419922 17.6938 0.144531 16.5366 0.144531 cv
15.6528 0.144531 14.6128 0.21582 14.2578 0.276367 cv
14.0776 0.306641 13.9751 0.408203 13.9751 0.613281 cv
13.9751 8.78906 li
13.9751 9 14.0776 9.0957 14.2578 9.12598 cv
14.6128 9.18555 15.6528 9.25781 16.5366 9.25781 cv
17.7046 9.25781 18.667 8.97266 19.3057 8.34375 cv
20.0537 7.60547 20.2456 6.61133 20.2456 5.26367 cv
cp
18.8691 5.20703 mo
18.8691 6.33203 18.7358 7.02051 18.2515 7.50977 cv
17.8306 7.93555 17.2261 8.08594 16.5366 8.08594 cv
16.0317 8.08594 15.6826 8.07422 15.3643 8.05566 cv
15.3643 1.35254 li
15.6885 1.33398 16.0317 1.31641 16.5366 1.31641 cv
17.1992 1.31641 17.7832 1.45313 18.2012 1.84082 cv
18.7163 2.31836 18.8691 3.03516 18.8691 4.19434 cv
18.8691 5.20703 li
cp
129.813 11.458 mo
130.762 11.5527 131.225 11.5205 131.632 11.2715 cv
132.047 11.0166 132.324 10.7383 132.604 9.75879 cv
132.604 9.75879 134.501 3.13672 134.6 2.78516 cv
134.635 2.6582 134.577 2.50195 134.407 2.50195 cv
133.458 2.50195 li
133.343 2.50195 133.25 2.5918 133.223 2.69434 cv
131.84 8.02734 li
131.69 8.02734 li
131.612 8.02734 131.545 7.98535 131.491 7.7627 cv
130.174 2.70703 li
130.149 2.60645 130.061 2.50195 129.958 2.50195 cv
129.02 2.50195 li
128.831 2.50195 128.766 2.63477 128.81 2.78516 cv
130.397 8.28516 li
130.638 9.11523 131.01 9.19922 131.366 9.19922 cv
131.54 9.19922 li
131.431 9.62695 li
131.266 10.2773 131.005 10.4385 130.524 10.5059 cv
128.78 10.752 li
128.631 10.7734 128.53 10.8828 128.53 11.0146 cv
128.53 11.0801 128.53 11.0264 128.53 11.0918 cv
128.53 11.2207 128.635 11.3398 128.78 11.3545 cv
129.813 11.458 li
cp
100.767 8.92188 mo
100.767 9.05371 100.875 9.16797 101.007 9.16797 cv
101.849 9.16797 li
101.982 9.16797 102.089 9.05371 102.089 8.92188 cv
102.089 2.71094 li
102.089 2.57813 101.982 2.4707 101.849 2.4707 cv
99.5112 2.4707 li
99.3794 2.4707 99.2769 2.57813 99.2769 2.71094 cv
99.2769 2.71094 99.2769 2.65723 99.2769 2.78906 cv
99.2769 2.91992 99.3657 3.03027 99.5112 3.07227 cv
100.767 3.43945 li
100.767 8.92188 li
cp
96.7358 6.49219 mo
96.7358 5.76563 96.3638 5.0918 95.0894 5.0918 cv
93.3999 5.0918 li
93.3999 8.06738 li
93.7427 8.07324 94.1812 8.10352 94.5181 8.10352 cv
96.0327 8.10352 96.7358 7.74316 96.7358 6.67285 cv
96.7358 6.49219 li
cp
94.5181 9.25781 mo
93.6343 9.25781 92.9136 9.20703 92.4976 9.1377 cv
92.1616 9.08105 92.0112 8.96289 92.0112 8.58984 cv
92.0112 0.798828 li
92.0112 0.444336 92.1558 0.293945 92.4741 0.251953 cv
92.8286 0.204102 93.5737 0.143555 94.4331 0.143555 cv
96.478 0.143555 98.0474 0.708984 98.0474 2.52441 cv
98.0474 2.74121 li
98.0474 3.58203 97.6265 4.2793 96.8511 4.59277 cv
97.6323 4.89355 98.1011 5.56641 98.1011 6.48047 cv
98.1011 6.68457 li
98.1011 8.65039 96.5737 9.25781 94.5181 9.25781 cv
cp
96.688 2.57227 mo
96.688 1.57422 95.937 1.29883 94.4331 1.29883 cv
94.0854 1.29883 93.6948 1.31641 93.3999 1.32813 cv
93.3999 4.03906 li
95.0894 4.03906 li
96.3452 4.03906 96.688 3.43848 96.688 2.75293 cv
96.688 2.57227 li
cp
101.88 1.49023 mo
100.99 1.49023 li
100.857 1.49023 100.744 1.38281 100.744 1.25 cv
100.744 0.240234 li
100.744 0.107422 100.857 0 100.99 0 cv
101.88 0 li
102.012 0 102.121 0.107422 102.121 0.240234 cv
102.121 1.25 li
102.121 1.38281 102.012 1.49023 101.88 1.49023 cv
cp
69.769 7.9873 mo
69.8774 7.97754 69.9849 8.03809 69.9849 8.1582 cv
69.9849 8.75879 li
69.9849 8.93359 69.9429 9.0166 69.7383 9.05371 cv
69.0044 9.18848 68.4399 9.25879 67.4961 9.25879 cv
65.8252 9.25879 64.6763 8.3252 64.6763 6.02246 cv
64.6763 5.60449 li
64.6763 3.80664 65.3716 2.38672 67.4541 2.38672 cv
69.5605 2.38672 70.2075 3.85449 70.2075 5.60449 cv
70.2075 5.98145 li
70.2075 6.15625 70.1294 6.26465 69.9731 6.26465 cv
65.999 6.26465 li
65.999 6.36621 li
65.999 7.43066 66.4258 8.11035 67.5562 8.11035 cv
68.3438 8.11035 69.1802 8.03418 69.7212 7.99121 cv
69.769 7.9873 li
cp
68.8726 5.21777 mo
68.8726 4.05762 68.356 3.5166 67.4541 3.5166 cv
66.564 3.5166 66.0049 4.08203 66.0049 5.21777 cv
66.0049 5.2959 li
68.8726 5.2959 li
68.8726 5.21777 li
cp
46.8408 11.3545 mo
46.6968 11.3398 46.5908 11.2197 46.5908 11.0918 cv
46.5908 11.0264 46.5908 11.0801 46.5908 11.0146 cv
46.5908 10.8818 46.6924 10.7725 46.8408 10.752 cv
48.5845 10.5059 li
49.0669 10.4375 49.3271 10.2764 49.4927 9.62598 cv
49.6011 9.19922 li
49.4263 9.19922 li
49.0718 9.19922 48.6992 9.11426 48.4585 8.28516 cv
46.8716 2.78418 li
46.8276 2.63379 46.8916 2.50098 47.0815 2.50098 cv
48.0195 2.50098 li
48.1221 2.50098 48.21 2.60547 48.2358 2.70605 cv
49.5527 7.7627 li
49.6069 7.98438 49.6729 8.02637 49.751 8.02637 cv
49.9014 8.02637 li
51.2842 2.69434 li
51.311 2.59082 51.4043 2.50098 51.5186 2.50098 cv
52.4683 2.50098 li
52.6377 2.50098 52.6963 2.65723 52.6606 2.78418 cv
52.563 3.13574 50.665 9.75781 50.665 9.75781 cv
50.3853 10.7373 50.1084 11.0166 49.6934 11.2705 cv
49.2866 11.5205 48.8237 11.5518 47.875 11.458 cv
46.8408 11.3545 li
cp
72.3882 3.43945 mo
71.1089 3.07324 li
70.9629 3.03027 70.874 2.9209 70.874 2.78906 cv
70.874 2.65723 70.874 2.71191 70.874 2.71191 cv
70.874 2.5791 70.9761 2.4707 71.1089 2.4707 cv
73.3716 2.4707 li
73.5039 2.4707 73.6099 2.5791 73.6147 2.71094 cv
73.6245 2.99121 li
74.1724 2.63672 74.7329 2.37988 75.4185 2.37988 cv
76.0195 2.37988 76.4346 2.55469 76.7231 2.89746 cv
77.3604 2.57324 77.9858 2.37988 78.7134 2.37988 cv
79.9204 2.37988 80.6851 3.06738 80.6851 4.60742 cv
80.6851 8.92188 li
80.6851 9.05371 80.5767 9.16797 80.4443 9.16797 cv
79.603 9.16797 li
79.4707 9.16797 79.3623 9.05371 79.3623 8.92188 cv
79.3623 4.74902 li
79.3623 3.78125 79.0317 3.52246 78.3823 3.52246 cv
78.0518 3.52246 77.5708 3.63086 77.1196 3.83496 cv
77.1738 4.10059 77.1978 4.40723 77.1978 4.7373 cv
77.1978 8.92188 li
77.1978 9.04785 77.1021 9.16797 76.9697 9.16797 cv
76.0981 9.16797 li
75.9717 9.16797 75.8755 9.05371 75.8755 8.92188 cv
75.8755 4.7373 li
75.8755 3.75098 75.647 3.52246 74.9976 3.52246 cv
74.6548 3.52246 74.21 3.69727 73.7114 3.95605 cv
73.7114 8.92188 li
73.7114 9.04785 73.6147 9.16797 73.4824 9.16797 cv
72.6108 9.16797 li
72.4849 9.16797 72.3882 9.05371 72.3882 8.92188 cv
72.3882 3.43945 li
cp
82.6812 8.03613 mo
83.2622 8.06445 84.229 8.16406 84.626 8.16406 cv
85.3892 8.16406 85.6479 7.93555 85.6479 7.44824 cv
85.6479 7.1543 85.4673 6.96777 84.9321 6.64355 cv
83.5015 5.77734 li
82.8403 5.37402 82.3833 4.81543 82.3833 4.08789 cv
82.3833 2.86133 83.231 2.38672 84.6138 2.38672 cv
85.4375 2.38672 86.0332 2.46875 86.6221 2.58496 cv
86.772 2.61426 86.8442 2.70508 86.8442 2.84277 cv
86.8442 3.39063 li
86.8442 3.53418 86.7661 3.60645 86.646 3.60645 cv
86.6279 3.60645 86.6157 3.60742 86.604 3.60645 cv
86.2231 3.58594 85.3594 3.48633 84.6802 3.48633 cv
84.0547 3.48633 83.7061 3.59473 83.7061 4.08789 cv
83.7061 4.36426 83.9346 4.53809 84.3613 4.79199 cv
85.7441 5.62695 li
86.748 6.22852 86.9829 6.78711 86.9829 7.44824 cv
86.9829 8.58496 86.1411 9.25879 84.6802 9.25879 cv
84.2231 9.25879 83.2866 9.20508 82.6538 9.04785 cv
82.5039 9.01074 82.4136 8.92773 82.4136 8.79004 cv
82.4136 8.21777 li
82.4136 8.11621 82.5132 8.02734 82.6333 8.0332 cv
82.6812 8.03613 li
cp
54.0659 8.03613 mo
54.647 8.06445 55.6138 8.16406 56.0107 8.16406 cv
56.7739 8.16406 57.0327 7.93555 57.0327 7.44824 cv
57.0327 7.1543 56.8521 6.96777 56.3169 6.64355 cv
54.8862 5.77734 li
54.2251 5.37402 53.7681 4.81543 53.7681 4.08789 cv
53.7681 2.86133 54.6157 2.38672 55.9985 2.38672 cv
56.8223 2.38672 57.418 2.46875 58.0068 2.58496 cv
58.1567 2.61426 58.229 2.70508 58.229 2.84277 cv
58.229 3.39063 li
58.229 3.53418 58.1509 3.60645 58.0308 3.60645 cv
58.0127 3.60645 58.0005 3.60742 57.9888 3.60645 cv
57.6079 3.58594 56.7441 3.48633 56.0649 3.48633 cv
55.4395 3.48633 55.0908 3.59473 55.0908 4.08789 cv
55.0908 4.36426 55.3193 4.53809 55.7461 4.79199 cv
57.1289 5.62695 li
58.1328 6.22852 58.3677 6.78711 58.3677 7.44824 cv
58.3677 8.58496 57.5259 9.25879 56.0649 9.25879 cv
55.6079 9.25879 54.6714 9.20508 54.0386 9.04785 cv
53.8887 9.01074 53.7983 8.92773 53.7983 8.79004 cv
53.7983 8.21777 li
53.7983 8.11621 53.8979 8.02734 54.0181 8.0332 cv
54.0659 8.03613 li
cp
60.6792 3.44922 mo
59.4033 3.07422 li
59.2715 3.02832 59.1689 2.92773 59.1689 2.79492 cv
59.1689 2.69922 li
59.1689 2.56738 59.2715 2.4707 59.4033 2.4707 cv
60.6792 2.4707 li
60.6792 1.38867 li
60.6792 1.27148 60.771 1.1709 60.9077 1.14746 cv
61.7793 1.00391 li
61.8955 0.984375 62.0078 1.06152 62.0078 1.19629 cv
62.0078 2.4707 li
63.1982 2.4707 li
63.3306 2.4707 63.439 2.5791 63.439 2.71094 cv
63.439 3.27051 li
63.439 3.40234 63.3306 3.51074 63.1982 3.51074 cv
62.0078 3.51074 li
62.0078 7.49707 li
62.0078 8.12793 62.1104 8.21191 62.5674 8.21191 cv
63.2227 8.21191 li
63.3848 8.21191 63.4751 8.2666 63.4751 8.38672 cv
63.4751 8.97559 li
63.4751 9.08984 63.4087 9.16113 63.2524 9.18652 cv
62.9878 9.22754 62.6992 9.25879 62.4531 9.25879 cv
61.2207 9.25879 60.6792 8.96387 60.6792 7.49707 cv
60.6792 3.44922 li
cp
117.286 9.25879 mo
115.458 9.25879 114.514 8.03809 114.514 6.29395 cv
114.514 5.35059 li
114.514 3.60645 115.458 2.38672 117.286 2.38672 cv
119.113 2.38672 120.064 3.60645 120.064 5.35059 cv
120.064 6.29395 li
120.064 8.03809 119.113 9.25879 117.286 9.25879 cv
cp
118.741 5.35059 mo
118.741 4.24414 118.271 3.53418 117.286 3.53418 cv
116.306 3.53418 115.837 4.23828 115.837 5.35059 cv
115.837 6.29395 li
115.837 7.40039 116.3 8.11035 117.286 8.11035 cv
118.265 8.11035 118.741 7.40625 118.741 6.29395 cv
118.741 5.35059 li
cp
106.712 9.25879 mo
104.884 9.25879 103.941 8.03809 103.941 6.29395 cv
103.941 5.35059 li
103.941 3.60645 104.884 2.38672 106.712 2.38672 cv
108.541 2.38672 109.49 3.60645 109.49 5.35059 cv
109.49 6.29395 li
109.49 8.03809 108.541 9.25879 106.712 9.25879 cv
cp
108.167 5.35059 mo
108.167 4.24414 107.699 3.53418 106.712 3.53418 cv
105.732 3.53418 105.263 4.23828 105.263 5.35059 cv
105.263 6.29395 li
105.263 7.40039 105.726 8.11035 106.712 8.11035 cv
107.693 8.11035 108.167 7.40625 108.167 6.29395 cv
108.167 5.35059 li
cp
111.341 1.04004 mo
110.103 0.674805 li
109.958 0.631836 109.869 0.521484 109.869 0.389648 cv
109.869 0.258789 109.869 0.3125 109.869 0.3125 cv
109.869 0.180664 109.97 0.0712891 110.103 0.0712891 cv
112.441 0.0712891 li
112.568 0.0712891 112.664 0.174805 112.664 0.306641 cv
112.664 8.92188 li
112.664 9.04785 112.574 9.16797 112.441 9.16797 cv
111.57 9.16797 li
111.443 9.16797 111.341 9.05371 111.341 8.92188 cv
111.341 1.04004 li
cp
42.6675 9.25781 mo
41.7959 9.25781 41.1587 9.17188 40.6055 9.06641 cv
40.4434 9.03516 40.377 8.96973 40.377 8.83789 cv
40.377 8.16406 li
40.377 8.03223 40.4966 7.94141 40.6104 7.95215 cv
40.6401 7.95508 40.6104 7.95215 40.6401 7.95508 cv
41.1763 8.00586 42.1973 8.0498 42.6797 8.0498 cv
43.936 8.0498 44.291 7.56836 44.291 6.7998 cv
44.291 6.26367 44.002 5.97559 43.0581 5.4043 cv
41.6816 4.5752 li
40.5693 3.9082 40.1426 3.25195 40.1426 2.35059 cv
40.1426 0.961914 41.0503 0.144531 43.0825 0.144531 cv
43.834 0.144531 44.8501 0.239258 45.2827 0.324219 cv
45.4028 0.347656 45.4932 0.419922 45.4932 0.541016 cv
45.4932 1.24414 li
45.4932 1.36523 45.3999 1.45898 45.2803 1.44922 cv
45.2563 1.44727 45.2803 1.44922 45.2563 1.44727 cv
44.5928 1.39648 43.7856 1.35254 43.0464 1.35254 cv
41.9819 1.35254 41.5313 1.64063 41.5313 2.35059 cv
41.5313 2.83203 41.8315 3.12012 42.6797 3.61328 cv
43.9541 4.34668 li
45.313 5.12793 45.7334 5.84375 45.7334 6.7998 cv
45.7334 7.98438 45.0542 9.25781 42.6675 9.25781 cv
cp
125.977 9.625 mo
125.977 9.25879 125.708 9.08398 124.535 8.7959 cv
123.32 8.49512 li
123.056 8.77148 122.875 9 122.875 9.52832 cv
122.875 9.63672 li
122.875 10.2197 123.224 10.5811 124.457 10.5811 cv
125.719 10.5811 125.977 10.2627 125.977 9.71582 cv
125.977 9.625 li
cp
127.168 4.6416 mo
127.168 4.73145 li
127.168 6.14355 126.243 6.85352 124.408 6.85352 cv
123.771 6.85352 123.35 6.75098 123.056 6.63086 cv
122.881 6.72754 122.802 6.84766 122.802 6.99121 cv
122.802 7.21387 122.917 7.31641 123.194 7.38184 cv
124.798 7.7793 li
126.206 8.12207 127.299 8.41699 127.299 9.625 cv
127.299 9.71582 li
127.299 10.9053 126.464 11.5908 124.457 11.5908 cv
122.533 11.5908 121.583 10.8574 121.583 9.63672 cv
121.583 9.52832 li
121.583 8.94531 121.876 8.42871 122.267 8.10449 cv
121.867 7.89355 121.679 7.4668 121.679 7.06348 cv
121.679 7.05176 li
121.679 6.70313 121.835 6.34277 122.166 6.13184 cv
121.798 5.77148 121.642 5.33887 121.642 4.73145 cv
121.642 4.6416 li
121.642 3.50488 122.333 2.4707 124.408 2.4707 cv
127.603 2.4707 li
127.735 2.4707 127.838 2.5791 127.838 2.71191 cv
127.838 2.71191 127.838 2.74316 127.838 2.87402 cv
127.838 3.00586 127.749 3.11523 127.603 3.1582 cv
126.704 3.42578 li
127.012 3.73047 127.168 4.13379 127.168 4.6416 cv
cp
125.864 4.65332 mo
125.864 4.00391 125.574 3.49902 124.408 3.49902 cv
123.224 3.49902 122.947 4.03418 122.947 4.65332 cv
122.947 4.74902 li
122.947 5.23633 123.158 5.83691 124.408 5.83691 cv
125.556 5.83691 125.864 5.41113 125.864 4.74902 cv
125.864 4.65332 li
cp
34.7842 5.8916 mo
34.7842 0.462891 li
34.7842 0.330078 34.6763 0.234375 34.5498 0.234375 cv
33.6299 0.234375 li
33.4976 0.234375 33.3955 0.335938 33.3955 0.462891 cv
33.3955 5.8916 li
33.3955 7.3584 32.9868 8.09766 31.5923 8.09766 cv
30.1973 8.09766 29.7886 7.35156 29.7886 5.8916 cv
29.7886 0.462891 li
29.7886 0.330078 29.6802 0.234375 29.5542 0.234375 cv
28.6343 0.234375 li
28.502 0.234375 28.3994 0.335938 28.3994 0.462891 cv
28.3994 5.8916 li
28.3994 8.32031 29.6504 9.25781 31.5923 9.25781 cv
33.5337 9.25781 34.7842 8.32031 34.7842 5.8916 cv
cp
27.2676 1.19629 mo
27.2676 0.457031 li
27.2676 0.324219 27.1655 0.234375 27.0327 0.234375 cv
21.2012 0.234375 li
21.0693 0.234375 20.9609 0.330078 20.9609 0.457031 cv
20.9609 1.19629 li
20.9609 1.32813 21.0693 1.40039 21.2012 1.40039 cv
23.4258 1.40039 li
23.4258 8.92773 li
23.4258 9.05957 23.5278 9.16797 23.6543 9.16797 cv
24.5801 9.16797 li
24.7124 9.16797 24.8086 9.05371 24.8086 8.92773 cv
24.8086 1.40039 li
27.0327 1.40039 li
27.1655 1.40039 27.2676 1.32227 27.2676 1.19629 cv
cp
0 0 0 1 cmyk
f
89.8599 14.6016 mo
89.2827 14.6016 li
88.7173 14.6016 88.5493 14.7695 88.5493 15.4316 cv
88.5493 16.2969 li
89.812 16.2969 li
89.9438 16.2969 90.0405 16.3936 90.0405 16.5137 cv
90.0405 16.9824 li
90.0405 17.1035 89.9438 17.1875 89.812 17.1875 cv
88.5493 17.1875 li
88.5493 22.6699 li
88.5493 22.791 88.4409 22.9121 88.3203 22.9121 cv
87.7314 22.9121 li
87.5991 22.9121 87.4907 22.791 87.4907 22.6699 cv
87.4907 17.1875 li
86.3242 17.0547 li
86.1919 17.043 86.0957 16.959 86.0957 16.8379 cv
86.0957 16.5137 li
86.0957 16.3936 86.1919 16.2969 86.3242 16.2969 cv
87.4907 16.2969 li
87.4907 15.4316 li
87.4907 14.1445 88.1162 13.7598 89.1743 13.7598 cv
89.4995 13.7598 89.6909 13.7959 89.8472 13.832 cv
89.98 13.8682 90.0757 13.916 90.0757 14.0244 cv
90.0757 14.4219 li
90.0757 14.5537 89.9917 14.6016 89.8599 14.6016 cv
cp
84.1357 19.1475 mo
84.1357 17.9199 83.6431 17.1387 82.5127 17.1387 cv
81.394 17.1387 80.9009 17.9082 80.9009 19.1475 cv
80.9009 20.0615 li
80.9009 21.2881 81.3823 22.0693 82.5127 22.0693 cv
83.6309 22.0693 84.1357 21.2998 84.1357 20.0615 cv
84.1357 19.1475 li
cp
82.5127 22.9961 mo
80.7446 22.9961 79.8428 21.8291 79.8428 20.0615 cv
79.8428 19.1475 li
79.8428 17.3799 80.7446 16.2129 82.5127 16.2129 cv
84.2803 16.2129 85.1938 17.3799 85.1938 19.1475 cv
85.1938 20.0615 li
85.1938 21.8291 84.2803 22.9961 82.5127 22.9961 cv
cp
75.811 22.9355 mo
75.5708 22.9707 75.2578 22.9961 75.0293 22.9961 cv
73.9229 22.9961 73.394 22.707 73.394 21.3848 cv
73.394 17.1875 li
72.2271 17.0547 li
72.0952 17.043 71.9985 16.9707 71.9985 16.8379 cv
71.9985 16.5137 li
71.9985 16.3809 72.0952 16.2969 72.2271 16.2969 cv
73.394 16.2969 li
73.394 15.1191 li
73.394 14.998 73.478 14.9023 73.6104 14.8789 cv
74.2354 14.7822 li
74.2476 14.7822 74.2598 14.7822 74.2715 14.7822 cv
74.3677 14.7822 74.4521 14.8662 74.4521 14.9863 cv
74.4521 16.2969 li
75.7505 16.2969 li
75.8828 16.2969 75.9912 16.4063 75.9912 16.5371 cv
75.9912 16.9473 li
75.9912 17.0791 75.8828 17.1875 75.7505 17.1875 cv
74.4521 17.1875 li
74.4521 21.3848 li
74.4521 22.0459 74.6201 22.1416 75.1011 22.1416 cv
75.7749 22.1416 li
75.9434 22.1416 76.0273 22.1895 76.0273 22.3105 cv
76.0273 22.7305 li
76.0273 22.8389 75.9673 22.9121 75.811 22.9355 cv
cp
70.6401 22.9121 mo
70.063 22.9121 li
69.9307 22.9121 69.8223 22.8027 69.8223 22.6699 cv
69.8223 18.7148 li
69.8223 17.5 69.4136 17.127 68.4995 17.127 cv
67.9946 17.127 67.4292 17.3193 66.876 17.5957 cv
66.876 22.6699 li
66.876 22.791 66.7681 22.9121 66.6357 22.9121 cv
66.0464 22.9121 li
65.9263 22.9121 65.8179 22.8027 65.8179 22.6699 cv
65.8179 16.5371 li
65.8179 16.4063 65.9141 16.2969 66.0464 16.2969 cv
66.6475 16.2969 li
66.7798 16.2969 66.876 16.4063 66.876 16.5371 cv
66.876 16.7666 li
67.5376 16.3936 68.0786 16.2129 68.7881 16.2129 cv
70.231 16.2129 70.8809 17.1152 70.8809 18.7148 cv
70.8809 22.6699 li
70.8809 22.8027 70.7725 22.9121 70.6401 22.9121 cv
cp
63.3047 19.0273 mo
63.3047 17.668 62.7876 17.1387 61.7295 17.1387 cv
60.6948 17.1387 60.1177 17.7285 60.1177 19.0273 cv
60.1177 19.1348 li
63.3047 19.1348 li
63.3047 19.0273 li
cp
64.1465 19.9414 mo
60.1177 19.9414 li
60.1177 20.1094 li
60.1177 21.54 60.6831 22.0693 61.7896 22.0693 cv
62.4868 22.0693 63.377 22.0215 63.9302 21.9375 cv
63.9541 21.9375 63.9658 21.9375 63.9902 21.9375 cv
64.0864 21.9375 64.1826 21.9854 64.1826 22.1055 cv
64.1826 22.5146 li
64.1826 22.6699 64.1343 22.7549 63.9419 22.791 cv
63.2563 22.9238 62.5952 22.9961 61.7896 22.9961 cv
60.4067 22.9961 59.0596 22.3457 59.0596 20.1094 cv
59.0596 19.0273 li
59.0596 17.3076 60.0098 16.2129 61.7295 16.2129 cv
63.4849 16.2129 64.375 17.3193 64.375 19.0273 cv
64.375 19.6758 li
64.375 19.832 64.291 19.9414 64.1465 19.9414 cv
cp
57.4004 22.9121 mo
56.8228 22.9121 li
56.6904 22.9121 56.5825 22.8027 56.5825 22.6699 cv
56.5825 18.4141 li
56.5825 17.4033 56.1138 17.127 55.4883 17.127 cv
55.0552 17.127 54.5503 17.2715 54.0815 17.4512 cv
54.1538 17.7168 54.1895 18.0293 54.1895 18.3896 cv
54.1895 22.6699 li
54.1895 22.791 54.1055 22.9121 53.9731 22.9121 cv
53.3354 22.9121 li
53.2153 22.9121 53.1313 22.8027 53.1313 22.6699 cv
53.1313 18.3896 li
53.1313 17.3438 52.8306 17.127 52.2051 17.127 cv
51.7725 17.127 51.2432 17.3438 50.7383 17.5957 cv
50.7383 22.6699 li
50.7383 22.791 50.6538 22.9121 50.522 22.9121 cv
49.8843 22.9121 li
49.7642 22.9121 49.6802 22.8027 49.6802 22.6699 cv
49.6802 16.5371 li
49.6802 16.4063 49.7759 16.2969 49.9087 16.2969 cv
50.5098 16.2969 li
50.6421 16.2969 50.7383 16.4063 50.7383 16.5371 cv
50.7383 16.7666 li
51.2192 16.4658 51.8325 16.2012 52.4941 16.2012 cv
53.0112 16.2012 53.396 16.3457 53.6968 16.6934 cv
54.3579 16.3809 55.0674 16.2012 55.6929 16.2012 cv
56.7749 16.2012 57.6411 16.7422 57.6411 18.4141 cv
57.6411 22.6699 li
57.6411 22.8027 57.5327 22.9121 57.4004 22.9121 cv
cp
48.3452 22.9355 mo
48.105 22.9707 47.792 22.9961 47.5635 22.9961 cv
46.457 22.9961 45.9282 22.707 45.9282 21.3848 cv
45.9282 17.1875 li
44.7612 17.0547 li
44.6294 17.043 44.5332 16.9707 44.5332 16.8379 cv
44.5332 16.5137 li
44.5332 16.3809 44.6294 16.2969 44.7612 16.2969 cv
45.9282 16.2969 li
45.9282 15.1191 li
45.9282 14.998 46.0122 14.9023 46.1445 14.8789 cv
46.77 14.7822 li
46.7817 14.7822 46.7939 14.7822 46.8062 14.7822 cv
46.9023 14.7822 46.9863 14.8662 46.9863 14.9863 cv
46.9863 16.2969 li
48.2852 16.2969 li
48.4175 16.2969 48.5254 16.4063 48.5254 16.5371 cv
48.5254 16.9473 li
48.5254 17.0791 48.4175 17.1875 48.2852 17.1875 cv
46.9863 17.1875 li
46.9863 21.3848 li
46.9863 22.0459 47.1548 22.1416 47.6357 22.1416 cv
48.3091 22.1416 li
48.4775 22.1416 48.5615 22.1895 48.5615 22.3105 cv
48.5615 22.7305 li
48.5615 22.8389 48.5015 22.9121 48.3452 22.9355 cv
cp
43.6553 17.127 mo
43.1025 17.127 42.5972 17.2715 41.9956 17.6328 cv
41.9956 22.6699 li
41.9956 22.791 41.8877 22.9121 41.7554 22.9121 cv
41.166 22.9121 li
41.0459 22.9121 40.9375 22.8027 40.9375 22.6699 cv
40.9375 16.5371 li
40.9375 16.4063 41.0337 16.2969 41.166 16.2969 cv
41.7314 16.2969 li
41.8638 16.2969 41.96 16.4063 41.96 16.5371 cv
41.96 16.79 li
42.561 16.3691 43.1143 16.2129 43.6553 16.2129 cv
43.8237 16.2129 43.9077 16.2852 43.9077 16.4297 cv
43.9077 16.9229 li
43.9077 17.0547 43.8237 17.127 43.6553 17.127 cv
cp
38.2441 19.7129 mo
37.354 19.7129 li
35.8989 19.7129 35.5142 20.0371 35.5142 20.8906 cv
35.5142 21.0352 li
35.5142 21.9014 35.9229 22.1299 36.6206 22.1299 cv
37.1738 22.1299 37.6665 21.9609 38.2441 21.6484 cv
38.2441 19.7129 li
cp
39.0615 22.9121 mo
38.5083 22.9121 li
38.3765 22.9121 38.2681 22.8027 38.2681 22.6699 cv
38.2681 22.4063 li
37.6909 22.7432 37.0898 22.9961 36.416 22.9961 cv
35.394 22.9961 34.4561 22.5508 34.4561 21.0469 cv
34.4561 20.9023 li
34.4561 19.6045 35.2139 18.9551 37.354 18.9551 cv
38.2441 18.9551 li
38.2441 18.4736 li
38.2441 17.4639 37.8955 17.1152 36.9575 17.1152 cv
36.1758 17.1152 35.5981 17.1631 35.1172 17.2109 cv
35.0933 17.2109 35.0815 17.2109 35.0571 17.2109 cv
34.9492 17.2109 34.8408 17.1748 34.8408 17.0186 cv
34.8408 16.5977 li
34.8408 16.4658 34.9248 16.3936 35.0933 16.3691 cv
35.5864 16.2852 36.1392 16.2129 36.9575 16.2129 cv
38.6284 16.2129 39.3022 17.0547 39.3022 18.4736 cv
39.3022 22.6699 li
39.3022 22.8027 39.1938 22.9121 39.0615 22.9121 cv
cp
32.2192 19.1836 mo
32.2192 17.9199 31.8467 17.1035 30.6563 17.1035 cv
30.1509 17.1035 29.5854 17.1631 29.249 17.2227 cv
29.249 21.9854 li
29.646 22.0566 30.2715 22.1055 30.6563 22.1055 cv
31.8345 22.1055 32.2192 21.3359 32.2192 20.0488 cv
32.2192 19.1836 li
cp
30.6563 22.9961 mo
30.2832 22.9961 29.7183 22.9473 29.249 22.8633 cv
29.249 25.04 li
29.249 25.1602 29.1528 25.2676 29.0205 25.2676 cv
28.4072 25.2676 li
28.2871 25.2676 28.1909 25.1719 28.1909 25.04 cv
28.1909 16.7666 li
28.1909 16.6094 28.2271 16.5371 28.4438 16.4902 cv
29.0806 16.334 29.9229 16.2129 30.6563 16.2129 cv
32.4478 16.2129 33.2778 17.3799 33.2778 19.1836 cv
33.2778 20.0488 li
33.2778 21.9375 32.4116 22.9961 30.6563 22.9961 cv
cp
25.6777 19.0273 mo
25.6777 17.668 25.1606 17.1387 24.1021 17.1387 cv
23.0679 17.1387 22.4907 17.7285 22.4907 19.0273 cv
22.4907 19.1348 li
25.6777 19.1348 li
25.6777 19.0273 li
cp
26.5195 19.9414 mo
22.4907 19.9414 li
22.4907 20.1094 li
22.4907 21.54 23.0562 22.0693 24.1626 22.0693 cv
24.8599 22.0693 25.75 22.0215 26.3032 21.9375 cv
26.3267 21.9375 26.3389 21.9375 26.3633 21.9375 cv
26.4595 21.9375 26.5557 21.9854 26.5557 22.1055 cv
26.5557 22.5146 li
26.5557 22.6699 26.5073 22.7549 26.3149 22.791 cv
25.6294 22.9238 24.9683 22.9961 24.1626 22.9961 cv
22.7798 22.9961 21.4326 22.3457 21.4326 20.1094 cv
21.4326 19.0273 li
21.4326 17.3076 22.3828 16.2129 24.1021 16.2129 cv
25.8579 16.2129 26.748 17.3193 26.748 19.0273 cv
26.748 19.6758 li
26.748 19.832 26.6641 19.9414 26.5195 19.9414 cv
cp
19.0518 17.6328 mo
19.0518 15.4551 17.9453 14.8301 16.5024 14.8301 cv
15.937 14.8301 15.5645 14.8418 15.1675 14.8662 cv
15.1675 22.0332 li
15.5522 22.0566 15.937 22.0566 16.5024 22.0566 cv
17.9453 22.0566 19.0518 21.4199 19.0518 19.2559 cv
19.0518 17.6328 li
cp
16.5024 22.9961 mo
15.5884 22.9961 14.6626 22.9355 14.3135 22.875 cv
14.1577 22.8516 14.061 22.7549 14.061 22.5742 cv
14.061 14.3125 li
14.061 14.1445 14.1577 14.0371 14.3135 14.0127 cv
14.6626 13.9521 15.5884 13.8926 16.5024 13.8926 cv
18.7271 13.8926 20.146 15.0352 20.146 17.6328 cv
20.146 19.2559 li
20.146 21.8291 18.7271 22.9961 16.5024 22.9961 cv
cp
179.956 16.5859 mo
177.971 23.5127 li
177.598 24.8115 177.153 25.293 175.77 25.293 cv
175.434 25.293 175.012 25.2441 174.76 25.1836 cv
174.616 25.1484 174.507 25.1113 174.507 24.9922 cv
174.507 24.5469 li
174.507 24.4141 174.604 24.3545 174.736 24.3545 cv
174.748 24.3545 174.76 24.3545 174.772 24.3545 cv
175.037 24.3789 175.578 24.4268 175.842 24.4268 cv
176.528 24.4268 176.829 24.2461 177.033 23.4043 cv
177.153 22.9111 li
176.985 22.9111 li
176.624 22.9111 176.311 22.8271 176.094 22.082 cv
174.496 16.5859 li
174.483 16.5625 174.483 16.5254 174.483 16.502 cv
174.483 16.3809 174.555 16.2969 174.7 16.2969 cv
175.362 16.2969 li
175.458 16.2969 175.542 16.3936 175.566 16.4902 cv
176.985 21.709 li
177.045 21.9492 177.129 21.9727 177.213 21.9727 cv
177.406 21.9727 li
178.873 16.4785 li
178.897 16.3809 178.993 16.2969 179.101 16.2969 cv
179.774 16.2969 li
179.895 16.2969 179.967 16.3809 179.967 16.502 cv
179.967 16.5254 179.967 16.5625 179.956 16.5859 cv
cp
172.295 18.4258 mo
172.295 17.7041 171.97 17.1387 170.671 17.1387 cv
169.325 17.1387 169.048 17.752 169.048 18.4258 cv
169.048 18.5215 li
169.048 19.0508 169.289 19.748 170.671 19.748 cv
171.97 19.748 172.295 19.2441 172.295 18.5215 cv
172.295 18.4258 li
cp
172.391 23.3564 mo
172.391 22.8867 172.006 22.6953 170.924 22.418 cv
169.565 22.0693 li
169.216 22.3701 168.976 22.6709 168.976 23.2969 cv
168.976 23.4043 li
168.976 24.0781 169.373 24.498 170.708 24.498 cv
172.079 24.498 172.391 24.1133 172.391 23.4531 cv
172.391 23.3564 li
cp
173.366 17.1035 mo
172.932 17.1875 li
173.149 17.416 173.34 17.7764 173.34 18.4258 cv
173.34 18.5215 li
173.34 19.8447 172.524 20.5781 170.671 20.5781 cv
170.034 20.5781 169.625 20.4824 169.276 20.3379 cv
169.072 20.4336 168.976 20.5664 168.976 20.7461 cv
168.976 20.9512 169.072 21.0596 169.348 21.1309 cv
171.141 21.5879 li
172.319 21.8887 173.45 22.2266 173.45 23.3564 cv
173.45 23.4531 li
173.45 24.6074 172.68 25.3164 170.708 25.3164 cv
168.807 25.3164 167.942 24.583 167.942 23.4043 cv
167.942 23.2969 li
167.942 22.623 168.302 22.0693 168.7 21.7695 cv
168.616 21.7324 li
168.231 21.5645 168.062 21.168 168.062 20.7949 cv
168.062 20.7832 li
168.062 20.458 168.218 20.1094 168.555 19.917 cv
168.182 19.5684 168.002 19.1348 168.002 18.5215 cv
168.002 18.4258 li
168.002 17.3555 168.603 16.2969 170.671 16.2969 cv
173.305 16.2969 li
173.45 16.2969 173.582 16.418 173.582 16.5625 cv
173.582 16.875 li
173.582 17.0313 173.498 17.0791 173.366 17.1035 cv
cp
165.633 19.1475 mo
165.633 17.9209 165.139 17.1387 164.009 17.1387 cv
162.891 17.1387 162.398 17.9082 162.398 19.1475 cv
162.398 20.0615 li
162.398 21.2881 162.879 22.0693 164.009 22.0693 cv
165.127 22.0693 165.633 21.2998 165.633 20.0615 cv
165.633 19.1475 li
cp
164.009 22.9961 mo
162.242 22.9961 161.34 21.8291 161.34 20.0615 cv
161.34 19.1475 li
161.34 17.3799 162.242 16.2129 164.009 16.2129 cv
165.778 16.2129 166.691 17.3799 166.691 19.1475 cv
166.691 20.0615 li
166.691 21.8291 165.778 22.9961 164.009 22.9961 cv
cp
159.584 22.9111 mo
158.959 22.9111 li
158.838 22.9111 158.743 22.8027 158.743 22.6709 cv
158.743 14.0967 li
158.743 13.9766 158.827 13.8682 158.959 13.8682 cv
159.584 13.8682 li
159.705 13.8682 159.801 13.9648 159.801 14.0967 cv
159.801 22.6709 li
159.801 22.791 159.716 22.9111 159.584 22.9111 cv
cp
156.145 19.1475 mo
156.145 17.9209 155.652 17.1387 154.522 17.1387 cv
153.403 17.1387 152.911 17.9082 152.911 19.1475 cv
152.911 20.0615 li
152.911 21.2881 153.391 22.0693 154.522 22.0693 cv
155.64 22.0693 156.145 21.2998 156.145 20.0615 cv
156.145 19.1475 li
cp
154.522 22.9961 mo
152.754 22.9961 151.852 21.8291 151.852 20.0615 cv
151.852 19.1475 li
151.852 17.3799 152.754 16.2129 154.522 16.2129 cv
156.29 16.2129 157.204 17.3799 157.204 19.1475 cv
157.204 20.0615 li
157.204 21.8291 156.29 22.9961 154.522 22.9961 cv
cp
150.048 22.9111 mo
149.471 22.9111 li
149.338 22.9111 149.231 22.8027 149.231 22.6709 cv
149.231 16.5381 li
149.231 16.4063 149.338 16.2969 149.471 16.2969 cv
150.048 16.2969 li
150.18 16.2969 150.289 16.4063 150.289 16.5381 cv
150.289 22.6709 li
150.289 22.8027 150.18 22.9111 150.048 22.9111 cv
cp
150.073 15.2393 mo
149.459 15.2393 li
149.327 15.2393 149.218 15.1309 149.218 14.998 cv
149.218 14.0371 li
149.218 13.9043 149.327 13.7959 149.459 13.7959 cv
150.073 13.7959 li
150.205 13.7959 150.313 13.9043 150.313 14.0371 cv
150.313 14.998 li
150.313 15.1309 150.205 15.2393 150.073 15.2393 cv
cp
146.584 20.2422 mo
146.584 19.4482 146.188 18.7148 144.768 18.7148 cv
142.917 18.7148 li
142.917 22.0215 li
143.314 22.0332 143.747 22.0693 144.167 22.0693 cv
145.659 22.0693 146.584 21.7451 146.584 20.4463 cv
146.584 20.2422 li
cp
146.537 16.2129 mo
146.537 15.0586 145.575 14.8184 144.108 14.8184 cv
143.699 14.8184 143.254 14.8418 142.917 14.8545 cv
142.917 17.8359 li
144.768 17.8359 li
146.165 17.8359 146.537 17.1631 146.537 16.4063 cv
146.537 16.2129 li
cp
144.167 22.9961 mo
143.374 22.9961 142.665 22.959 142.208 22.8867 cv
141.931 22.8516 141.811 22.7432 141.811 22.4424 cv
141.811 14.4336 li
141.811 14.1563 141.943 14.0127 142.196 13.9883 cv
142.592 13.9404 143.327 13.8926 144.108 13.8926 cv
146.02 13.8926 147.631 14.3975 147.631 16.2129 cv
147.631 16.4063 li
147.631 17.2949 147.163 17.9805 146.344 18.293 cv
147.174 18.582 147.679 19.3154 147.679 20.2422 cv
147.679 20.4463 li
147.679 22.4668 146.043 22.9961 144.167 22.9961 cv
cp
135.053 22.9961 mo
134.608 22.9961 133.742 22.959 133.153 22.8154 cv
132.997 22.7793 132.9 22.707 132.9 22.5742 cv
132.9 22.1543 li
132.9 22.0449 132.997 21.9727 133.117 21.9727 cv
133.141 21.9727 133.153 21.9727 133.165 21.9727 cv
133.742 22.0449 134.62 22.1055 135.053 22.1055 cv
135.834 22.1055 136.243 21.9014 136.243 21.252 cv
136.243 20.8906 136.027 20.6621 135.341 20.2539 cv
134.127 19.5322 li
133.393 19.0879 132.9 18.5703 132.9 17.8125 cv
132.9 16.5625 133.838 16.2129 135.077 16.2129 cv
135.75 16.2129 136.387 16.2734 136.953 16.3691 cv
137.109 16.3936 137.181 16.4785 137.181 16.6094 cv
137.181 17.0068 li
137.181 17.1514 137.097 17.2109 136.977 17.2109 cv
136.965 17.2109 136.953 17.2109 136.941 17.2109 cv
136.52 17.1758 135.75 17.1152 135.077 17.1152 cv
134.403 17.1152 133.958 17.1992 133.958 17.8125 cv
133.958 18.1738 134.235 18.4023 134.788 18.7266 cv
135.979 19.4355 li
136.977 20.0254 137.301 20.543 137.301 21.252 cv
137.301 22.4785 136.399 22.9961 135.053 22.9961 cv
cp
131.297 22.9111 mo
130.72 22.9111 li
130.588 22.9111 130.48 22.8027 130.48 22.6709 cv
130.48 18.4141 li
130.48 17.4043 130.011 17.127 129.385 17.127 cv
128.953 17.127 128.448 17.2715 127.979 17.4512 cv
128.051 17.7168 128.086 18.0293 128.086 18.3896 cv
128.086 22.6709 li
128.086 22.791 128.002 22.9111 127.871 22.9111 cv
127.233 22.9111 li
127.113 22.9111 127.028 22.8027 127.028 22.6709 cv
127.028 18.3896 li
127.028 17.3438 126.728 17.127 126.102 17.127 cv
125.67 17.127 125.14 17.3438 124.635 17.5957 cv
124.635 22.6709 li
124.635 22.791 124.551 22.9111 124.419 22.9111 cv
123.782 22.9111 li
123.662 22.9111 123.578 22.8027 123.578 22.6709 cv
123.578 16.5381 li
123.578 16.4063 123.673 16.2969 123.806 16.2969 cv
124.408 16.2969 li
124.539 16.2969 124.635 16.4063 124.635 16.5381 cv
124.635 16.7656 li
125.117 16.4658 125.73 16.2012 126.391 16.2012 cv
126.909 16.2012 127.293 16.3457 127.594 16.6943 cv
128.255 16.3809 128.965 16.2012 129.59 16.2012 cv
130.672 16.2012 131.538 16.7422 131.538 18.4141 cv
131.538 22.6709 li
131.538 22.8027 131.43 22.9111 131.297 22.9111 cv
cp
121.007 19.0273 mo
121.007 17.668 120.49 17.1387 119.431 17.1387 cv
118.398 17.1387 117.82 17.7285 117.82 19.0273 cv
117.82 19.1348 li
121.007 19.1348 li
121.007 19.0273 li
cp
121.849 19.9414 mo
117.82 19.9414 li
117.82 20.1094 li
117.82 21.541 118.386 22.0693 119.492 22.0693 cv
120.189 22.0693 121.08 22.0215 121.632 21.9375 cv
121.657 21.9375 121.668 21.9375 121.693 21.9375 cv
121.789 21.9375 121.885 21.9854 121.885 22.1055 cv
121.885 22.5146 li
121.885 22.6709 121.837 22.7549 121.644 22.791 cv
120.958 22.9238 120.298 22.9961 119.492 22.9961 cv
118.109 22.9961 116.762 22.3457 116.762 20.1094 cv
116.762 19.0273 li
116.762 17.3076 117.712 16.2129 119.431 16.2129 cv
121.187 16.2129 122.078 17.3193 122.078 19.0273 cv
122.078 19.6768 li
122.078 19.833 121.994 19.9414 121.849 19.9414 cv
cp
115.644 22.9355 mo
115.404 22.9707 115.091 22.9961 114.863 22.9961 cv
113.756 22.9961 113.227 22.707 113.227 21.3838 cv
113.227 17.1875 li
112.06 17.0547 li
111.928 17.043 111.832 16.9707 111.832 16.8379 cv
111.832 16.5137 li
111.832 16.3809 111.928 16.2969 112.06 16.2969 cv
113.227 16.2969 li
113.227 15.1191 li
113.227 14.998 113.311 14.9023 113.443 14.8789 cv
114.069 14.7822 li
114.081 14.7822 114.093 14.7822 114.105 14.7822 cv
114.201 14.7822 114.285 14.8662 114.285 14.9863 cv
114.285 16.2969 li
115.583 16.2969 li
115.716 16.2969 115.824 16.4063 115.824 16.5381 cv
115.824 16.9473 li
115.824 17.0791 115.716 17.1875 115.583 17.1875 cv
114.285 17.1875 li
114.285 21.3838 li
114.285 22.0449 114.454 22.1416 114.935 22.1416 cv
115.608 22.1416 li
115.777 22.1416 115.861 22.1895 115.861 22.3105 cv
115.861 22.7305 li
115.861 22.8398 115.8 22.9111 115.644 22.9355 cv
cp
108.852 22.9961 mo
108.407 22.9961 107.541 22.959 106.953 22.8154 cv
106.795 22.7793 106.699 22.707 106.699 22.5742 cv
106.699 22.1543 li
106.699 22.0449 106.795 21.9727 106.916 21.9727 cv
106.94 21.9727 106.953 21.9727 106.964 21.9727 cv
107.541 22.0449 108.419 22.1055 108.852 22.1055 cv
109.633 22.1055 110.042 21.9014 110.042 21.252 cv
110.042 20.8906 109.826 20.6621 109.14 20.2539 cv
107.925 19.5322 li
107.193 19.0879 106.699 18.5703 106.699 17.8125 cv
106.699 16.5625 107.637 16.2129 108.876 16.2129 cv
109.549 16.2129 110.187 16.2734 110.751 16.3691 cv
110.908 16.3936 110.98 16.4785 110.98 16.6094 cv
110.98 17.0068 li
110.98 17.1514 110.896 17.2109 110.776 17.2109 cv
110.764 17.2109 110.751 17.2109 110.74 17.2109 cv
110.319 17.1758 109.549 17.1152 108.876 17.1152 cv
108.203 17.1152 107.757 17.1992 107.757 17.8125 cv
107.757 18.1738 108.035 18.4023 108.587 18.7266 cv
109.778 19.4355 li
110.776 20.0254 111.101 20.543 111.101 21.252 cv
111.101 22.4785 110.199 22.9961 108.852 22.9961 cv
cp
105.788 16.5859 mo
103.804 23.5127 li
103.431 24.8115 102.986 25.293 101.603 25.293 cv
101.266 25.293 100.845 25.2441 100.593 25.1836 cv
100.449 25.1484 100.339 25.1113 100.339 24.9922 cv
100.339 24.5469 li
100.339 24.4141 100.437 24.3545 100.569 24.3545 cv
100.581 24.3545 100.593 24.3545 100.605 24.3545 cv
100.869 24.3789 101.411 24.4268 101.675 24.4268 cv
102.361 24.4268 102.662 24.2461 102.865 23.4043 cv
102.986 22.9111 li
102.818 22.9111 li
102.457 22.9111 102.144 22.8271 101.927 22.082 cv
100.328 16.5859 li
100.316 16.5625 100.316 16.5254 100.316 16.502 cv
100.316 16.3809 100.388 16.2969 100.533 16.2969 cv
101.194 16.2969 li
101.291 16.2969 101.375 16.3936 101.398 16.4902 cv
102.818 21.709 li
102.877 21.9492 102.961 21.9727 103.046 21.9727 cv
103.238 21.9727 li
104.706 16.4785 li
104.729 16.3809 104.826 16.2969 104.934 16.2969 cv
105.607 16.2969 li
105.728 16.2969 105.8 16.3809 105.8 16.502 cv
105.8 16.5254 105.8 16.5625 105.788 16.5859 cv
cp
96.4468 22.9961 mo
95.605 22.9961 94.979 22.9111 94.4507 22.8271 cv
94.2456 22.791 94.2222 22.7432 94.2222 22.6113 cv
94.2222 22.1299 li
94.2222 21.9971 94.3179 21.9375 94.4253 21.9375 cv
94.438 21.9375 94.4507 21.9375 94.4624 21.9375 cv
95.0151 21.9854 95.8931 22.0098 96.4468 22.0098 cv
97.8892 22.0098 98.2749 21.4316 98.2749 20.5898 cv
98.2749 19.9893 97.9253 19.6523 96.8315 18.9785 cv
95.6646 18.2695 li
94.5581 17.5957 94.0054 16.9824 94.0054 16.0215 cv
94.0054 14.5654 95.0513 13.8926 96.8794 13.8926 cv
97.5884 13.8926 98.5151 13.9648 98.9722 14.0371 cv
99.0913 14.0605 99.1763 14.1211 99.1763 14.2412 cv
99.1763 14.7578 li
99.1763 14.8789 99.0913 14.9502 98.9722 14.9502 cv
98.9595 14.9502 98.9595 14.9502 98.9478 14.9502 cv
98.4185 14.9141 97.5767 14.8789 96.8794 14.8789 cv
95.6401 14.8789 95.1108 15.1426 95.1108 16.0215 cv
95.1108 16.5859 95.5083 16.9229 96.4224 17.4756 cv
97.5288 18.1367 li
98.9233 18.9668 99.4165 19.6289 99.4165 20.5898 cv
99.4165 21.7451 98.8159 22.9961 96.4468 22.9961 cv
cp
0 0 0 0.56 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Peter Dalhoff) ()%%Title: (DTU Systembiologi B UK.eps)%%CreationDate: 9/16/08 5:28 PM%AI9_DataStream%Gb"-6CQ'O\Fri"$M@YhA_UcUI+d+6X>3[`bWLK"fOV,,se**h"?LGM?&+Aj2QajUDpNG041oDG5IdGq)L(.5d/=HVC975AVC^>c(%"-sBe&.H_`9ELFf&Z1'A[p\Kf5X;XJPCKB84t"W9&Wp4!<EVJGY3O8'b\kbkbfG%!303Nu3;LQ5PDbq%j-0'^PDenB2(Fk0(!_h]%?,4ctp;S%9J+D"RWdW2Q[tV^=a*D"BE&UTMr1Y$p7?112?6%dkc-ELW]Y$4m?!U/X:+n6'hAX(Op]QD.UL0I\SmHe.R[bE?4j2^7%H.P145<5;%?X00C?B=AkN\j`uRbXF'*l!2Gp?Cr7XcY4nP06A0Z#<r7;f@ZncU<6Vr93e8GkN;f3BM]a%"<VY^T`dscOX[?f.[3g%K7`Mchts6gUg4'P?XNc_8$aQj=4`dof-_BthgUdCrciV[r:KK)k/X[sHrRsir]f9@rV+'T:l`f!:a9akpq\rhI@QDPB.(%3E@QuD%cEAn(T$hjI4?9-mfX\YDGk,,WRaUs4s'PWI7lR?PbAWuE>gjg=hQ?%ipF_J=Vf.QPnGN:M+V$@'Q\tg>)a6HuHnr<g7D1[o_(iY]%Eq0F%l@Zu-As`#k+$?0dIsgbo^;gaVCLKala+:4pWiR/=WiANGr)M%Wa5eILnf*jDX.lJr+`'X%\$-2]_Rb,6H1L%Wr2g3(228Xm%7h5t%WMlA_[<q*-j>^:'j>U;(>l#,J%A'6EN@TWG;!27.Y-2L$4;d"Sl$K\;4<M?4&3@(?IQY;'_kdBWH"-o6Ih%ugHLZZ;(Ol(m%J]D]#dt%A2+2*.)GJcI.S([]<2t#(KV`4+GG:kOdT"fXOp`fV#cLJlOZdFP`f2$tXBBR<:DiU2SruBE"5Wq+&Cdtf%iQ:[MQaZYY%-$%@rd0H<Co'GQY*bIb:l/Bn/ok\b<&!([u/k;,KS#`H^O"W+\6iWUi$Jf6uVrIZEnW".Y"6UbrdnJ*&M/R(B$$OP4]`mh1r!)rX%-FZ0%4?YiQEd@HXl,cfS$T`_YhF,+_j(5I805'g#s%iH?&%;Dqm*gmAPH2%2N="^a_oqA0UXRo60<VHjB<,7kSNR/dQ;!dGm[\hc%42#m1F>?Z&c]:T2G^0%3=jslSO&+&^@>FXV*2i>dloD*-dDMl;cY'u(f2)/>SI^(On`f$.iT8/06^&pIJ:BkV2+8/*6DNZT#f]j9%4a=2!-A!k?S0u($kOS-;"N9\3UT_Oq?bf=\B>,`]IP^::K:'-Ca`7$Vlt<YP-_KHu\9@JWHsbu-WBukB/#+T(XE(=A4)1LeC00f%%r?<mo;&!T8$WC#YL!(3RYu=>RBsCn/A]9+dK=OpFAZ8=$<i%BR=dM53Un!a_j^,L$F00Nb2MfpR=5%DeCV?JjHE)2^T&)E:;5Q%D%dDhP'1Y+NaRiO:>;mU95b^PgEf8?T0FCd^Og<*E<[8Tf"C%cU-,b$m*C)C,83#\@sOG7FnLbqX?VB9IgC6A%"BtTJH.jKd'q]X.U%A_8bW)*/9LLS+D4b7)H3a=PCpn4_2j.N$\#@F<5oCR5NI)@)Se]m^h8%rFp+j7VaWS?+4L08%ZoioV9!P=>2g9LF-JJ!MsjDKBB)%h>D>^)SPZSEX<tCl)nIS/M)I(`@,,.npDMpC)<1PP4/2),E^+?$i_`eC;7nLg]Y+5Zb)3$O<#g\.?EqO\Lq;>Q-&\_E6g0+d0(f/%L8h@a))Nm8!DAUY'CN\G9juk$?j.RPAHf-7@<Dr[k8`'#&(Z2u!?:A*6TAJ5$<T[uZP:253UkB:nBr#\M?^t88SbRoDDAL)XnkM`%=_V!,k/OaSre)XtV@t>aoUJYq,E/DrDS>Vs<>ZD\$f<OST(8@^+fj1`PA+C>Ba%jM1us*ijMkPl^LTRhNg;iqGBN'"g2H>^[A1s'%S!uf%$0P'ojnC\"m]7S0K;<+ie_JeOR2*\`6XXPb-$Ink<ZSLjo-,t8F-FmER%LH773q`,kq"^SM.TBB.\3[q?WiJG3+[*X)Uk#9%\$fD/'9!f)TP6qd5D_$S,LrM+fkJ]ebX[k8if#F[%mM9l1*:iP*U$LQ[Ra>]]<1J,j&[$C=p;go\7&5iMCQ)aoZ#2_r@7`.INcHu%J!m\4a!r#fCuIdb:/e,C159[G%FIo0[uSnIh/5m2bG`kgHn3C\\kpZjE3Mu8l+HR>G=<4!J:O@`cAlWs2R^QE^ped"mUMG2G`sMA%GXGnJp\Gt>?(AqLN#J$PPp9RqJQ0Q(Xn@p.%nsU/-S"PQr.%T(UTtji?)dUV^(:"ibJL4[LP`^KoE4TUP+.^W")$B@HJ\t3o`4AY%HAm3gc__"cc2YB$bZ84bCZh0:9](\lL\M%UG'"*/^SPk,.?/[ag\pPq[O8]'nIUbSgSJSo%3l&U`&nJI/]=(0hr!>Ghqapm:\K#+%l[?6\pT&_KYJKKU5c3Uhqg3[:]6i#?akk<L^$#+U?F=F]e1Et<.+gNV]6h0%]@5TXm`o^`l`sg.>O@kb%E;r[_C;,F:\U`ue*1s0%h3lhm2mq+LC8MonlN.2k51uRp9m.o5a^h\5W@)Rm-e6.c9jLL$d#r[_ZbNiUZb&$LRI';,e2qQgmSl7Pm*ZO-R=[$&?glOWosC=?%4*=i@g=B8@C(35/!+D;-ICJB_h:,0SN^IL)=][Tcf":*!f^J]\cgKMdS_+re>A((?X8rF5"OX26)XLOPeS[5JDe00d('i\h"^[,l%8QgR#aYU760$Z)Z3YQIXC2eU&WPB$JCtmY)em5`*]^'(`2%3V'EESWeCJ!qV836l.JXUI*V>rD%qH*H/q"Hh.qVf]\o@)CV,9Rtt%VV^cn?bh[MKE%FI(+rbQMIdS%XQX5pi#V-LlR4(sR'(96b]ldeD1:jVo.0[[>mAr!2J7[,3L=`S(h1m<p?j__cXMLI0F\PV#!#iE%r7gqlRa-DK$q`(n(NTJ\H/F)lf,lp$hBL!\Q2=T5]<[02[cl-i/ebE>rC>&R>BJQ\eT1R-?a[Xlr&+#.L=<TsV[b'":EN=S:*E@V%:*WLZ:*iU]:1p-6N7+6UXMVWe[I<"2``.La('la!*"Zs%#WRos+R24VK$XUV%,u1AKHLPMYZ5[u'H())^odlK!-dIq)?f76Lf"`C%+AhetYjR,aL_a\*r"!TE6c%&uhQ$+l%Z"X,q&l1nF(Fr-lqTBC$]s/".i@J*G/8`/hZ;t*!?&W[Z@6_)*t2Z`ikGI>TQ+!t-!3tQ%clUt#!G);s-3Lrd%ji?d_$+KcNDg)B\'R9cm1*g".;0dL?.45JAq!eYbTq7^ZW$YP8a".jq.\.$*mTkVjqZV!Y0:iH-Sna!)4L=<%_YMl#c&_DdK<sTAZa9*`"-rE3(nM\8R@Q#fqdF)M?E,\4@917@paO>_N6%O-);,8@"'pZ`Um2-rX'klHW:(a?@1):IDg*9+Vud\E%+omk@JQ]<5TK7_eRD=dLJlT%9:(-nt?nE4c;WJ)L,$5NJr;M0;#NFk-Y.AcC1p0Dj:!)"Y-JkP'Hc`Z;YD18WIu<;:1NkrR8*JlQ%a]4&<L<G:O%bH_GR?tZ%QGV,/VX4S#D,4Cp\q8^ph26\I2J3Hpa^t7I_I`NEY3^qnouG/eJ\(2O-#?fF2HqeP40PL?[`rHc\8F&$%nWe5Nj!)L56nIk4M19"*Z)pY\b3+2:pabp%f]gfI+1fDH^g$39XMK<8c+#ZgCU1r9rZ0k36>$W&3:CVDpgd)/,-7GTR!_&8?cV;E%flZ(2RA[k/#3TN9:)5f:bFFVnN_=jkSK2pmjgqD;IO34L*19T7VruiGMngd0)_^IM]Dh0i\9>KfX@8MbYNB&U[FoqHd^XI`$hd,G%s5D-Y/k_O\/'jl-QtaS`<e__@39V_Io>3T-DZVauHAtCa(G,91WAZ!"D.Ht#.Ij:fT>HoPqUqs*mtTE1I*gHZ0^[4RPA*cR,m\mE%m5D/LAOao^;]R48]P3Xu=BWPeMC<uGdN+\=\3QEmM(LW(PM&_.b]VWSHt?$iX`[>R>giim.$Q8;oQE<U^A2Pofp/\F]@p3=GpRsG%@b%)kfgQK8%Z2XL5SG''FFkI/JIa"36'd$(.81;(!Y6"KV_,Kdd8`OmD'Ek$(B%?Y@SOas?0%`FSLuJ'Bc6`Nihq&\/ToRa<NFeQ%9AS7MO\K)hN4h.AgChgaEG3Ije\QfpDCrD=kfA$Nc9$)mk.NeIkKotKT+8Oqo]sl16f3p:47r!g_qRNrm5MTHSt>_'kj<r9Q[+o.%SN_fRa74\JKtcHoqg[f1m\.uD\_qm%+(Om`U%Ve9qM!e^"qg8D6k:42MhF<o"&T]*3hf4QIjfcP5V=[CZ^(Sp=UWXB9P<U!f`]f>%^fhW9>/IEl_%s$\<c.GBKG#,8aTuVNEdf'"La^Ga^_%d/&n-Fr@`]N*Me]Jn%;5h%$.Co;//`+5:]YerCTuk@UC.Z@+G@Qf\<2#U%P4E)C`6>Ps@)P&h'J<((OL\24Yf2/20d-)F,48[VHcnP:2>u_s7!W!D]#1`>nu,W_R`hn9O5&J$qd]hOWJeL5:%,TteR&.l(MoXY%M8+P0CQ`fW@V]3XF77'[R)YDnNJF^I\hN^JXuT&9V6O?6#$d?,Z[TCVB0pXA,2U^:4PH/m)tdn(*fPJW#^psYUOdj#d#TOQOWkoB%%&?AQ7:;2WKQnI^77'm',Xk'E*g.Wi=TXJVYXemdC=%fjN'qJ-U*C6l@>#n!5SAW>,#BI[M1?lRQ[$:K2$P9PJsk-.@7mR#-NotG%GXCm+!@S)E&;WY,$3;TPa).);HJ/%C$H9\b'[LO3=]l!$[3hWu"LKq&47pFtQCqE1krc&4/\nb0+^87)<e>4_n$(uMASlgqNGpa0%Xq]tiENVG5h?qaId@?$UW"jT?Bm(\o')SfdW>Cf)o2<'dXgcjh06h>HK.Hogea_ghG\op&jFXeg$C3b_M_YZl/!_L'"nO)Lg<NeV%_k?7SYsXg'Z#RVk-6;l4"FFXOG7qgO%AsVF<^64A!oTAMZ^mt/`m,IG;:Z<Z:IF&SW0\L21^or[_UD>kpX8V_*M`^Up=)&)gi1eq%Zdo*eZ@F#Rd=_Gn6-F8kQ='u8%kbg5;EleM&lLR&"lqX0askiq`iaZ]YOdN]Q66XiMEL6:m(M;12.Z(_RT9oX=d-C?ZG>:CJ\-h8%aC1tgCM.M@%^9'_!K6?HJAkoh=lAXlpgGg0Fp&pk&B$[^Q6i%Q]WD8Id05K2@-rnu]*V(t=<]ME"=N?b4(7VpNlQjs,Gupe*l9%Z%]];2a:18Gu(g0%,G0Kd$(e$$ra:-=lDVk\H`4.3F9_kN[`BJpbUhnht*#E#,`F`3.8NFh&AX+68NoB&H<#+F+=?];7??IW.oYT2L%=k/mQN?N8nd<SG0n?O+qFrZcnlq5f!l!<<uHI%aGe(*)!<PbJj/$"SW1YmM9hBIMoV+Q%6>[kl*cm>8H0;-KJ/b'jp+'Buhq9AO&%_mA%dkXc\kmiW+VcQW'D"@%\"k7IP2JtGF"EsR4)_9X;"3<VR%i9([L*.jeMn8eka%`-I7pc/IA\$<d$+'RIt#)D."&H!N"T0r*h%#_!9"cQW)Z,mo+$Z8;CbjRfCV2i[RFH+XqejJb)%a\YH*\IKcF)laboY,3VEF$\r0-KP^87FAeSY&c!g^7A*hOJ70.Cmn<kdltoR%:d@WM!DBSj-@rtg:ag1t[48#a)oVtt0'1k:4t*ir>>`*tY3sm1h%k9SMu:&Ee(E=d%rRL?2s8/b$g4(jXM]s#E%lWi+(q$TZa7T2%UN1H0c_%&eaDQJe^&)VlG5K2Ah.P3CoPhC+jGRiA18?P!>\T]\r^h'=im]MffY)rT,P0'C!f.GF9MqYkF;5Ck'LYSk\S`KEFUWXf%V=8<HHQgd7>QM&]N$Uc'/D*_&lC2OYBCC75STc/k>>\BaYcgCX\Fpg8ATth\Ct.:H;)`%G>dtp%?KuZV_=V$[AqE-gB*!+nrOY\@%KWop6+I_1&]^H3WcUHp$<Z&QG8k`kkI:8P2XAp]]@BCB\k)73Sj^Q#ucdJ7:I+@30$.gG-dr=\$f:H4blTZl)Ra2d(>Gll%K$*3.%b:HtS*_<^^f\*TU=X2)RI?#i]3R\OPoJY.ek&0ZEM@b0E8SKUA>\##=XrBg'6:n+V6)\BUW(&KinqXQs;G_cK5p^*8dOJ'rZOG?X%KjV7[9,BfC3pP;B/cTPi#V;&hW*R0,#o9a2[P6DucNpRR_)"I0`=8sIMoG&0_%9b-,8-TX?$3BQaVXQ2iq4eq/O1]8$0:dcMIe<U%>RLY0h3hm2;9nujZ]:ifNnS&`AW)_t(+,\s-_U\Ieh7c?3uP.V+Y@IZ]g]oD]'EZoaXaW;fHM3b3L?.+bT*\'22lD/39p+^$X,Hc%gTiQY;P\`(%p/?k\?].9,&XAVK5e:sIkYW%VBBSgQ)7jg=ctXq$.\,*+gfhK?Hm[.XXI$;)]8/gpLo!Z,8SGZ@fo7:nO"."3AepL%f>2Eo"qtQ4'K[+9?Lh&aES-@*<G,PBIM0?rZKoD<P51I1SG,Lh?d1"0at%$*P,>5R.iK2(mo/IP.aE5gIGV*R^&6.g!M52<W7RdU%O(+U_H-l"7m>/++*%UlV!:%On[s"p:TQ]p@7NR<0"Gs#GpVf`$"9>;5!*G8F2U_mY+an=5""8m!b#VoH&M4H:.3k]M)sp'"$2?#\%oMi;ZUS_=eQq%Sf.CG2T7#FHss"[:G/kgra`Dg#;m_>ON5C`ARHl48Y)^^"S7L/q$Tq66E^(WkJKN"KVYfgM\p;e*:Dn3l]\9ddC%:$Kj:c[!L1D^?6_&\rC?OC7=&n6d``RhiSn71it8.9a:-;ZmSO[JBlA\f1J+/,f@NM2;/>MtF4Ed#0?VZJ-rakM5Wpm[a%Ec/MJp%D#;0qf=1]n;OoE7ZHE)hPAFDN[;D<iiJ=@FfsDchemYceS+^.jDFb5F<^<FhknLCL.F$Q@&jmo+dGs("j0cJqFAUdU+2l:4S5Cmr%TgS1J=VSI49IWbq+.$-)*Z*EmSp,.b]j;9Cfa>d/e+I!I!'0'HaLR[$[k;:(!&;b;OR]&sVK8^+*,ZaXj/eNp(?&a(O<ki<ntA1'%bW%@$ab1rbRTub#Ip$-E'Akpa4[RV7ib#YiBY"55m.L]Z2aES_*hhh1e#ZEF4"OC^rPpat@,UlK.jZPS;A(-ZKVNn#0_5S_]:>cW%onb1\P$.!)euWdgOp`^WD,GVQ,@e;8I;QIj")0E"$\#YP$$R*AD&G8aWn1.I@uM:XYu?Zf3O\_!ih2UKI`^I_d:Qo^0_e80[[p;e%#LXRG7Br=mIj]t4//VS6K>7U._b;>+6J!ktei-@dP[`%:.>rpTQD!Rtjgr>6GPbZK-[DoY[6K.PBc*T9lGgU$chm7)9R\C4lS?R^%2(kA'/mL8>)5g*K2$qm!YMF0b7H>UX+7as-Gm#=,JIkNm_?O)Dl)lUZfGII3]W^f3\-u`C0rtS\=3'Pa9[YS]1qm=[/c:,j4R4C%%>uUQJ8WqZTr'H1(5YHEpXRuUX"DMe'SYQ/V&k:Z_<r-;&>hN$)]h?I[;9RDhmd8f`4h#F_%aNY_]M!IOb'ImYk+<Cc24N@'F.9RY%Vmc>6fVM_\S#V/riVX0kYWK1q4i?DUp871Mh:S.[^7<rC=cuaPm`E"8$I/%[NnrndT$9+OBk&M+F5IREAeDMeO98]@$Ti<]NSQ@p%]*rLo?>%*gNn1Vjf$OdLZ^Qkg2Q=fk7WY#WBelMXbjn%])Qd\6,.rZ#r1Us#_/4"-"-7KpD"+i^o6b4jBQ3he<6Z,uQZg'b#$WOF%QLbI#&%PRNs)Ddi8nUW9N%N,W,Ssm[V`YT#"cKQiY,cl5jN32'6$Id9CY]5&%&M$,@>_^cpoks!V4GB,,[7+-UXG]odZnOWicBKM%Y<:"=6:?a\/$leAb'%*&4/&sN9UR/(0$fgJcAGek*ZJ"Hg.>!*XHY#nWN\pq)HQ*31m]AVr%u$n3T%qPVcg+cjJMO;cDbYkFjuCr%UcJ'4-=&]\QFcc32mj^ZX?9m`4hN5aiK_a`QLiYkU%l3>R7AO^60j[Wm0+lt'C<;(:0bh8W_Ke[X(pmCeXBiGCSTJ:(%hE<lYPPS%eJ<UBD/gT0An'&O+qu]0_:o#3SS2VBr,O(tP4cUZjB@Ysf*"[NKigo*`nA@+k-3.4"a;k%PU;RA6rR"E1L_i_X:kS.5gTW<D.>+/%B1]=nN5:gj]W;ks._lEX0*7+k_,8<eB`Ord<C,:>@oAu,%@%PW_n\q]&CZH'7Xui&VG5u*Kk^mp#p4]Ck.YnAKZ\:nU2Db8q#^G9%'e$V72g0&SCr+t4(f+6;9kKA*[PX/o&"Lk0`Xn"B=c@MFT$06i#Ku&IE[a*W4$hm%MnXMoq9AMB!+hH=Pj.qf-Z`q:kEGIB4&CG=%A`bS+FqVU51k<PJ!)s*+SHP%O!)+/[PWK>9ZK1q1%f-9u"9'#&a'_,$qSNQK2\77G2\!Ll68kmI<rKUr<g.@UH=SOaN&Bp`]nB9m%g!Z'&[n+ik)ZT.f]@#a8/j-e/Fi"b!:2R'lYi/#p[cEZB4Ie-VQpZKnK53EUnK?u2>FJ.W;A:>tK99)Q&J!hT6)nUofWVfI:2TY)%4Y&\@[BA,79'%Kog8]0SckXiLXhmVU5Oh(uBP/oY&lY?<E[E=aXgaMXH_f&uO1AjUIa#?j7%:<"baJ+DlAYZ'$*Npu<]_1kZ.,/!%ms)K,abd-E<i)<JhCCsc`^;4YE^D)'@rGFZkF%td]uWKlS`V(8**Cd;bb-sQ4rD]B=@.(JZEBDP&.Z<emGZ/2qdk6D>5m%[_mK>[%$eCgM26#ksY8e0>E5?d3pqfJ0M/.t7#"V]Y;4CW]5dXN\1G,>h@_!qN]C\05=n3`#D@C``BJA5-ZkhEV(0=JpeEsGlA1KkT;CL69%@3"ZYl]pqA_Ou-Uq!P5;:<Pt)XZ*-_7(YI]lZc1iV_jIrLp8$seaA-4Fj3j_EHA$*loO6/4E6h4l$2>>4n[;=f(7n4+gA;l'"_pp%X,^=3k'Tu]2`kGsZGmSQ&f7Hk:e:g6)!<B>XY=*bOGCF\:(&GQ@\q<23SdXcc3Zs#1=H)\JY0jsSWR[7N9mo`,eA3aI)Hn*4<K#A%?=Z5\c>.$M1e"t0g-/EM/,<FJY.-r&;U8!k?\MiZq'.>4'RuOXT@=b-E=4.7Fdbp6OYQ6a&4Hn28*SfHG<t_u>mV([j5-jg'ch02%(L1l2RXi\DC9TO3'#@rD0s8+.k>:ceQG*Jf?GO-3ZB`tM1o_P[p;tXgSg$68X4ro]EP9r6]s8V.?)<euH9U7k0BFT3p;55gF=*8K%"kk\M[Z.E`I=S=qnUX+_k](P9fei<`)8iZTb\RHc6VSnU@JWa#4N&ml2&2+,mK$6)pVsZ=h>]h07-?R9h9<6^B4U%JnbEjYibH]0%)0ZOL7PX[m6>Mm3D-PsKEBUo*fkr^Gde'%5SpjokqBE3.lWh]-oaW6#W>Y=@$V"]#^5g\638u,DI?c\F,@tj0B\a=]?3D=QM>+IF%BZF19r$be5MrHo.,!QqM4K%.Z6[Oe`VgKYg*W:g$lE.rJfj'hh=q\>j?DL_+V>Vhe51uI6^.+o&`@`J\0Jm.C.H[i^kF/^g,`65'%A#Le=0=j*=300\sFqf3#/5?&"=EB5j)V&F,=(Vicdjuu;*'_s6>-l,E^>"?,dP;s$VeXq@B3WDhZ_T;G/a?Jm,2V8iD:\HcG7:XV%qN/kj\l*USLo`E3YTVB@O;Zm5KJHc#?Ir&sYWKNNehPB0''pC"0jL;Z8+9*YTR^J$Q"\b[pui5MoLp`A*@"f,hHTSu5g=*?a*_b:%6H_EWEFIL9;8KH@X\7DS\jCj7jsSoF=PDK,[>OX3\(Yh)K/MFJfXo-ZrZ."kW[)^?66Y_KoXNfG04sNm<YPZ$n/^?D41`=RFGK>K%%c>YS^8!c;7sF`gmdM7QiB+XLE1l/O\ncUV*S9d$h:m"qn/^>O^l$$RFGK>K%c>YS^8!c;8,(jt\C0hP*S,Rof4Hj!Hq/DUNpcBW%h)<\8Hq/DUNpcBWh;LH,p\-b\VXlkM`d]<XPWrIcq,i$HLkoSU(o1`!FN6;*I6nO!B@]rEVlRs9>,!-='O\7$('c6Zn@(VM'T`%X%KH/nE'r'hl=\>66Q,QWN\`7-7&k%RG:``Bn9DY3H6;:r<0o*%M5b07/V$M4U`r<gc8S)rHH$@```iaN.L[Op^S:0C@Mo0[YjeB&P%#q\kHlH3REp;n*#2HmmXZ*6VI+jj\fX9[q,YPGObB9$skk:q";$KYm=LgJ:em8t?t)qfTu:(HEfqe''=1<FT@*$t#80\t`f^c:#1%:Ui=YUqn13=X364m]+A?Tfbn6O>&1qF$c[l&Jb\7.QLSmR35/>=nCXJaT<+-R^Y0g#0;s"hn8ljpuL-I#L8Wh=r)Cpb;"PonWRj\%].Y#W!=ic6JVYV_*6W@^)P<^.SR'mj03k#RR*G*)k"0+d/EfeW8bFRL9%,N`IfA@s]q6Fj1"\E.Tg'T\OH3&1?fLKts,1#KSL4Df%\u&KW,:=aWD777VRC@UUZrVt8P:a"bp(gdo8]d`&H'KthH02k0(H'f>;eE:MXKn[kCH?D,1lNJ;-b&fT::mG"FeSV,BJ0+r:c9,T%pWdc.b@m"Ye6rDi$SA$#+!mO8I'T$':Kt`]Rlq5Cal_r]hRq=^3a%6oe,G55@eV^iVorVrjt*.%i_):&TU(o.dq#/R)bfU:*A+LK%]$-i8_D05lX1$]X_'iI0qUt>AIbM1ngPc`t_MaYLDGtcd6d2l(_@5*a'=^\oo^JA+G+IDN'*Rp9NOI(XUF#_!Abm-Jf4'87R6aKi%Rr"4`e&/ucA^Dte@MVJBK>j!r*J[a;&n9]mC$gk\YoVQRhraeW>bA!=+lUCF^UV:#+r%A;Kl.PSW=l7"$R?F8i9Df`G1%;ToWXPk%WRGWb9&]acZ]s`M9<%@UUhTb*C"LCJ,B2O?QR0NCH^$PFr4$WGg@g!YZ2^2urG"O(g(d+[j&G&JZ#YajZu/+-:Y^%U(4FquU)*Z8%i5.3*/&5cK=&F>"r'K1BFV[iXHkCMWlN=eXq-opOQoD<2%W*9J9`qAW9A753a=FuDDN$R*D<#pKT%Jc#fJ^n7:3ST\"BNis#d!tR%YZ;q%/31TrHBZW/8qLkAn$tr$55A/fc4[kL-rqd:=tPM0I8Gh'>BIhKFguT5f4=m'_@LDgJq]qll]?0LXLP2=8JDQ]\`IG^O=aT&%e.uAufR&GuXKoi3hF1)NEhVMSB+(#N2_9#TjRs4%5/Z)Vh5mlkm:DQ:S0lj*j4\9U=nn]\Om=1s4;2h#%0fX,Y@^)2)J4mY==mg$%7s9JYhCqT+#"c]<cU)Ss)>puqRZSNK>cAukdA2S<ZZpIkdGb=:4j8M$=Bt5Tr\<A(^/GtCIX?i'$^JJ:mI,3-n9@Zn>[/L9$U63@%ZGUFPHXUg>&hn>(;l&*H/CtrbX.@42QQL-PUG2$!V!%Q[BM5P1K=IkWCTf79"!p[G%eTl_r?3/l;#E241*f3-)'R2'AGuu$]3%R2%O4."tE%46#%7uFF("+?Q#=u.N-kD+I-7EFLj)grG2kCLN6##lmV,'X&&>]UT@k[Tup8uMGB=IgXp7dcKfr`#DNPjf;c8<5@RGb&2%md4nm:)[\hVNoR:r*Et&AS"R.U]\88V:n8P[(.E[FJRM16I#9>.b@-n<phS#LapGm'CK`+K_b!m^I('mNR(7OGr[W5IceUK7ilE;%Cs!#r,[8V;KA6(`a`PXs*PQ:fkWN5Br>>N_!e$:VaELbFb\&f^-14"BOCX79ES<HZ5)Vtg[6oFY^:ZmsmBG]hH^F#kLpeJ?.-Ul1%dj[[WVjoc<5Gih+8`+79pMEk*IJW^9=3S8h^fr8G=[tN&G;=Y=![k]u(,lkQW+cr!nrJ,urct3k5M=HuI@[cqBOF]dQOW!$,l6+M%9Yd2e\'<I`b7ZpQ^*I(7(p"C\C8!YT-2(`"VWNlS7;,Zi_om(ZVI,[J*e3;MF:?ju@%G-uduC);P]u1OE)Vau<`Kdu>OT+F5.FXG%W#dsO8R"dSeSQA)&)S2+p(c4.XU5c=.@X-Q5Lm^9ep6P7YR+BR@1tn#@ub>9UI5r*[uC;on7N2W5MGtMb"p7Yk1<->Hmh!Zn.kQ*%muWXt>YqD/=cnSQ=4Ts7h#>GWX'0UM1`T*Q1lY-eY-N1-5@i4K%VO&_%';9,bs/h"CYH9FEb56"4,p:Y?/@o6nCAN9kN^OMfo)*8%mZQnhP+ljY$#S/0l9ek!+@9h.'Af[IbtGGe'6_X`#d^F^=h(jT\Q*>r?q=Zf+e&X+&X@gbEkUY%8KK!:HN3"&_on88l]^of%iutt%.K)^/rcA!38\b)jnG7HSGn-!PqK-oQ$tKuL5YAF5R.Q9:4Yi8mTbJoA]W`W=Budc<&`%]nUKIJBnqI,,fAXbW#3+ej4aM&=X`*Bt%@o*-c,PYWHc*N)Ac&N9aep^\aa:BB:[tgc#s0`I-J^G/+D`RY6r`^5N;5s?Q;U%A;TA42Dn!'a3<mY)VX><h[A>[I=c[7r@lD`[T%iVSNr[Iq&0l5F#j'&(*M!e2^^k!ogpoKQ!)$5g=RQ1(*j@oNY7-kq%R:NCbtlFKSZ=D8N*"95/K)^Kf`8*CJp?Al`t]9a/BWRY,4%V/M$Q(]UW$eJPg5`sk^qWLG.@q[Q)d%KpJLI^pSLFkXQOKfHtMF*"4C)tV;FORP3UT<VG"frbn8%]J1!jOeS.I#DQ9cI!PK8`p@8%oZMRIc),$7nerFdM5Voel$cNh+rW9RAu-D[mJ/&k*9Oj`&05aOmAR7!Dn[44$Xgg6BZWoDP>s=As4cOQK#6"iFL&S*B+%aXrp:_S%6oM>1'+%AM'd'QC?GsK^4Pn%030q.mE,4^Y!pV4nV8_h7h0[#&XDN%bT*.UD4)Tp2iKZ<\Gf;m_b'F!6F)9F]FpTTQ280rq`t_=?%7LkYhT!dIYdT=8&8EW)H4\sT\l"B6@_Zjh5Y5sbD:TU!X(?QWU2WHhOb/V*Sm,?],YJl>W[aD=WQ#9R_G`5#/R0R_mlX(IQhD],t%H2jh7+-3Se#Hg\R=Bt)s@nU2Gc.LRSDJk<@*uAg!Uk'/o/ep;'=RN`[XlD>Do\%\kkm]H5LQa*mWjt=!U!e)M&/RV>)=<]gW`g>]%\n(1Fbn(dg7lP"8l#9%XGZn*8)D!)@=.%"+jV?2iYN1ejqRs]uW;#8"_gKtM#JreV]>u7o'A#+X6M"K_FbA6*[EUk%fHJL6.*JDc%Z3d!`BQ1&R;duF=I0a"%mDRe,)A>(X)qkp)9SBk8m:)Y>-L9Bc?$iGA89P<g/rB$ej$+ug8VmEPA%t<tk$F5INp!d-;<r"8$VW-+%\nL-cXMdEO.]45m6B;LYo2s1,6^?Z#eg<KeSe(LfXQ1C]IS#%d=EMm#<rX]s0&jZ)D4YlRr:DsQ_`V17Bd'Te&Tq9+NtWPbGZC+/%j9OVC:0ORc2>=,:P"t]D._b1\#0YMm4!`W>F5k_mO]GUGO0`4AM<T,J/Mc+o\_KX>Ye!`\j&A;l'@s.i]+'L$k&+^\`3s>5Fui!i%\7j>P%?pLuM&[*FFI(:bPiO=5fl""0"c9BAbIVgb6`%2(?$`B];;2:BC.'W&YV"S!Z-b<l+tFoCgf`4Z-[G">[.RHqPOPi5c5^^S%8F2oo1c2$?bXf]e(JUJak\*cKo?D*4^l5tu@tlFMKn_S`c/eHXlD_-(:g2u;bjs-kr;G^JlisTs_U4?]G]_t3$).Fp%E+U9i$X:%%a#F1,;cr@q:<<_m1<`(a$;XD9=[3IVSGV`&J3Z(4S1(Egq<VHW8$[3#Jg_h7c+fFoO3!$,(H#QVA6<^r@s+BGIM:$jp:ik["Sfn7%U8i"PXTLS=]0+c@g14Y9YCmBa]6.s)P<c*Bq/+i:SO%2#KajTWU!%#M/[k`:?V*YHb]NRD.!/NNA,$jr\O^p!H\oj)W,a*Ib&Y\6%"FG`V#$hNZ3nU6,DEr!^j/C=:jd53u\q]"rfn1_rXanACAC1<uB0o(0M94%%!lW5B,=E@t'>k_S^SguhW*u+c_GknqS4G.^[bf<c%.a,(]g@':u3/2&S_bOB>,%HR`QDc@SRU>6t]GMqg)0-tZ>5>]XI3aPc/EhLUG#cXp[,DL>'IDIegdFG6Y/$b^%)30Ph\3]K@:F+>%;:@Akf.VtcBd<?j)-U@e#3o)i758rG)^rPh/*1*<W!DG:<OBQ%s6Z_EDTZNe8C"?!93oWP[^=I--1.\;OI$[OGou%@8MR+9pVKVe%_Y:Is"q!c@j@uR2Vu_Tu6HFsT0emn#JQs'9nh?b;?1<S"5Zm*Q5?pq;"',Jq,$L8\(.V2o(</bgPI:^XF4gk-7i-Pkkpj6Q(7J8a%Dd:pAL7d)e#'=q"<&0b#:uZ,N9%e9NCp2!GQ12Dg_YuB7+WFZf+sia7Kb.6!)Q6()<k3$cR+]W=8?*$3j+%EEb-29f9AlfmH]WfS%JLKak1',KR>[,0ABP0XF<EUT"+JO'&WSPE`]B.]/>,I$7)d<K(<*i&LM@F7PiWdd2R9T]./"YLQ?D`96AAULBL.!gU<f?0.9g]@,%=OLI.721=i2or^j)m*L3.P3U%p&MD#AI=CH_?dQO>\h;1lsd#)U\&pC1Z2eU/TGF/',%RLi@-"iU>iR4$uhQ!m@d2,$(tbg74(RH%+Gd-T6,;3[&?/mq6(4**^hU>L_BQNcoDso47!Y?m4"u@sOf=TPRSK=p17cl<#]qY])#R\;rYI4giIsaXS<M,["tC85_T]EH!4g`T%4L!\5aie8u)KgSs%WJ3ABJFU8M=Lc5bp,SrfL__RjOPFqr"t7R_WGr#8-aG^G)V]glmgF&#3<".XY"0B15g5Sd/[n]a^JnR2lMiI%4g0Jpe7>%JG\SB-/oDJaeqs^PK%mb=);K_9$Z_ENQ%PFR7<1$m/T@D`6li#'nI6U$GL?I@.Glk!>q5?fphiUVhV+X5O;1;WffIgY%+B;Oh])m,XbW&'^O9k0NC"IpSAtA:)YZFXs/)CT8`pU3m.<+)W$9WgA[b>MX\j2jK#)q\%Y>*AY/0^/]SBm'2HL(LaJoh<B)es]U%:3@'7RgsbQp7&V<]hud&1VNt!LX'u/Q%J2_Gnf/=jBK#nC*6a#G_1h1O"qE+*e'DM=V`?UXHbJpd?ZA(!ts;>KYrUZ6-8]A3klPI%Ke]l@<!^h.]eu:d5ZUX"]+kNXAAZODE>)>LYmI/pj5!,1FYK1NFs5OQR@7$!?jk*7j'/d`b1J=c:,(cd%0GrKKl7]Hn<=k?8s6qO%]aJ$J5oElq[oXK`S5,[5_V#M]1ds$t;j.'XBfmTTOOL)nr8]nX%;B&m)C<PVj[NER6!8KW<Z6e"MJ[D&;?^A0lT5Z1qZV",Ka+Ul%:+5@,@J3$;J1ZEX^g@FE)CHK:TP-6G2+od?S+"V@A1g\NnXX\BaQYZ/Wo04X:fKRU^_ZhtO)bdDlj'-Fb1aA(QpN<60@G^@GU%Kh%7#5:U=&kY>WY/$?&6`YJJ3U.WJH!P*0f;e+KO$)?SJ;=QR(4_%jdi8SO!]MlE<n*F7*T<X:;)S?$d6[b+,Wt)\/'/>KA%RZ9OUqA%-T+^)&($FHK>[hEOkB8*XstdL<n7ZFT#.O$J$5"EK@si]P"'SZF13W^k[$Z2%HHj,+Lu5!BN8nB^=VKkHTc.#;9Ll)WedCQa@X=k%b>k.WOE=L.fJI_'c[s0rB+]mCNC[1?ldg>U92DTtX_)$V!t.)s,!B(ch"5kD6nH3u.Ma6-:0A>#]2Aa@`mQJdgF2j?TN&`WU/idJ%$YG^[E<?D*:0pC0!87Ra3)=Z+/gM*Q+jU8VoBsc;ZHuACKbI$Gj^e?RVLh2iq[6ur:3jQE=:f)#pH7`O+J?EmM8VOH]r^4M_6cT\%lrjOOLe3K@==tum[][_'U^#IV!MTVX==0nUk6o?4L4kne:<nbY1uLqJnqC)+J*CCogdX[IfN@!#Y$hL@k\anP*CjSAAc=0sep._2%c*gd-`Fr/ZJ0()0D3C@Aidkh`Cm$7a`TL7i!L$0AVjd[CBS6[2C[2BBX'dB@W8+@Xc_n/V@j_^b>.CeI:Y3.qJ+l?FTVuG5=dl*o%"Ul/?Ps?%efTCqW%A4j_7(43h,^D>5-Ta!!_odkdomq?5JfHXJ?oG;5JJ\t=A&S^BEfaefhOo-OM&gBM!:o1NbeRS(hBEP*-Wu)K%LWD2M?0Yge-A%"=%-ttUUHoUT-s6X1OWYkir?J)jN7%.VNg52UU!_(\(cN&J@H2)UqN5BTb`6V/M=S"eeBF58c-2UYXnK8=ag=H>%*j@5u=VQ4'fSNqrZdiD#i<"[5q+`Mc`mqJ3>R"b9&f]P\Q(mKF1_Zo>FK.06a<N\nF_tgH,#O3%ib+@0/heh+@IeD7i_'OS^lW4A%eIA9"a9K:#j^]H%k,ujWUS'F'2&H%p_0a(F+]tD["'C,/Q!d'PFu!>,3:uRNH-9-61,@#mIP88Ffj17O,PP!\!eeg/D8:d'<J21q%)$"$m=A`EoY/FJ&@&0f>oP:4'kSp1TTpuUAGXZMH`ebJ1.c?1RCdV;?j?*rT>:f7T+Ou>SXK+`i.RPgI&AcpVM1nL=,1p.G/Uk3a%>oM3Pa0`t'YB)327BO\Ha#T?/-lLO`BEj=k;ZY8I13iIY[K8Pkf`O]3-IE;[fK%q24+SE8`t=K0<e6c#QA"NHd0*8][36.J@*SPT%!GWa4HYj<9`->jQ`hI^9Zj`d(e@9F]n.`5[_q*"B)+p5t;r6IZ4=+Y$!r7k0>$3/CC%0W6*,Xj_TFjH_(e!Gt5RpV2K!-,8MFF#_%%e`GS:>bf=$auBU_]6[D(<E?Th_%=i1l.iV9#)2fS)?9\3WRm1.#7jcGG*`Pft/rSK_?26R?3%&oKE?jC[&#eW3Y4G.E#I'bKe"_%U1Jqe4kBdp)gsNC7pg[coZ8aEIe#eD^%:8R89%Y*d8MdWH;l^fNkGOT(1q`Kb<#ba8V(P6(q+m$.l@5^#eihnBTg'F@(^eZ)d,Fd%NL[0cDY-XOPW$lD9VF>tG7VfMBF_@4OFi<G8gCU<[,P]4i(ceN3KZrQ"Z?]'*YIp8X[K6eY'%J81D`0+MUM(O[8u'90[IH.m!E0g%E^O;-Eg#iB9A_M7%BurLh5QYMg_&4IOoph@U#b'.)]i3i0[8duH()lIdGe9Df$4#9ibfk?a!,EbM'Yq73)5h]-$,h%2h52`gfaRO%$8!S#?HBpAf`@fr>fls8L:\foV51F?#e=4dQSN"+GOe/jKb=tn2D>_B4848R8nu/oYe\9)!f!7]=%WQiLbM<_!D*u$2.\DLU8?,Q%3!hbQm"o$n;[79UV#d3e8.E?UVjTh8)+2Y*j/C7Z=;Nu==Bub.iu$Z&.pd6<Gb]G5N'jM.6jo?;*Y0VBAsb<XeuCm;'#WHd0k?%@%;%nCD93u\C$jpAh1<Aa[2@MidSjPkj0@X'6I""75(L'p.`R#O0XJ4moU8[1!ElgF@j2;TCjYo&I!2VM;OHh3EFj3>CI3K7CG[4ID%CKM$`!0d,n&u]"(b$b.EjO_pNBYo[?*\G\r\lgfC*pKPF=X-dn>qYNM"\S15Zlcup/H$kGdM",U94Md<KQ\jtqmi`t,.-Yi=b;;3%-INRTis=.f2c,&2dpJEHb6qHDTJk\N^gmtW`(;2J@hDh,BP&H?=k!J8G!q'jaPA_r8HV"mX[gZm=R!>YR`AV\O:JQ-Q(kBb!8D9f%$T$4E.5!5?0GQ6/Tuj+*hA4[<!iB@o>\4t03tn.nTr=+YF=BlF%3879HA6)sOh_Y#Mc0JM>4t.C6-(h7&_Gqq+1+n6%=nIVLmTY(%"JZ/0Fcj+m,Ol",X:HG$5f15h,]hs]9*9FeNI/H5"Gp;!^Vn?sE$tA[^N0r)n@;]O!%(,X&\VsqARYa=CY9mY9E>CS)e&l)0Ujh'%U_Sug9:6PA>QeT`lI9S9jBdt4//")$)25ru]$rJ;BH:k=pC_NLdHI6?$Be=Q"N.Y,H1e-VSlhsYKHGfjd]/F2Bi:9g_Q6lYJ.8k6%]7X!2I/\`ajH;o)JW<(L0.d!N#Y'<7oSFK*'W'on6"UK;$e[34AB-A!HZ;'Rm/!7,700%`_tjk-Gfj2ZjX#n9=.,9:cHXf/-)DP>%[833*d%XDr1uOQcGRObh$r!Ik#_ibU4;^Mq,$nNr/-*-pV0'MN2A-Ul^"*m`*XF2.;()l59EU<,T'e3$Yda/8$f+tK%K/^)?q=3s%+kJRjWq\W.A]P:YSTG;+]SM9<6G#-X/4qf*[]>qN#-@::+rJMN4=W)6=^*VA_UK?Ci.LmlnS024QmWR."&Ec*)(.6u@=&+0a7aat%/'[hB8lmc*AGBR874F.Q\I?sf85:24)Xd%r-=bPmaVBk1#?r("5M9m=e3WM);q.LHXNeV`@.K3D23kC/`DA]0Ci(PG[4"?DhBRq!%6_].gqPgH8D[I)YbXJ1W:)Bc^\;=d/CaICteQurfMV)S['PL_jK2PP>NRDi#Q?&&kEZs/0I4>FEL`BOPLU7PY>[(d73JK@%SqSYX%8L1#[ABB8"/i?j1U/c8Ki*Iq2!PCa2#/A8.`ftM;!M;eGPK:09!XkB3ie\e>Ug$$"OGRGf!4frP!&m.u*JoKMUg(A<_)N$*hN!p,%C@-3I[``9#M4*@0Wr]Je+^jGji?"5Rb!fk$k5`RW>p\Coe$GuW-&W(&fGVB&%/U6;5JrE;4@JXpX=N480ra]=%(jIQ!MNbP#(4(U%3KYV,9tBQ=>IF`uW&3C7.^@l(2H4A"LpA]HN$<-S1H($pCF;7nXUPa';QMLU7hMI>UDiSijHGD.ellZdN0=lEY,&O<kQ08mis+/O%_cCP!6nJUfM=u)2%J[a>&Wnj^ei8LD8M@3ajM<opc,'_-A6dV*^?&S$[X;j*M&stf@U[17X>'27RY!Slm%_SU/O_8L#EfG.Q[N<0%%sp(6-pk7o\;\L6r-G!M:/gONn7b=a5!9qa7?)P1c#<@35YZRCNLHr)iK74J',NrT@]r>F2S5#m(UsK(`Xu*+L)HcI=I1C:Y2TZ.%3**6m`%,k=hY79V]*74cQa#.S=bI.pW.gg%"U*\]X2&V\#n<,0A)e,*a[u`YV/-[+PM)j2Z.X47LhOYs$+;6[;;/sZKLANVGp([G%0*CXDCLNr(="6%'#8=Q^GRL#1MOqnTq,l+?2O?^fSAlUh&<Fmnm%fO%#$#>ED?^u?BQY/o-n?R<\*h@Ej:]l*aI]q!&GM^X,\k,N%=6/&(KRq.58mt0Y[5=M_jfKq#)TDi;CiR^]MFJ.\KRqb17.a5IP`jGpR&n_gP'^C><0Z`1r$Im!7%]2ST!(S^pnL8G[&$;GIo;np%Xqm$HSVVA5=1Kl6i]Um.%%'Y*,'o3-<E7[rSBF99n)JOY7)5@I,kEQR`,_c!KanR-^68alZYLq],H`R%[#+"Q=e_L\k;f9WUTNT`%J%D3T1=$>?p)$YL>(u.?=p7TW/:Hoa(]qI1H\Hp[L_CLW+cX3$?nR[!#>FjKCgg<i/_I?CN\(Q2eYjiFR4M;&d&[bgZUuA&`(3rQ%U;P`\7*M2m1k2aa2dg[KHV$;,5l>@/PEqmlbR@LWBqq[rEZKm=POL@3]#hg.ln01bY6N[Z6r=g9e\Xc[d7nMdZ92<%8Q5F+LkY+-%-"@Hb@![DKYZ2*Sd_)e'Nl3()2<'VD"0AaP9^eddV%*QhjUMd:(*_6YZ+2PJkl`j4FW6/#F!=2#qFjO)Q@`]+?qW5qOdqbHgX5^[%U+W8I$q6PHHt?oBdY%gPn=Es@ZJpDVFg*tkY!GJA[)bGNlB,2lP38@i64I&UNguB8dBq8:UQR3A&13P]6m'JmqAq3Q6K/hO-gF<I%*Y>@p-ZaG]N'ArY&lt0=>PCb%bfsJleC$3NT/&=E\W&o1?Q)2u:>1]9V^Mc96`%^@EM[c9+\0k%!knI0b2i=I/DPlNY;A=R^'A(6%lM*IW+DTW5`mBkBL@K&<J4a:/:]gp:G9@:PC3`l\lCcjUbmgN/'%)NDnRU#JRQYR?,%5$N)%HjZ.>C1D3G&EM=LiOGEiZU1.:>LC%M.@W_!"BC9]P_^;2W0/kW'e$$&_7P^1DLoHiiOHS'i"7V@2ZS[aFik]eg`ecJeFb6,pEOFluaPfW>+[)#Vmt3G0%$'nNgnDo=US"%jJ[.1ZPB%VDGFUd^k&_`]ZbT).6p1/Rj*"CLre5A\*(VA/aOSl#i`As0u<r03Kf3t*'H*efVD'@,(%p!%kJi[.4=-.N&p_[L1tcR%5-#ZN@Buh5cSF"OP;!r=a_EL^[F*V_1/;57R`Yt4q=1Hr\ZAr`@LeE+O^:![d2'RQ#j*7k7;rP7ASM84lKI#l3cRG85$Hmdg57Ef%o3)Mm?g!ruBPiICU9%D&KTI2?'>lsu@NkW<P$:((g@RSG8.?t@]9_-Q#p/_q56;&=%,4g:`51rg>V'V4M[gGC'(;ollpI@0,hdbZ%E%8(>=(NFP(g4TP,_r%822Ago9\G]&L<YG%>dqB(`iZ*bF1=PT1\`V(N6quJ\VVU%jV3eY-K]D:N"0p9R4rc`P`=o*6,'gid99^T%T_[4VX_W`EiN5CIC3CFE9c4pjD\97Q!uM\>FJ[*j&+;PeC;Ljem=f@MZjeF&l%pTlfH(9dYEH]p[-VZU41S>o-P0Q)Uo>PDNPsbU%GqDAm+>P?LhQfnY9Hm(SG`2lO_Sl;tYVb:4F0"!%"DY&-UP+VWP$@Xme]]![5qS73X2O_7(bPr#jA&#%X%H2qZ-T?L9:>!##$FGD%;7KdA*0%lt*A-[nC&e@*ig%$j=(rh`:OHgS,2lgIR#Kb,/0emj(J4!t$-lr]Q$<ImiMW]Q"'on*E!'Yt(8@H&'uPuH>*)$cF#n5,%;p1:Lr43Jd??$+^!@68T9EG7-2OBe]B;E+HU:9Din;,DLA@Al*/-=3%(WMWAiY*bT!%LJ-D,,%-cZ^t%qc.ME+9J]GE,09]ls.`s%S:Rae5acFd*,NEJ'O1Fb-gWVr)R4Y4>DU?[70iCp.Kns;VI@(L"lab^AWo`2&u#?iilCSJ]n#jbOsPpE]SE,V4=hT%Tb3BoiJ/?4%)*<sG"NsHHQR_%e;5`tSZ?Wlc=B!i]?W70_&nA*8]FGl[$"k[.a/L;fB/(i4H5`'Cmskkm/W"ti2]%RrYubL8"LARbN6hG;V;h'm%J@$c1,(Eus(r42CQ98KHGp9HO(qV@F!epOj=.l5W)P/KL[mg6AL9tLdpkiLc1C?=;iQ3)5oGeqkLcCe&Gh>8:Kdo"=cX?9hoBlZ%%eE0&YaRfB:3cuS95T,M'7E(sf(j@p.HiDd)@W^@T=Bdm?/k/[VG`jX)."j7;a*m)@A5%9]$MehTA:OY[oXAW;oQ3OL9CrYaaV0b4%L86-=_Gcj):s8E63%0S./V9g^/0:IQfH:bM\5k<mL["3BcM$QN%r4X;'kO8<YE!RgNL#)e:mpBa.`"W^b5-bt]Tk2dlk?.s.Z#2h%=_kQL;?O!1G.J"m&<#cjj;+`Qas/XR.gBUIX<`5!?t9Y%N)H]!I#J3j]i:?Z!'F_PCDQVTd$I#kAUeCba?D>SWHmk;)$?Ttj3@GK%RF&+>"C/:@=AD-TaTakcX=t&/)`0)fCcB-b<<2>:*aG'!;s+9-=U\2_nQ+F"Y2%/E',(Pj"f:hLaO%7;U/FkM)5[^,TTXO'2Tm]Q%8t.N=.e-49Q1s_s>BZU?k]BYNg!Xape0OJ_LsF,:1X,6)/9rC=qRiq@>QocN(69_%,8Lb,FP(7,H#)qYX:7jiLB&>Q>1`<t9kLq#%Sh4Cp@;om&Y`']heg:U.Um:f)It9P9.eY"Tg+*Kt>Khd2mO]V$6KU*dml$@!L+Qp+(hp\9?_=16=CP)\GX>G('UrMSMas<?m`6i6%5cd=^<l3i30hRT)'rth,Ot;oWK\S/OGmMSacb"]7,qJ,raJl/kSgW(qZBh^g$C3c6+]qFB'7lf1X.SgEE#9?9'#u$]eKUbO.`j?=%?o)[3;1"[%Vmq9`PkYH7UuM"[/D=cKH,C]dZkjN`$Yc7b"W$\&-+=e4?;:^CDWq-aKW$N[)pAEc$Lh@JVPYL"po8l1bL%)$AiLMg%@StR]Udu_-9<YE0<n<B@0S_^AD^>d,N-88':a+`NEc*-Q0H6Ue<Hu7/10^9n=N:E0o-j]L3J;X2XX+.lq[975b@sg_S9j1/Pt6]B%c,4-RAu#]u5@AM<'sb2oCtY"44k<7?*I>_&A484dQ\Y>SB@Y2;3'#S@VV%cj7>6P9Kl&TV.;"H)cU_ZeL<NAI#'*Xtj6MUaZ!@([%:&l;q>D=bakcZ8s@ug]djZ$(eNRkr!EHN7b%=j$9DZ;I2J/X<]4%1;dg&iMa*68`AOXsMQ3ifLjO;N.69Mbbq%3D;.AZ#Stch\]>%(i>C,<<5BQZAQ5KU/S4fU[b>O!EpA2*?-P@=&;WCL6Qm3$)#e,C>i:4`pe[VAH\kG7p%MDj0/rb#p<t.##Q4i+uhA*%m^D4_K8@I%'q<oJ_ala7=r$RQm6W9^B,P-]S7JCP])kCOduI4"8-<Z8-4+'TV.g>H!?tB6)FK`V:=78t\]eWu3*WJE3@f?U1tYVg0gQSk(Xs`o%kt#J20fW7o69+V3Jo;J=V1@pUU[fUjc0%\c,b'`tdb-HT;PMKf)AT[SJrlp0gtn2PEB;K/&I!jm@Pj7J.X7[f6-2.DT4NPlct<nl%$lbiR1*gpC$L\Fl>2lk4Ymt_JSkBT9M!-<d+l$:'[tHc%.j3eWCkj&K_67C_;T)G\!g'?+V:C?JV#r&Z/d=M0:6J,"KY]?M35lOd%,I$f7D?:oCl>t?s#`4A_,WRpBae7f/fTUtda&*=Jd9^[W<C$0kf!p:H"ZFAr8+^_L/i]^I'!]fHK4mZ<qNKh\-^c+_I(kb<-semi%8Xfm1)/O@1/4cC7W&_g(O-9h,a=.mCr`!LN8`n9WV^b%j>-L*$'hmR`bih2t14*/Q&CP;e?^;6\&h=id7iJ2VR%S1^6M%a6l5#k"%Gc-k7FC.j0)UMO)V)Um%r$cjk\]W8a*V*E_$Fqu9kFK,l1pC/hcb.(fl%VAr]U$3F<li?k_1[iSYf7Nj]F>H!3baog(HO`g&]i+K%_3)iFk>Z4O-?g+8k$*S;"3[EXQW%*@,hDdm?TBd'EukN<CWP10Q&H-aTQ!@f%[gb3+j3k`ErDM_2.mU=+1%-bkVJU&!LD1u]plK?%3fS/$_s\"BB7FAZ)Mf7d\]DZli^,ihS#4@rQ]rrca=EP\,jE_`=Q@kT24sa9n1kY-'lK7gIeZ$t-ufs8@.#]i#Y$"MWtCI=mmrCP%\YeX`oJ0@g*iYEp=7k^3E2ZHH4HYD0,=`Tgb?R"ck/*5pg^JQmWmLo2#:35$afKG>S2#),A:eA"+"7VrQ(4]AI4idTGBe:9G)bJa%J&d8#3+4t2,#->hf&Y:8Z''P$1HAT/;.Rr/WF?B[+fWmUs.\s$NWSDm.#j`;[,L)8QbU+&QBl\a70b3>$'C&n0lV>*kU@+=`FM@?%qdLd$ktK1E:PbGR,S?ffK<[-k(?o,l"4;YX#c+u&?EFu`g6%p_+BIG`K+H7a$;T_L(Vt&:j'Mp?&cJ%9kg$i"VHdH.12.P]GrXF8%X7c['gBo1j&;*;Fe&YZq>Et_Di*B@9NRFt@DK4pO>8slXrNXs8qRU\08T`4gA9M)`+gO?of^B.Z#7*]XEb88PE<q1nZj$cTp(\.X%ic&G9"c14@-7NAI#OKVU:j.)h\u%:sKYFMn"AZcu8<8o9AI\mlZf,JY)M4>aDRJhN-U=@`V/4S!FMU>>ZAt)^$Uk"l+sQS!n`9s*%)-9@W6HGKj*uCWO17Ud#V9[FU8_Fg5We;rY._pdo,qfpgi9k;XaWuUsR2e#iPhI%mK7*I1a`ejKprFiGS=h-:VZ:5&7[>cqC]gb*%>OnK^JBn5GYiW_JLC]crN[Tp>ZRdgVluX\?^gUCtUnOU;J=U+Jg!DiRi=A]uVQmtc_anoF>K"tKGDUikmLkPrO<R.<T<Yd:N5W5R%<UkH*Z0p'H$7<BRgga#;:so@\didq-lt$+DK/=]`CFhn,&")^=cK""74q\lWNHbWZ/tWf#8^n'Q-J58,e<#K+h^Aeh(ZD$UN?O<S%OTSA)ZQE?3!onUEQP15j8'Wl.\.B5@V.CXM=GV'o;bS49FMa/rM@Vf&:l!)(c;_>2+@/?3-5<df8.f=?^r<Uo7*]A`.sC_tl;+I3%>R0[03Tm`-K^4$t?qID1.BD\(hP^Go%]7u'm7e<09B6ST([#%63I5")nCH9#+..XR+J(qlWqDWjLaJVEKS(Job(oqWbRmA1Q/o=7%JeoYI8/=&9eJ1"Snea)9R2f?_$u"Pa=Pgi>:Prh72<aunBtb)"fhqj+#F*2EXU#T!?k>'EA`+_oZUh61F&X.IdS:GP*1pDIU:"$F%D)afp1=;5p3<67b+Lh_r@bNseG)Skp.IH!5T(.q-,$H3i+@0E]=qT808:\U$NEAr0iq"+SS7BDWaC12<2SCO:O9L1WREAg.Ee]$3%!eAr`F?kkV@\UQW*@rp]7C@p".O?*[T]tGM)a%7:HPLXf<lqeR_f6PSN/RqVC,q!d&NIgbB]OG!'9?^U8?jAD-tEHskJh".?EI;6%!CbY@*uLp>kM_dNQP^oU>_@:8eQ49$7)[4CUcak\E:L_=:;mQCQs(.Ai4L]*,eSu3]7Qe#q;,['$C+Eo,l`*l;jFq-/fZR5K*GY;%;pK^R&e@NLrR+:fICeb7[&0,Ei=jT\d(/%;GgdUM&,^E\NW;,0SAi@_kB%=DaW(W&@KVi`Lk\#^n-YHMQ9XLt%3RbZC-mq\(B/iC%CrJ_6@0AUKCI87^:UYN[EJ9WsY`TB;W6AXj)*tX"<@s:ep5=)A(4<'7[DX@V+s69]ajCK'*(cC.`+H""WX*[cidJr-Op;Os`Ncjj%0![m*(a+qahe5Dd""jl.TY%F'L_UT!$r.+lFj=dgiu^Ur\ZA/sdpYM[8:M"BHW3ID#?#r*?<9sd)j%+.`aG4t6Ao14[-X:jP1-JK%6&XMj<(pOs,ZXr5Z2od+%E0`@DFLPcAUk&&aPFoP)W**A$Hge1Q<!K2!ZOD1$b!Bdkjt'pIXt*(+]t1`#=ZJ*OuOo:V)<E-m\+^2%^).?f>iuFk*`HW4g8`*9kA5MfV@aJ9G4^.m\6>'5<031\?-m4iLhsqr&^F8Jk\j!fk,oj^,`%p$AAna^.^jlU!PPUF.Mi^J8LH><%7Djg8lTTDo8HZQ4OuH\TXPOkH%'<&uf1k3g%E`33_3iT+1?:rEP`(?V6?p"F,jB]g#Q-n'VEtkMH,ep>OHbX>8;s>emHsLKC5J):%ZD`Fi@\AYH3hPcujBfse=!?%0^&uj21Npnd01C1&O!iT,M**'U3pQnRW'e.&4H2j>.1%b##ZF<c(S<0$iM5!$\RV";i+a,KI>*g*%8kHHl/kHCNX,n'*KueOu'JC2V?/h5C:55O]*Yb)TKR!Lhd]]%@U:<i%#[%H7kJ?'MKqUO!;G$^VN64Qs!jR<<Wff0(m-bC_"QJpk%F8hOJ'nZF!T:"a<a[(c'nE5qUkflKSY7L0F+i-::o6PN:TXteR]r\$6(]FI>e/=H[86AW,@NC&^Ihk[(0P"=a#@Xmj8tItX:6t.,%<=.a2GC\;CbiMfpa7(\P:!%%lM9H\gM<q$cL&^D1]9*2&"RlR&rfo-5n4t`]O]KK!eSSF@1ruMgA>4^PKe?PVS3ALt;:b3bjU/SX%T36YO.21"M6d33]*I--\4$HP_b5NraK(]sG=gZ;:$Z2MJ&)f*%caitHs"LAiq.+sBSb8u@pt9eW5Xmj21cPOLQpu&G,25qsb\=&(%Ab0jf#@i,#Rl3Sq@bdL"mj.YYH*]g52o#)8'8gcaN?L+\T!i1l`E*E:-u3oX]f-?FD09aC8(jeh/TL3+N=M=7]J(Yd-WrUU'J1?f%3`$<.V8ut'@lTtT<;H*@+iME6oT36*)p*2Z#E^%k<)*CYZ[hW83'!*FJLC9&CH`>nY`iCY53MT(L-R,5n9dhOj:^uoDg_^dasZ7J%Ei$jt3p<.?h!ut_Nh/%[%H&*UbV*bVT;e$%:EO*;`c+A%+Tg3i_[ofh.O+^sOQI8h4+D\[g@LK1<l^:;:I$1@NZfKdO,rG"."1$7%QqCKlH9UY$NAa/#9:%8Ni$HMr`f3tkHq0CLQYodO]huW5,ZlS1=4>Pi:Qts?R+sqs3"^hp'!6u]i!_'6A_beSH_,(F8n&j9c[)C.%,p3SLD6t:*_#pR.(9+cq/W0\0D2(DUV/6M?dk*Dn8^$a47^WiD,rO>oMUQ-agVF&OGpX]t<7UB/Hcu_Sd^g^hHW?L$YGG>gc$,#g%Jl#NAa:CBSU$/G1M:mWGfT9O(N2bV!bp:iNR"[TslA,Hp:8:MNeQ`6]d:spbH4\1iDe#ii\E;u4.%<U^;,uJ5!eUX'=:oPK-B)Mt%)4iGE\<AR+XC+U-Dbsql!8Mc``)*E'[^.WN`)QmI/=:@3keimCd9re*b6nmN*(-"(4Ai,8'`;N%:Ga1(Ac=\k*auFG90i`*>NZWL%.glC5&]Z[iqk]UQ"B]l(dOIjVGlUsuPJ=rq0eUb;`)8Wu,*JOA;V48O_,2kV*%m#W$8pnSY+d:inF)1<4$rutQI<$L/3)]L+kEo\%g+hf4<_Q1PBL=Z4Ja>_^/T%>sX3on1:aBMS#6DB1X?jkD85d.@8B"S&^t'4H_U1'GY*+EZ^1%`Z;cH9qe2_rQ`tP</7@XJP0+iJm%8bC'T4BWXPS67<SL:O(%hHC*'kB`/o`en2jX>*W,NgCLpI0BW\>_"9F7::b`0UP5Q62&B'(fP#o3-(^8KKBbb#*-)DLu$/,hSh%7%gAk1</'\c#[L@nZBbciV`G*940(eCjHjIZ@!Qd;EScYRY)U+9g[+T1c))AU`"tE83@c)^^<qf.CW?nOj+FZ[Y$!&o,9Vk)d9OCeF%FRt+@P5h.uPq!`uc62MI8b3O`ZJcF=OSHrmmH)m@k?1l!HnDO*%a:<uI^9g[R29nt\e`d#PL%4c9?:,$'R`Zr$ll,"DpTaYWmq.l%)q$qC!KXTqm2<H=dM\4n25^UPSuV;E=-tkjg4O5_h_X_mn@Y>MWJ6V%&"7$5;.`jeSBci)UbiR:GE^KF&p!ikKUf4B>d%k+rKc8i%9?%i_17.(/,7IG;f$#McR''B9Ysm`\Om]cYn@RL7Dt-k^T3L=WBcUD%da2;Q,V)HXmMMLf:/0k7>K"PMLMauRJmJQe.<"@"!*+b$%ZF4e89V+F`p:iW?8ESX_$V.gZFlqT%6^o1;ip@_!BeNA)@m=JF5`5SaDtC=\lUb94`(09'S:>d/EdiFWroClt,'s?\rZZ^h3W;M0%oW*b^nBV$T.5[6:/c7SS/,S$JmiB&jEBM,\G>F7%:G0p'0>CW_Mml2`rQa*\3W/.CFR/MYe!o[VeXN>+ahG3)H$S&Rj65aLl1*m%%*.M=S^@q!jFo39ZkPC,"1]6'1<M$tqk3-U<4?kh-nj@*br(6M2cON`hkh`5DP:'/0Qf!e&#B,@2aR)3ua^b2FjS8Rcmih5WYC/f#%mloGcIK&m.Om5$2P@M+D`G"b4f05Gu9Cn_2bOV3`*lf)1a77+hN8rpH?_/9D:G-P1O.g?QM\WQ>L\9;X1:[#RWqQK4chpIt&T*Dm%]Y:rSo]C7=IPg@P4nNF6H'.jV_5R3jkAk`gF4t!rbO)K]9L[h>S_orcE--O'frRF8VN8C`JXp.1]KWki>+r%WpoaPN+.o(+0u1db%Y@")cF45>TT,q=`p+L'nEW^Zo^OU/aeOKZm(l2?NOD`%,8C#o/WAn&;k9[1uR[<3r`QdMlm%)>;k>+m6HJ9V+]bfkmI)AD2anZ;&%dMPYt#GYEZgMnb\cY&T"f,'de#8A8iZX#B#3.$*oF`Q;Ne%CPJGiNAs]>(d9HTZV$nFeb[9O$ZHl+u-?(s(Y&%GosBSYaAnLLB8:%^41-C2>DM;mdKh7Ob:EXH2_,g3-0'5#'Y!)pBGh[E;.q(NV#AUpXU21f!p'jfk7Y?LJJGA00[,U+he3#I<#/8)9J>-htD:^A-dEJ%ikCc\T:Xo@:keYr&\>P;hOT(<Eek`>_c')J\hfi6S\pqtX-:Hm#qb)Df[@Ibk.&/g4MD2SfRG%B`Sp>m!+G1aJ5)AB(QTYFc)rFt%6`/\e[f=.(E/QXPI:BBY[.H*5n`]!)ips4tT9;ju;qHD:g)h*l]3kF@YFa(#5.Fb#+1BK>kj:t"phrn<0;fWL=4`5jrJ*<2i+jEF%mu3C0S'/j-8$dt@L[/nij.SPjD6CL(Hf'*tEB_"R'#k0caYs5*%K?!jV!n#KQ1*R`ZY@u-b(ff<C7Sp]l(7JsYsCRd3'"`;@$'_-%nAs9MhPpg^OLN:P>#W=V\k-uo87^2E$2;pV)M06(-4G4TV9d<@97aQiY(?PQs5&6K(L+Y`Wd_BcaQYt>7Ls#5P*HMFhjK50B@6I]%Xaj,IRAVFa+!.#To!Yu&B-(BN>X(B@?2&!F0<OZt*aa2@R!<InE^pN5hX'gT$tjU=N1b;^a*h3N=4`!HAa$QLm<qYG;YMkVBR4Z<%3k:d*^=t^bZaoluVYBXt3:+2qjr)I$D#ZL-2=>nHr:9@PjJMsAaR.`5Ci6]5fm=iGj.3:unU%F_>mUGiPLIGK\HL[N@_R&+q>BKr%l,Ai>[`C>:LLTZ-#d\l%I]rckS3`MO_X'0=q7T@&]f.^JGMI"MK\1U+G1MdbGI5u20&uZ>T%RJ'[5NHfpU;W]A_Zr#dA@j9]sDC-%.LPbL]^%$S]t&*\U@?medY\I1K^mX:9>@6ToIlstgAEdl:O@09enEXk,MI7a]$i_`1js[pIQfiA3'3ZOXb.&+5PWq;q,-VUh/*BW%s59I4U"tp5kGO)*Za8?\om;J?[n%C-*C<]<6[@GE*T\NV7WUeo`fGO<m=4D>qoS5p/0QrX'DFu[[RPVG=1E;Zi1MM?rI%J[a0s($%2:c3bpIK3-I;AOImh'EJL"H?lp$4'>Z73ESnQOU[O&&MHf?"jj]aJUcKjBc_/bnS.rWinf]t'[1q"!FGs5NgC2]'?D^?BLc?JN@^%%So;Rr1Z-JJH3GK]Ne+fe,?J"JU3CAGh!C[1_b:X(Coouanb;-pGn,+_pbCT/rogU;t5E#!6ic9bO!-AURSTZeS,Q9aO3Rbs7s"X%$9/ou]`*=DLq^cC55!W"H9(R.7INM`+.lf1I(%&i_?5#COrU'cS/pHhC"R:)6heA*aY4[rfcAn\A=3?@g(s<j8;>e/\9AD5g@T63%muh,UO(dPSS_h27+WI9dYSt5!3MaPD=J"CCkB<Z=Hl;V)k,6*:h7IcrrZg-=h)_@L%-]I8U5ZehkqMDGOq+gQK\UZDI.,KlqN#;o%!28dRLKS+-2LUYA]6'G>,MI5IDq!-C2ELiD4kVr50^-*bj,V]0)lj1GOYo)!_CJiE='&+,$Pq^OFl89d^AUJ>GM[bTl`6(/=q<!,%8LF/.9LF<^DbI)Gh9.##6_0`5U9,TdW\:\HlTP#/U(%`POD#RcdIo2D0UQO+5hgC32FBqSjOk[%qT-"Z5TAe;+O:7;[f,bJ%I-&Z%04oXY`*2WGIu.WZ_m\g9D=!U7g[lQbY\f,3oARf8Au?`B*e*Wm^%696R.G<aT*ou$<=JG\l('t/?2\Gr"Noe^D3B:5Za5Qia2`s=%0A)E!WqCC>X,<kT$aoeA7FXlA?0!5Ai4o'nrk8h+_uJVK?]=DWb4`sQna,efq+:V5alVmbm-o=FNFbeTGjXP'HB)!7qMoEk&[N?4%@X>'@Tg6hZnSM'QQqaiZmbt&[5@*;Zj4f`r^Wr3)4]d+5/2gQLXMnfk/dH83<SI5#jqh[V0<W*@rSV:Ai7^@L[u.#j4('t3Q.mL6%cl4<Z[N`mA=UMfaF&.TTlRr70h8TB^N<;@K1$!F!C82$>+u5Mq6uRoMh@AYXVI-Q%Wq5(I5Wl\A\UJi_]C'V'Htd`ep4PDC`Nd;]%^i_[lKTfb43-i1uN11)G%,p8Y_]-J7o@#IJPD=,J&5MX-/f7D;o!d3`1d_Oo1IB1#B1>?X#^PAGLCj"f6@K5;d:T.\6O7rC+V,aW%+bY5jo(_`Ls0%i,M^V\K=IUoPHC(PA]"*1s`l#^eb5=1>g>'1aERT5DCHV4BL\A^Ro^q/7^>h:<H1LSGIfJ=3leqIX@f*FT>sR83%du3gulbi>n@V"o;!H]8G[fLST\M*F#VdW/]^A[,52EQC-/?mg^-g/Mt:G1N'm,[/JG5_-rm.ft+bJWp!]sl^G`XQV:JB$DoebU48%"!ffjE\CY+\_^2M_sa1eh-@/Y3+'68ErTq<Z`<beAuG-Z[32+&M*&V%G#,dLIXn0QXtjI0ad4tpn[1e:J"L,HX66f6cs2q30Z1[*%B23"Nf(Om^+1q^5ia+uMrC=n$Z1jgP@-l]Y%HE(b@+ME04^S4H2;g@pDDU3/?R"9[;&[;g(rYt6c%+OW\BTQY%(OQ4gC1U:QK'm$%$u"FS>_<'1HM&E16[&I;&;@\!EjP"<e@dsNI#elJTn^Ra$&/A4%Q:tS7fS$UGR]Z3`B].r)B2t`BsUh&\p:_'Y;T0PY!5$2=bYmS%T?\EkB5FU9*9p=:RdM0\:MlQg>ZWCn]%Xf^'>5utF/V1njjfpV'Ad)c>DJYGlZD'F?@FPB:-EuNG^T&WnGT)"^.?)>m?'e(Fb-[!%!d`IJ)c#J/p+=ek_j\Ur6r9=)opn0PZMjt%UAmKmfPh/$l-eqXn`-\'2/\8og$r6dqUVt>NjermI\^<\#N5<VH65;$9j*b5'.)=`%"W:RONH<?DRD7.9-(iI`kCb-t.C['@csHGge)r+!CS^"\h625pd=L0RMTlZrl+K.V/_dlkCtBOrJ(+*D/DC3T(dO(GA(_VoUDcCW%NAZFGI/u5%%qGYt[_Vh^5`O#g]*#":M3<5d2$Qle;aCk7Q`gqOaDKU4B6eI?H@86@o'kl>nFZ[;PQ#:NoPi-EOZ0u9E?2a(7%W!n%P2<_![Wn5=8$qN9A,@'d3km]P!&iPDCK.<)+*m5u426#bI<'bC!oH]Q!PJ<iPLDAnfQcQOB1%`,=*=B3n7oC]3W#)2g%eKpT=":@%2JIkl=R<!dC-TGF39rdKJ+FZhVtUunXtTY;lAI_@b'bkrFO-sF%CM+Kg-tTX]@5J&CT-?gFO?!9D,9Dj<rs:gHuo,Jbpi/02W9I-%pe`!uj5.tB.mmU*=1MnO+)4gO4j5!P@n^*j58KO%UD7G0[f@34^HS-X6.UN*6iPa3LFKB)qs</B.<&8\%G^ECh(p25o)lX@6p0?h%8:5CNDBg_;LMq/,?Lj[**598JHa,;BUVk\f+V#">`f+DHppT)=]<?KopX/*g?);"Lq)6R\lb.Oqa#A6jK?#oqI"TJKL3I1rTuXX^%R't#pqo+JOj!U1KrV,p'\pFt;I<#&5)9Lh-D848<0>E<_+0.f2Fma[q:[n""ItigsY?`7ZANZ:gA>jbCJkGk3=1l&,&\^"lI7M0@%`Tq`\DCGArS.#2-nlq`X*ZdIkHUOZfkD)PTf3c1u"pfEqrP`K#N199br<I`%q3LZ]m&%/p[4Rk^*uT'Vp<n8FE,RV\js-Yq?b9Y?%WhRsD.MW.Iqi9V$9p'Yoal$Lsj.P-N#M/k9l%[B3h?ctZ2j]R9O(Jo`%bIsV)\9X]fYr0\\),aUcb/tFIK">Je+omY4+c?Sk[@75%,A]TQ\a.;*EdD_SFa^db6]igtdXH)'!-D67hRnX$4ZU,W,;^5)J*fnsH1'N'N2h1?N1-<S5Lon*P:,eB`nETGqrWDrflrQ9!.F?`%pje(K@-qgS2f6%Cip3_#A.I0k6h:fuG2V3+m?<gfqp+eko@Y^]0L#7X0aS)3l0dr8_-@o&V7qA&aF\.7mA4%>(n5D$h9.Y>HYa'"%OSPa[L#+<>fns6&a\q'!YQ&E6mt(,gs3L+BqtKfNSuoLY*JiG5'j6[GOUae:R?kBrWOD*s@Q%P0St92:G^-O:kM/7lH$FUTrUap7%`^`K&h776_HGal<s+,!rmd.,t#2QhX;L-aAk,k0;6$3[;F2M#@p>F<8<uO$F(4,(_ILF`deTG8X(u`2p,.`QeAH-oA1;V_>pkLNI%D/YQ5TrdZ/MtaPFBW?8FL2@LgC6\>?oi%OU*O>^Es'CoD[m9_,\iP0C*kbaJ=7m35fpt-LV\b]gaTgN9M/a%8Vu(j<D^b.\\Qe=7%]rCPlTXToiks[dB$P<!"a7R465E:+]JmdoeA#sP.gg=CBr4!(Xo/O%:mpR+"+dHup7)NlOD:>=K3i:cS)Rj8cWH%rJ6\DX,B\JfW%QTf[W]A,W]g]WFD;qCd@nC.AP]FBC'1$TeXn72KPoao<d1NuoXlfS-/UFhWUpQ!G:G*J'%*.7J*^h7l4BBmYac6db#@cEq!4E^Vm%jl-$ciuVQifGo@TND[%HL>"6*Rqr0F6:6)O(?g:(I*(miT/jB%H91g^0=V1@>g7CPE(;Qglgmnjm(BCi7sjF>iA4;$1.Z]_rl+\g%d"F&NnpnfFfoqWkoG?3XcaaMbX+t&PI<on%I<BRTq.>qRG2Vg:T4^+P^CRW;9_6@Bn;jcj&&/OKcUW<RhWS2$c:>p"pIEm=CPuZg%MR"'ZD<nGVPoH:%aEChAU)kJ_*7oI9,-`'P3\NVCN!lbFKK+YiS?ZR>S4gp.Sm7?J>2)L[Y0+f-<j(tuPfOm:m09l<bH\)f\!rK(%\1F^"V(XWM2)]aI7VTmEELP9/Wm[d=*dFt3Qaq-r-K=*R>`\2+[k2&LelGpkGA_j?ZH9#[G$k413O6`rkfMrFnHg%a,?MQ=HB=2/%"h,8OA.NEWa)PE"A^0O4s.)9on2C1H_^tD!<Q!Q4.':Lc.F!Zu=8?1aTi]dS2Hl)(3GU_dIBCY,jjPNWQ@W&-*2QHKlr41$IHA)!%EU@!kRb[&]g:D9,.Y[>?%"(.)nA=6)-H9bdO%U;a2NV@YF/qoF;3b4OR`]\AM[1P*c6Pg;>?GL8;t9sqZ`Be'BbScOQr7]<02%,L%0kse23#S!]A3WI;Cp(Y.;>N&o?Zk<d8a'8!&qA"W!r3s3LR^15-RX1B9&u",]B=A]heM3I[a^!_<T)W[eQ+?_>Negr@K4r`ePuos%TO>9heM!_"8qVMB#84biVs?&k8$VW!"(Nh=/\jHpZ#ZqG>ciHIQ/f0)<<7QfiJ_g[K3A.P%XkW/56_':MfRoH\H9SN/(*,j9#4u3%&6o,j#gb;b;*%m>:#YZ.;i9@6<3AjNfmcUkE*HS/\/dm"!3&f!.rs;+\ZT]IXEC`nn:qY+`on<2]*9E\>>ubg$,W+>Xb12b[7SIF%/TN^l>0'8[$co$(a8QleXEBMs`7;Z#-,2:n0B@i31`BL^Nf?/=[;O!]0'>\RjOQj<oOSUp2"EX'Alau,qW@"*?\G'.GQ_X9Fi1e=%j&&#:g>q8QFS&S;,0CG48t91Yn!t[=o?PV&0j0EQ4;)-^^$.W)0.sFmB!^]\7r&$hO2**Q]"[fVYBV9o4c_q5U&dZZ9=HW3HLKkU%C,XeZq##NrXr2#Q98e\%XNJC/r1W`rJ9o[DK`O(NXIkK\INH6loj)dAmrAm1mCLfVlW2oG>CF-?lFU;o^?`C1hrU?;H!ikAl37j'%XT?t[f]IkTR0p;_WsZO:\NqlJ@9YX&!OJ=9[IS%9%s),odbT3;Q[)lHk3W[9R(($Q,Eetq!faAu:P#&m2Q!Xo;lVV,Y'p^i)3uo/%'C\Z(qC+,3CtmJ-3T\=5VQQsf[tA4j1lAsdq2eU("_(SD',CLad-RrBZYum.^U_(mB^5+,&4/J)=e-?4pl?h;:m3]1Xeifbg@kaX%p)9;8>Ue)GOmK_.in5<$"PJk,^)1(>H``<hj]+o8_KEri+,+UflbFu'@1P1u9o.4"h`r<Z>^#nrZrI4C#$#1P4U=Gl+SI_,2iK8$%[:9\[pX8`YcUTuRg=12m'Zfc%=4`n=af4'r`=f8(d^>s/M)%do?E2#Yn1aY1hY;r0-H,%'#oNtIe7t4+MB8$;<RmNa-H[l:B@D4F%Y[X@J1Ot[b;GJ1nBu)o_i?6o4H.lt"-tV6Da7rh]K6#=]V+7>Gq&e$`P/dDHcrl2qRB,$aScB;^ADrHkT83cl$g1mtQ/GneiB17G%178RGW.*\T=G"\Yo.<upW6Mn!+9o9DbBXoT(@:pm?o"_aS9XhVe84dqe>>pXOi8Bgas.d\%W$JdYJN2G?^:ATMrso!-ut.?>4?Q5%:6?ZWK8!?+=cPOU?ja6nWAhQbhVm!@s3i@q*rP3@WtLN9pqL?(]^a&FdJG;hZa]!;?FkW.Gid?=8"^)p!T(X>1$R*+:VR`pnidW!%'c%'&_2GsHo^*4r5L0\/4C*=FP3>++Y=giIO$"XqGM_h;ffcu3Htu]IFnWqh5P3!6p#jZ5aj5Isi8>P=5B20:;F`tKQS/<e?i(eW%nJcuLYPmR`DnZ*f1\or(`p']+XhXbJru]#MHiN8Is4tH_=.d/fo&Lm^T)@=BnD"!<&,u'*r/3f;K7EgRs8B.HG('ka5P6+Gra5UW%s7\bVQ[eY2s7IK4bCBBcJ+'kL5C<RtJ)S;krl`(NJ,R4`qa^\O?iACPp](0Jht`84p\t<CIrt8RYPu$2i:m8n5PsXDr1EqOhu@'`%S%nOY^].g9hKNT3nSeEoJ+1)MkTBckhu=dJrJOHqV*dJHhjOF5^\V=8qQKqls6R)lE52=mA7/bmHiNC:#Oh)lT=Wjsr%X^Qd-is7%a=KP/>QD.H"7LI*R#8=D4kd[HmWZD_+kJ#P`#FcaX9lnbUJLkpp^c/0Go_hVC>n+3r7UG(Lr&0*4h3mHVbMX7r3P)<oc/7'HLh"0%$!*)[YP5_VeERQI,lORb'#VZFEL^#0N^9kk<N/iZV`3CUHin8CXf#C,^%#XfnYVeipIjDZ:"S#m$AAufkM%4eO%`;QDS[>aU:]X(%DM5g-Em5Vkm^Lp3jm>!3pRg@=TE"U,pA+S@ht]&,o^2B"Np1-IrN=02.f0.U`pu1er[Ps/(]AiOj1*;3^Pm0fFl-PJ*-^6%(ELP%%p[ptqES#Vdd;drahd4;^m^caY3ek97e&rTK?2*MNa)KXYGo>YPl[B7Pf^AarQSAnuLVLaaiU?8[pcJBork@[4gMSh'(Ya9R_qk@K%G+\WFi>UH1NirB=QSE="30s5e)og:'s-l-2Fo&k0j1%h`2ea6bdf3#Ya33]H?&mrVpA]8rj]2!PFc>F)p&.mLjf\Hokg,"Uq0TuN%IWp;1=2+7GrL^9@ja1&m"F#@Qp]'.^rU?G45<o'5J)U^ImuMteZ:FEX+8h?&k+DUW5PO2&nIn.dkC2dTqGTWL6U1'gn=IV.s+qin%1I(lY"7=rkqsCk_*rj4,O8Z'E#8]Mn4l?-b5FDE&TDWE8s3Y3MFS=e;j%mGgn^i8npkqB,BAeo4-beaohuCTDqBpa'rl2E#rf^^d%)o)2Q^\+(Go<8,Sc^t'ocb#hKM*LsVhuAu8'ArDH+8Cs?r@.X:8([e:J,MV1rSRG,J+sP(pNQVG^[p@]`aAP,Dh$UBe;sUM&%%r'%T!/(M^[^@a5C7;M-HT++M!@A5e%/"8#84%#Wk8,+lF\SsZgTsPT"a["\uN?RVX*M.FP(B#Z/=tq(P=;UZYO%^m!9c+fRP&MgFKJt%j*1q>+#XDb-a3UnT5BP*-*RM5d/,%3n&ikslE8OY^pKn7:Z``2J,Jio&V$T8ZsNY@O8n)Zs4isTqR:tSpODqf07Vs0+8OhVJ)PW(%jLtT%)g*_DqucS9l:paBrD3@QhgYNnhgP3Fhg>(/hgYDD^[gI+J,^O-8r_:1kZRsM[lqN#*PM9^s3HmYqi1(DlOR<H&Un']iUbt,%p:l"BaZk.@RuaG6#B!JF])%lIgi>VBQ2RNiI.FJUrgi5$psR>M_ET]go\pCRqp*gnqNE#rV<enEs"1F:Bm%\nYJ%t<Ie68TqTRQ_%q*"k07J];eIe`kS^@ms*rR0*'pR]uCGI9PaZgFI9Rm6D1^\u`)0<3s+c-%b(pT;4/bQm!p$FQLkVK'lR9b.BXht5c$IdL@c)rYdp%kJ-\t:VQR9=8hlc\c->!^n"aEa7&f0^OG=U(QI@_ac"J.oAu&2H7mcg`sl\t='pI>rkR+"s3Ts/q>2hZC]aXZ.ke[4rI=g)htsr!%k2)TT/?ZPBG'>M;NfSVU4$Tg`8&jg!hu9*0rRHNDf.DLd@!%`Zrf-CHgt2SV'Hr(Xp]'d4s7N&l&)[R"DSDIlr/Z@&e2MkbNY#sp%dduAk_?YR.WV:No?$l7pf=gnN6K577rT\T6YSmLRn\]9pq2aFG`SGksC2i>7^AVF9kheR>M%L0d_KWckOgcWif>H<.K*MSjhYsdp%s.3MK(SCZ<O8dj^s8?T+#)E6Cj#%a&n*`L7p4Io$l=obXs)`LC#.<We6g=T!T[M`N;Frf]Zjq$OM![7eaGO#ElcjqWj_t+EEi!4'%^83I;[5YeE\+lg2I,Q$j]k#5X00T&h07;\PMa#&t^o_g&9N9m?WIO]7,u-[NiHtUoWV9@=O?aq6\E1QCe72:%l'p"'$j"$8bqD6M%=DI=k`86;Un"CMGk.RDdLM'sJ'o3sFr5,f?nEK]HbQ;q5bt+e:"po#P*^'-d?i67?2&3Zg?i8N*q;NJZFqAK%*K0,]5hLF_fnU[L%kheL$V)4"^Giip.qY7t7e@h$:!BkUqX)I=ehtO+RIFD0?I.M-GHJd%eosnt(2;-O3h/oPBZN'%tI/9m3Oi_Gc7J>8-J)JTK&^R",%8W!qEOu)k/-B?sZHULlJ.-X>m<W:iZO!]8KSl*`><j!-7`dd^CfDamdhgbW\0,Ts/V,=?_IGal$L"6.BTDZhr55f?FpH!Fm4`K]r%7K[W\(mMGg?[1`=5P"%lI/0gmpNLq9EpJ]b-A\%jXlH&Rec5K^56dTgDmC(P.#b8J4S3]5IbV'V15_7J^%6dbAnYXnCG3)fWaU&s%5G78$HX.XUAD(`:G,`Rm2rAYrlbI_S^UEHYRp:BdFk>Mi'D>0@3%(MYir:uXJ!<FR%[L;nJ]^1K73C\L-(J$DkSdDca%;U^Ti+h3%a8/YY5Ob#\:oMg2(]@?VFZuDfj+;6d8"jr[bqJW<4<9Fp"4G^2X=.b^ln$;:XinU#<=ahfP^l!,>^k8c2m3Hb@F-5#8,dU,&&nmf%^X;^'YL:bU>MnuGHf4)WGJ*%M_\R1fSM*1ug^>dLo[8XN4SR',rpDE]e801)2o"k+93UZQdaM"jm]Y9'GOUX-r,/o>I-Fk-s%Vh<%MP'g4\T*,\>9C%NZmgFs"cG:B]^k(FbZg>rBC2XJiVq%GAo7P&XpnLccW?0=57SRsiB##qXZfh7e*Sf'[fL7A0.l8rrn!&<g:["!%1[i[IHC*1Y(k;N7YI$=f]YcY2I/fa0UUP[#Bqn`nT9:/,s/"Grda'l/.V&3Aa),..rqE3XDgfWNUK@FZM<aPSY)YtI^P+Lj[l&5.%s#g#pUsXOZXXs9niGm<0^GmS^YgRknd-.;>2>Su0>,1h^J9iso*j94IA<PQ`&b=qqV&nK?7Uku\Ip#::-Y51*Iclsj_/IL`prhQ6%h!"'bac2J/nb\6OU*Le0emY%\IU,r^=f2?$frR[5rVG!'g3d2,/?_Zpb)'=$_8k$Y7TV`hA'j;/QThN1!6E[>C@h"/+1fVioB;h$%O7i'Vbm\:=<hmG-=eeQP`qmpNQ>Kt+N0SZQroA8Sg3iMl/R,TmlDgV'I/Y)8UHSW1J,W2I?RPNi+*d'T>+P3C2a6ujO/;64i1KYF%^AeRJJ+gDpr87h+IJ<'"J,`^n3au0eIdoARp$R%=qd$u,Mm^U8"Fkm;b5G38^c8:SVt@CpX@mb!OeIlO.Pdm)7)l-`N6)6G-nqNk%/(X1+pWG<3B6,X[*Uke4(d\/9H5.@4C5'^H"j@j+)58#]?Q.Omd&_U0$HJfh9uCIAHX-u0,QBe1O6HWdGh'Z@LYI&T?`e/&e_#el%meYPjGiOcBh/q\:2nT@V`iS-:]]lgu\(l;qXgd)+k-[/(BE<JQ[Fa;\o9ig$^Z4ZdYIj,'ZZk2JbF+i;\DAK<Gg1B7\`q>?GMI?8%^%^@WqUaVKmlbmPFo/:RDL0QMf2Me-E-'LqGMR>tr=;$cTZd#d)]lNh5(IL]q$$rbe^rd0i-k@7_:?uf#!]4AXuG-3EeN'/'<&)8%^q3tR#$5SEH\ViT3ni=l>S#V62h:16S(Cnp;\K4KDJSugpNXC.St7Q1HX$(\?@OoV;dQ4:qo1G$^[Afp[(&3/H[NLt3dQ3;>o`ok%hs5/EUDa*#lYjN1Y'V7(G'gfK]emXD%n$);])hPTHgeQ=-DaYjjW/R&mqV1Pp/)6VFFg&o)9N2WY5@[B:1[,&^Ab!6mt.h!]=\iq%nXr:'5et]#Pdd^,jULsU]gYM+?h9`<hN#2>o^j=mct/q""F,spm=A#>s16s&Ia'__M/G:oa#squQTgl2#K/g5o@bPrr%)sTDSH,l%AU$K3QF$>"Ts^X7Fbt9T#6t&%70,IBFlVGMDS/_q]^*9:><?53e0P(r.!3Td^"j^2#Z1a<9h5XP1k[%N$m=:#LANfhcMI`,mrO:t%diJ0dcM`<@mSN$U<&19tT]s;bI'(&OB\?_tLg$n-?+8U2]tBdfr7QGhlg@j+rJiZm.bbWghXK7R0[g%U;$nuP\ijrT9,_,+aa%:T%#8*n9k"fAGG71YGmEh]Hb"+L0L%-7$C$Y!"4R_\%p2m[L4:"%[=DGe7Rd4j=/V&Ft[(8=]?1?n=E4:F<giN2?fBPa6D%<)H%6u"[%Ydq0d%6n^3bn#EA!T8r`0uflqSpfG.!:+BS+4l,UTL;!K1i@)6J)b<_\K.X\ZlO,clgMIKm^'AIBs1E/d-D.6DJf]]FS@rmgjSp&%!!eD'9S[%VGOq5,DS>H2479WW[Tf6H==QDJi4A5m:ej40Gf04+R:nVfo]g2lpbauA4_q6djT?@Oec:nbSY#.,rQe9,;`dqH,uo7%%N&d^>L:o#6]iP6[Oh7^O(G?*s\_:9K"a&A*a`W(6&R8Um+[2F9R8t@6!p&cWjIc9sF9#[`$4a#V[@aP_\iip[$*:r,?j2GZYlW^b%lW*OQ`di<ol=2ZPjLHeS$3IbB:ksW"OEf4][Mi8mFOa]uBooiH0)Q+8Ru"mBAKf'fbV/lm@*g,"8,dVg_=ESuJ*`1#h-^UQDV#n/%YASE,LF*d;f%*ma-AHi8DqD_8`Pmlj-OZ!JnRm@FNK4d:bG5%AS(*0U_<&Ris6X=rq-EH<pH/EH0E7XT+"iOpbK\@X_X%"V4nc&9%q>EO(ie]ntrSN(e@m?Ge$[^0\\$,7)cMlV&rmpQ<kpQK)B0Z:.5Ogs&oNT*$VTb4uHMm?rY0m"hDgD7J+8OFLs6?S]^A,67rojY0%s2@LfUKs6&GL07nDu>n#lb@rIci<:6^\X51ro.QTp':Wb=5J0U7H9fl5u"2)k&(.c%mK^?07N^IJ+Md:r6.Yqr*++:R?[@;Al!N\%nfNAQGG"ZKB:o+](SCWl-iV0`hshd<gJJKTnpQ)BK7ELDGJ4"es6LDkr8]7)m(`SGDuS`l+3a<M8Mb,IRlblU(Z,._htbWS5Q%54%H2"N@qhL?@IB@/C#s[XGfZO3c^O,;$J,S!Vrlb?0dA)[UmL:YNY.D;@S6/AD.uueraX<Cp!c9tb"6Rik6PHeaMmHpl4jDNXFOaB(%+)G_2DgTCT)Ct4Ik9nSh3*3lfgj:I7/:hK*3'jmj$HXJj@X)mU>RB]TPh?])`MrDSGTNd*R(.?\(.qp4c5W_Hi4(:>.Haui=joU3%q*:Cm#KcmMC'Sarb[)_uHmk98R7ocT6\(u%_g@@f)#s"=rN+)U/-P2=EUkj5Hnj@\^EiDR=",H%,`Ki!(B)h;&)Wal=Lp6ccjdjI%VTeo\CZSG4CHa^*;q)#)Y6cB$_$5Rqh2@6*_HZ'2;E:=AUiqh8h&29(g*q,EZX<?e<2+uAX)FZY:GdUbni:g6YMIfI:3JS0p#fqO%4>+]g5c_D0gdb/6;_.WI!Xo1*S^fq?(a&a/%8m;d)iF_odRBmP.lR7pPFp;dPdA#=JG&59d2hg8/^h4:2%O7,jSS/_A+Bp62W3$W%lDGM,^ouOH9e]Bb'$!tk<XYtP9@KpJ%@lL))2]Da6<Ad!s77iq!8<Q$hl74i/73Q!M+'\nL1hEW@[-n>jVMG[6@e&%.NGY6oNk\$%e#X:E#:Tk&#o#Fn`q/D0"?cNc+o3+?@AO#:rh+30d"7;bn,_YN?MT:3'8kn-WT+i3E#X1W01X#moV2ONO8_#I**Ij.l#g>2\+\q)%!n[56qB]%(;tK0m.u:dlMU=&s6GQY)k=4M2C?""sgb/lWVoAUDid=YZ0/gNl_>Rj'GnSmc2L[$irF4f0;VWo`:+*mT@cMN-gb1Q<%-c,[hj7/=b[uC4'`o.9]=8oi&hj+5Er-.8;9DuWK<I\Alq[21Tn\3dt^YIk?b6dVZQ[&LM^tf@\b8KbA(&(lk?])?T`VEEK]j@3^%"l)n2o>SZHZoGhS\2OcP<tkTAL%C#8s4+oo;>=Ju<3Et3)YE'gAE91pDnP2uSTiq9p6HY5eY6;q__#Niknoq\R@T`cm'u5[a`V#A%m#>Z6K2X;2a56R,%t="rO6'E>#2NpOf9&WhfA(>R4d(9\I38I@;ucL^dng"m;]ko+q]8C#g<\V`/-1ErCX9A@dr58MVuHL[mlpd"%b:gX.ddu@Ek+A:BPIII-/SD5g#55,_p;E;hH!\&A%Gf_2r%h]+ij!We&cC?=S_K2iq6]Z=]H=iZr6nG*^>5an8&4ThX(P.Ec25m]%ci2IAo\]lIHPSP8ISUK'bo)R"YQXAS,>mUg)d:f7[g'k1O0?%J5j3[ag$iKI5&5MEca-D2(-[Xr\ba>>oFk$T?OcSSdncdq\FXL^%7c43AkH/Yh6pEn^ri*qmDFN.ehV_-nnP$&h7pc&gmk3B)W*Fboi+#R5kSc/Tc:>2]2dUp_2.n;opJ3Y"1dS&Kh?)&Jc@59Ig=K-5%oM=qF4F>=QfA=.1#L>B>GNe9%bhdWieMh[455*f9BHu^O,%sK1PbFXB;LuQ'joaL[E6#siqQ:@tqIkKErF*b=L6\BOK"/1Rc4H?<%";&n.oK0HWH0H2<*3Qu%iHP=4`jIKbHN$QUO((tuk17AXI,7>Ijf[?V`:mcud(JmQ?ho6nk%`L=STo4*@OoGhLe62hNphqZWX+T9%W2Y6--<-7kU>!hU-?T.fUh(:[AttGba5?d:s/aZ,Wj:6l,Ba%YPJ<B`[LSHD_8\e;H0P.nI/U#l*o$2@=`&G?OTNFQ9GIL%Vl)`T%H]MUA@q+!Xh8dU8I8Kcchdb>n+h+FBPMt?=[,N0<?gk_Zg:U%tpeL(/fPX>a$r:+0$bsLV>"Y"E2l)?\9odq>07fn,(]V!bmDHZd%`KZ>F8(F4cI)%+MZjTmVpfWrMO;\$fo=QLJr#@B,Y7/VO3'U'r><-(n8jioi=ir,]S=okU]Rea5J1&O(qA5`tH/1oSC*A`(fmf'L%p!FcH(KjI$67<OA,V%LCHo[3pFVR\+QuuO].J#9&)#]@+Ym`&]3Yg,*>,YB)NEcj6$HB?P6ZTmV(V!qreU&oUSkg['`?aq/H<lG3%Hfn>tb]FhNHj#esKnJE\Or,aEEYn;hUkf2QYY]d*PM/mS2_ADD87g*^I&;<]&\TEa^']CTq)QGjmVN[?/?)@j4QVC/TSK8&V)eGb%<em$!cd6r`>5OBq35\>r]Fi_UC*RhK.Z_[/UojPG!96X>b\D?RNsc5B_pHh!U+')!<ERM!e6]3<NXD7/en)63:d2EhcaDk$eIADK%bQ^')(rMM$S_VB*e>R*\6ZdJ)O1tLHkkB!/YMn7"GKFKD$2lL4ZhZG4`tu15o7)kQ:H\6N-gV91:KYm-$#fiac@d".Yl58E`Ws$3%kZGq+!;`6h/,]%S3Sn/kmsTsUs4H**mJ25'41kI2\%Li&f]CKK&!#ut+7BWM8F*F0JZ^NIGZn_/0pta)[>?Um5!OTY_-NS`TTIa&%0I^N:V_K[)@O\_$%hKX^a?#X5VKB5Hg?MZ[G]+#]gaPN'OO"<+:&pQZ=#h9Y$<oq@])RGnJ2CH&XE7a)&.%4"4TUfLqH[%2a2j[H%"Rr_<@ostEVJRBLZ9gi"O7Ar#;C=$51AJ*SHq*uN<eC^(9`%pep6<fCK6,8S4J]\oT?&e#c"#U#U\JFnEaAG?/_W><Fs>9uFIopi%X@:KhYZ'KI89(`t*?rum?[rgZbq];Aa05VJ!$HX(c\\+2;u4O"7>?D=D+`]B`FH<>I<fC+RPt^+E9&[,6.O#ehUP@P*bu"_)=#a&%*TK0@\W`sZ0-jg>6;E&qN.>eSj<1+l3K]Mk#p/tHBg'g#C6DVMW/Du5"\R46@'Wpd-AA]'!-BN6c[H(*F+Mu^0/,"F6@i^DL[mkH%n.7E#I`OfV&@Nm\ciK`tIf6&mnrSFJcpQ[1qg$c^0]3T]"U"EPn3+bcV8;X9RNS@^Lb:2M(.<[;a?pH^OMhY`1ChIH'FIDL8_Z%c%-p<3CAIH9bjT0?K,KP'bEB]iQ"JR2e?6HJ8Ku$:d!E",5iB*:^+iF.:V$$OuTO-'_JUS_($ZtDX7X>?S'2L$lZ[mW>!3m4i&V^K3%9/:=X825dNU?Eum(Jp;2Zk#_5!V@NGec74N_.0m*koZWWp8dpdOiL!=dYr:?.Ei1,(,<WV-Zsra9,'5ojY`_0/?=OpMb"!s)c"d;%H,tV5TGb$B,0OciVio7[8iDd\"UI:b'.Y1</"hA/!3).9X&";8U6N.Vq^@SnFC9Wr70s!roSnG&Fr[kM&K6[m=;H]<ibQ#2K'8dm%3MXN#oo*K':e6+]P/6EdoEAe"K&\8>4JMY%i>F<Rj&[0m:Or[WGSsJl5DBC\OnaOu"W3t4V2#BkU<JrF<`'d^/*ls,%1bamZf&*A%bnWp,k\;BoB^P:@2PM:h/o,\?3Wdl-&i$KLi$%A<5YDr(p/<'U;eCk?BOHsY1Ob)NatXMNW=K"3L(tEQ,sS8SXPaWQBnl%1o1Q&4%PRS"6+3HF83,HgGYj/kdYL#tYAP*&h3p9`k(D&T_jQa-*$`SA*EG.$W8p7+pc53u`jSh)qVe,$!(m>[9'%\?s/\<;GL.I,:<*4le%,nnMNElM,O$^/kE2d'I*5ItS8$NhmbnoCuta3)i'a;;lhZ2d56&-`k71XWkR"TaiGQJEWdjB7gk>obNS@41qV0EB"pdR-Lb7?W7U%=\42e!8ZfS-'j/aa:1]`p`TBc3O'6+9!5DKc$5Ip1CmYl=!F7gj=@d:X)o13Ug2T#18XNtCO.>7o=h56[>Gm++jNB'b.\rhpR6%$%H!s;F;c6VX26?FeGVQ&-W*ULnFf\njWUFRCOnptI-r\Eli_m1"_i#u*75_E@#Xu/rKWU&iHFD`S&%X16%rtr+gKb&2(_[V+AW9"R%-`@p3,a5bO_(FebY`Y>'OTXq`.hd3%:TdFu$76*K^.7Q).Rb,F;^`C("@=,D`OOKjfm*=35FkHEMQVY*\t&&M(3t&2!G\N07S12U%O&dlR`ShNuMDWFeS-5Ig(qej`#bp30\ZY#E*s$a[L6f^^*2cI,;BdF_^'p*,\Q[P0F+3+/;ETt(:bi$:M^<0Ui)iJ6Q"LEHJYO<[%=iL7B^RHRQ(Q7';iX+QO<Ja'j0TndNnZa#1!)#"t'YIo\NlVFo!CK!)!-64U-D/)CQnhr\F>4LG*1[#L8kB9(04,6j`$O=IEg26D%a@NekU)4.(f\t>4?i:*18$S4BEXX<dPbH_09u9/X&dW&^ik]&^3DORu+LhPOO`1e$)*;0XNs'dO(MZN*,`,1lXBu8a6ifq)MN#pE%Xe[?BX;%5rZm\#("r^#R>3!i5_MXRnhNltFRrGS3lK;Rln!^u-\lGh9]#)&PXBTEjlRk%d]%5Y(llp=V7.h1@!\87J8sE0IP!"Q9%""ZPZY+l:r8N-Ue9I5#o-Y=khpO<OL,#^Rg>S3<__W3Q8;!Gd9l$-1qq\3;8\@X-O;gGS/'[fUpA]='Rdgalb7@bK>[DK[XR.DLp%BMKoo-L/>h/G3Kt?9&tX\3SGl'5tU^"(^Q_lb"FDf2(_GreBml/0*foB"9Xg7Q5dg"pBh&dKtIHj(DnX#!F;<b(6ciXG]&)OKt],%g,o#f<'8.knj?:";W.bg?i*sbI5&faYC8c_a9?)_!eSi$h?q,n.SEVo/B(LbV!EdWA./O0'Gk8^Q@22jk#fl<H!X)C/97K.PQmF\%ORV0YH"i)K*?DBVi^?#K;,UpF!/Etq3g:_=<g9h@?PuV'Eoi[9?C_$CgD\4%3WC1/7FhGhJ25*46//I::r5KkLZQPbW!uAUo9+H#%M5J*S94/4;)H_,gRU3%.J-`5m44Y$>1)A`2_HN-j6A^aTK16OP,,]]K,p*;&"d(2f!@:k/I9D<!(nq=N#!H5lOdZ9t3%sqO#3;ln%5u;`M@;H_Jb/fW@44>"gd\:Ohfu?N-OPr4,s!,4M\U^3a7MfhJd^Hn=0H>h6`)bUZ''Xq=-u3YPj=P;)AjkJ9(Z`7E>*.Z2Q3sQV%$JBGT^gh.Q8c+0'RZX+@B;PP6YU0Fp8ash#n/NgD!tj?d/C,:(/uamD]]%lU`e->h@P_IJ^1Yf_[.Y8VcCo+YQNBi<NB`R;+M5Kn%rF6G1\e,6mWK6R=+X._KaH=g3i%mVT+rYdKpaC7D<dfc_%!\!tA80:ubdDn%AjN58>m1'ffb)dFVERrj_u6Trj_7DVcYa)\JiEZ%%Ue#]=P+h=b=at6#H3EttFTp,H$IJRr$Pq&k0TNT1eM\/52!**8[,;9;@#8"H+bHS12HV@8:&I7`,X(iqd+9rhO>bksD;!<c\lKJY%)]UeFTLj[7eHG7CK.=_i?s.arpn:.bKF@98W,B2?m;*C1c_6"q8RR$[c@Yp&03%r&^Gq>Y@/&,D#4RQ"8HJ(m6k1b[3e]_"ophIX%8uN?R$bR9T&-,H[c]V)B!/(XC++5-QO!:*h-:33:*-?dMnb]EU0iI`s.ghG!WfL:l<X<:O.n\t.V+lDi5mIf%m6`)[,+*7WG,3/W%P4XYp`Tasa+9r[9'm5.C+%h?OIc\Vm1oAK08'X_4d@.Al,[ZJ)7.c0db2jB.Vgh*pAd)rbl=I3[%<tk\1g12'I5'cUG4[iF$d+!.%nBk%d`[iZ$%:`d'8i[n!CT@6(]b'uI4SIRrC.&0&=JHHldNf07,=]UaQL*@V_kpN<09&14a45!ZC:&4TYBM#8)BI<5"=V#No3P;&%e]QJ@!-3_,]Hl),AKgT\J'EbXo6i(\'L0jf`lmIC0c/*.KD2.+F>>-_X(Kl*M?<E@+^ZcR5$CKWjVqcmH#T3FjWY1<<PZ2Zm;s[d%p;nEke\NHI'"\FAiV8GN)*eNN:SL:YbR9%9Kn?:&c9h$:'>F5<Gf4(ElGlkS,O/HXN49=K,15I+MqF./%<STZV[SNFV/Xl\Z%C)^%3J(1Srs3l[$q5bO+%tQk?fY`*6m%ScAL-4<*tm[5ZZQaf9a@oR-ihch4_6f&1?,67"sS'o=6\X#Fsh!e&q]<^opjPqf(Ei6@%GJo%3hZY-B#lEB9F03/Kn-*pS1r=2*'Wb/AA3jXe28P2oN4/OC\ekk7*uumbr>O"<$4jP*fC&QZ5\>%KIS@?/ZkbS))^\kEDp2H)H&_H%%qG]=TU^rlcLP+cCIG5Sa-'BN:+RIP0KNWs!#J>rSBL)-6*$><Z$X0Q0.(C?1n?.i2Ze7\S#O2q1OJ:`M/nej,soRCl-M:.cc$Dm%7Ft3fR4<C6^N5O(iHQ]5#4Jd8Qqg26MkJdN?&Yg\p:4cVMSno5TUd\gFJ4E_gVW8A=U^2"Lh5T-Rdd+g'2[J<<WDY=O^GG5gdRmI%!A*D-%d!G-d,Dle0p,P8LnSc(<M6[t>U#_YH!Q>`l(!1*TfDHaQ\4CnCOoqCVRP%9,:ijXUgo2b1R84'J:UZ(J\OIsO8e)]k',4%%oWMdlmI36cYcP\MGZYa\&`FgW;!J)lMA\f"Q)5u-TB;c#O6bCnf'i1Q))(MH&#q03)O/5DH9q/-A7b!50Q+Zkj8f*V-]o@iq.9[6%GY&N=@gV@AaT4;N!H=C?f-UHLIEMWRa$qp/E7i@n)&DW%oF_mrV*t=OjK!!U/7XMfX%/KG;kee,$]b?j$KY@k+OlRC]Weog]%%Ep%7`?+9d-JPr8Geb^Koo,a)pk;_F)7B*;E(5*jGePP7B*8117*JML]7G$L*e5!HOfOtR&N"McH&@%)59&@D/I>A)$mQF)^'Adk99oe%.ESL^8g$9/N>B\,`0#JC:qW#fBNl2B7k*1>%/rCG;j:[`'>(kCH3orq24*oEYrK_M)bKG/qHZfJO/<j1AbNb*W36+H=79t<=>lR?%31iiEdUe>NBH*P!gkO2f:$`hO;+V)BQV+7@6`Jj7&uQ^'V,bsgR)cehVi!igYZu>=`o%i#8p:F@LK"dq;Rtl1$.4[cX&F2Qfqosp%G$om+q6(TZ*mU(RY$!US.QJ^N!k5Sa2>e1pF%+\c'OBaH&*))94;U7j02!X2Zr^BXX.4R"X4$@ADTZ_bhA8s(5j&_d%UBkrBg7Y:%7DG3BB5/n2Ki2KmV3LntR<.IAfdsqJRc()'<M$7%_tcWf,hZmh,PRqC4JbG.P8`2D9be<a,NP\.pMsF6P*00`o+.O,A^[3SW_G%9%.-HN"-:N$R/@@8EiYX$kEtWKsn?;Ft_[$m",]upWV$o.Rm:X3\?H!G']G@DV)(-ZuRY7VZjuPn%$iFTdSKjn9Z.nh,G?=/)-"489%',)p0?:'FEf%Bs/daK)pRVFo^bSOLlL[epSi@;g+hN:m*RTnD!Z0oW3/l=)FYU5Ot?APNPC@X&cr$eAm"Skp/&1<HbMOHsMP=b_7%#CDk2;603\1-$jH)W5kG#Jp`8@81k:8cW]\_2tCADGE3G*A&Qm7:J`N)("=^UPfno?%ATM*jmG%;4Bf'C6SR:!?KXXb"d:jU-[Di%=4-tpn;f,c>q?^D+!U88;fq7"k5Z`b5'$?H<c6E`J1cK"dJ?XlmZ3]a-XKYLQ\_BIS3h7R!XF<GM%i5u+h>Z%-q:raME;3bq1*T5%c;F6=i[@<FOlC=59fnEROmC\N3;cZ.+M8rRELFsnUOtb!-:q<]*"AW+OnIao+,KqVZ,'#ab?69-@OJM[>hs.G^1bX!3`:#`-Mi7d%/d5l#"o4/P-a2_fXM^j`'s8fP[gA`)cVS146fFhukeA7?lr)&1WVIsSXHbMQ`VauBXKGZo/!f=l=IP.dB\3]T[C@ci%%%-%Ig-K%%-n;kW/alTPqOoT"2cE,lgdA&7^6!Ad>&^U^MZlaK6nb+:Te*lf:^(!<+_;-0n!<"%MUf>DHnkRu3^K(c82^RFeE715S!hfa[Rdu/%aM]/HJ(9r8I"BC86EK*XX;*]npJ*n5bBpKn36aJ8iS\tukC'n@EUMheE>1&3r"VqTJ`6i_VZ_!2T5^V[X=aHlh0uu+=;u\O'32$\%Up?6*=(ki1e2rVRr-"4Nj`P1<XqPlrH!`HWjsZjHYr5TL.<)\#$i0blQ#5'0\?0M(oOY2L)fd:^:ZMBjYR>-l=MGARqa11IJ3S!=%ZC%id@2*@rpdT<)RHi#qIOS8d22I#fF!^;%/'FpWRb&ELA2EJOP\J+Vid@nfDg"u9?1[riZGUgsXOrpcaE]eiaip_Im[pGAhP&*K%*pVdC_7F:alR0XeeVKXlii@E"i0)k>^;:7'J&5N^rRT.L9YIa*f=4ND'd!-AidiTe(Fra^\kM\Fk[OM1]?6Hd&,97]@dua#<oh=c%[.M>9Mm<5.l((fERN>I,iaqqa''5e%NkTO9l(Zigf$:G'Fk\c\<LZY0Zl.9(N)K-]/!VhmN'HUEB1ha*1(\>&12`QA`^2^ja=,/i%H7Z&?r?<k7Z&#sLPXTj5N(DV?pNbup<CWNs&F,/(^61dnP!Q\/2X2q-?\PZIX"Z`+YBEqJI\XBHKp1=-o\#ZHGUs:"<$6n/K#-HY%Obj;lSF1WPm&BcN3%@-ik%Oph`[dJJ<Xkn.$H9Y&\'j7CHBUA:(()'h)B$dGeLMk[hE*_*NX,?#(u<lY-?>_)mIG(,n)W@mla0i1%1-TQD9k`\R=ZJn-6c9KUH-ri??jbt$j=4,LkghOS)KLB`Q+A3,p#?BZE^3\1=\E<]+MIu9!,4J2"ZJ%]^%=saZ/\XOqGipPUN%/>%#iKL5!IJ.-Q(^P.oIGK%Gj2Fdq,3^i1EA[[HQ8BfBR.=$!2&"s?Pj]JfAc65;EShTLd"fn3lm2]clhM<B1oK4&!Ok8BYptSBYk&%%K]Ns>"[kfuO66WpG!s+c%D^m@k^`WAF8Rm*"V,ZI_k-p".=eMti<4]Bd"7oUqbaP=J-Tc&.&5$Y=JDdP]G?r%#dY@X<i1oZ/($k=%V=EU`:(&QQ9%8q.a&**G&Tu7&$JR9<96<68UI!OnB*YP+K)n_RDSJ`F,bk[,@^V%@c]U2rIh#28Q_u8%0"S]S+WjMlja58!(F*X2%9+"D00<])?]Z)HJaTd<-3<_3\g/*C0q5C1G5EC&Dp'5-j7pLo'N91D+1,)4a$4Xd)]Y`s^<Vh0!eNr5uTc`K%&0tWm)bS02.2Ic(%94:gU&.`V<N"nk&+Z*35/\mI)PBFmgN7\bP@Dh@ZXJqMaCWE+t`(lgE%jY)4':$!=Z5!,?LVbYE=jC\UAf"MH!!4Ya"TF/lPVhq=%cj1dD.Vqaf3PYqPGt867M16Cg@\P>AZ:t*+f.[D#Ahb#;>1P?cUb>OSLbP=:FgB!unU_*mq3@r#SB3LK_Ne2'YAX8/h9[^.fhLTL%^T;DP;VoO9;gu"RW"Xk)ZleNF6pj7SMAAq)/SK_oqJ[[._U/DTeI-%?TOBPcnp]U]=gVS4V=]\QFOG9Y)B`obX<J#rM[r(I60.,;%Yk#A8Kd&D:&PphWRg=u.<gJ(`;qP`GY9K3MdO5s6?PFYNAAWqt9N'G`cmtu\6n#FF=?FYt(T;m\Cha)Q@1$]Y\>b8q-Bj_Xb/ji5%^e/&ZaP$mP(dT8rnPiXB\V-5=]SOuCnY-YQb2K'pY\4(koqftsj-30UH+2>n.Z,Wf2@Nfj2j5"lIlN!U?\bLQ9IE#..>"V`1<cXc%pD/b8!"d_X&k=Vt.C%I'l\GDEU$6[B<N'd[q[M*mH=1U-)uYMT(n+B;Ba;+tU:./%fO"2iF@e@$%[oMD)LFc6#I9ro1$%eTr-+J)%4Wscq,Cen<^\c.1rUSiknomj68*'-E46.'rh\l7YU5Y33GI^*=pXtYfI`l&@4nlWcJYT=V2O#FMek%3Xe<uKVd2d/-MAYiU-b6<b%s"Q.UbuG&.E]KcXP^d[Ik:7j7g*)jKPWk,n$,qh`:W#j'/MGFP5)]D!SjS?InkEoe8'*n%+KgR=:?.[aaRId0O=2-k-Rr7A%f.:d%rYV-sGF-u!hNVOV1j9\o"c-5Ql"hZ@q9l_JAM_^;&`m=_?;.pCq$]jg<d2Y8$%P?).=E.1)((9fZfiHq$Mh!d;*:&.^:Y5CNsd9B%BchW]Q]i0[N._6.1u,Sk==NE!'pV%*8/ZciD0:0i>X"Q2SNAZT,b)olCG4n@@X>4UQ9Y/q)_<2!l['AXBL)S9W5N+*P:WT,V3?``%^I<X:PqUO1g2j*]LZ69N^SZBU$i5ri*!rk5H-$*tAT!cuO8sV[Hg9\_\Wd35AFdfP3MDB?fc\9sl+H`<\Ki:i4.$s@a$QeR%Srhm%r3Xf[>5hGuK!qM/U\Uh8[ih4qIa(m+S-6Oo+ig=;5VFl_UZj'SV/ebHEAcF'j28T/*+`TA8I#iKb)R9C/c_52#aHJ:.4spOHjO$;%M_#(/9KI1(lXIkpP<?./Cc0b\<;PP"M/Xo*(KUjj!>2's!*a5F&#YWQ6RU?G!&*cA=S*'o!$g!^eK^)BnRBh!&HXqW;/8(N3gn6f%(OJ'_*jsNTp@8ccB;\Z)jdBQriaO:AWbuka=F[FG(@m`"+r*F7-SE"+#:"Ar;95WWnKe+nqs!S]:PhSW;Tc.%i@YQnDS.]p8u=+A%f6jT_cW$\lBr.<W3).#Lj:1lCPlgr6C,pu3KK371Ti+QAg<sMPTUe3..h,e)b:2$a3[Q!*8-J!TcTe)0c?-(.W2*1-l:6JjD>-O\%#\rsrZKn0NY7r7a8a/:.WK[bj@,F,B8M]6\R>!W%;;tI:2k>&UP_9P8pTo=lKTqCLGugGe*oLmW%-qOcUue^d),7Rt60mdD.-C\I%,-*uW\qRq9:ja\Q>"h(WG"%VZEdTO28XCN!<__kbR[9o2\V!NP+Q]':(Z_DkcL[!,npBoNI&^#bPa"V:ntL6KD]tA`MjIi`(bo#1%O-K-<1Gu-s:?</Z$t<WsX;51U\b9]9rH,oqHm)Tc`Q:ukWZaLi-3K6BDW/VN#`,k60E!N%^C,MgHREPt*cT7p<>[$pP]9]>[ECkH%p(dBsAC:W`4;>1d!fM7&A1Q?B!%H'dF"(/sT>$N\T.3e'J;[Nu]FUjcTj&<a<BQU%;$:M0Q[r*%0e(1;Q%(2^/>*uhKFOj<:e;BF%lHE8fLuhl?-j;7W@^"pQPC[k88"aV2p2#\#1)51'#A1"sW3hd^-U>kt.^N26cb1G\kdWBiWp3..l=f.<BZrqT4#?G4-08t#41&Hn%/*Z-AUH1P37*'2+:aVH"0'3OfFuFukWVoe93aOpP<9t38dfActTYm&!G"?'ie%'#V8Rm.Fd^^T,:d!3\E]fZkNDpj>TF!rsjHL_,%h5]:H(b*<u]ND0C.^A-1`f<$tAR5hC=Bf=A"YaJ!Wn*,P9;N>/cUEAN9sF!f5e:#pHct['_pZCuG2Nan4n&Vaq-81d=kDBNNd(_E%8Wg*;ass"%6]c[L5+j23;m%AX1`(7oG*tt*LC[<D="4+[&r1_WV%q/OF9WYLcsq*R'uj,+"J6&MJ@^Cuopn77YIFq4]NjA.J2;l8%i1W_d#O#];=uT9=$O0Ouk$Z;9jZMfPO`I;A#WV7p`#hE#8\@k"c^FPIV+T_YTf8R$Ue9m(SD"Di/I,O32X9l1lL=&$X-,P2LEq;n%PQ>ls.&IBP=6!,65Wb?X>d(3pp^&pl:ll\!`a;@jTP_^Q`J(VJ3oCOAD+RsQRRY77):Sl'dDa!qFtXY-B4PH%>k)LYDR#SS,*fI.%a`TS=/b)$Pq=Je%QDULM0b]T$as2S77jgY82'"66SLbr(8ABn&MH[nlZ[!)^Hi9b8DlGY_ZGWXRaXE;+E4eG`cZI;q56c0T\Ic/]%8(J?aR(;d(0u#@^I+QZnXuW@*E!$sSP(>leYXRHt@0feqWN;u?0Ri3_31^9c%IW="ZKDA2Y,EYC,iXjI'!T^e;V=ce3Y*Cm@54BK%R0aID-Ud$ATbt-?a`odP4OR>A9uLdO*='tBDXGdj)V];@D:*I-=6F*dC-2gHS_d/?MN6<@1jH6s[=PTAe#o[49V"o'&SIIhXc$4[%$G_KHl.=Uu<qW_plEiV"QGGs$ip$#5r6^bq^t(H7f!NrY;Md:5(8Ppe<jK.dW0u-S3Q`Q'A\[A2LE><9[$U3>!<A4Z@3sp6%W<4d%E#bis/0kU,+ec!1(9:[Y"i:fdf8*bXk]T/)k<fi]F<S.PeS#(9!1Q;#F'td4&Qn9G?.af&;NFnIJe_5*oVE+Bg=&t[Q%[:t-LuN)%!HdRh/t.GlFEYKl65#**7'uZX=Y?mi(6HRsCfA'4Q:Xq808`iI-5TjnnmQ&1_ib=rf:"sAJd$c>6diS?6m/9?!F=9@5V!(hdJ`aV%&/huaQOP7#d",F<LaR(n'6apT7@+o^A9LKG!c1SaC04D3dF*o&3@5LBYErFg<GccI5QD1GU5tf^Ynehm,K7GrH;l^1;\5I2^J`u,%.k'ds/c(n9bUi#4HdicZVB<[AFkJ01e37N;AkEmoYm/W#@R_CIKG3m9N&/m53SVn<OX^.4d+Su7@a^Sr*r'Q6QXCl_j@.:dnDsam%?T$d`ZG@L_'f'sX07c^U8p2H`Qu\/h:uNODj=A?kS2N'J.,M$+"$T5k)Wgp&fpBqHQGaK7<8!IJ`L)Wann$=XY:2(Mhd.4XVCb=k%FV%W<q%c5PI'/E(A_Oq1kQFZ+f`lR!=#u:m$.OX.VGP>kb(6I*j$Gn,nECo=1L^FpMScG,#Cq1F@?YoO!%",6@t8+OUokIi[hmt3%Z3]Nij:[Ie!eu`uEq7UqF8#l+e^D<kX@@2SQ@''(f1Kcg$lSh88_9hP@:a%oZd\RY;e&$7lRS'9_4$bm#%cW@9`V_!!KGaDS5,sP%^!ld?kbCG5&#F;9[P.lJn979+e4bHq(X5O@65#D9PB2[^_-(`3RZMYk>0qkd&PSt8$abX$5h1B9bA,6C#hVK[<MLm;js$qCmV*jp%)e5>WnPi5(C&g&4]otGI*3\5kY4DA8ddB[s4m[L5J/Y#fKo;;kdcG<#7L:57!`Q2WrAV.J$(OR;UCn%U<"YqcnF,?$GV];LQ(?,8%Odd2kJH,]<K3"9+UJOTNN)2LFd.V&0=9+ALGbMPJ,/Mql%G1ZYEbP@(R04+[NC?BD:FC!edE:[5&,T$]"pL\i:;,LM1e/PiSS?i<%!";oX>b"X6)aQKZ4mi6>"d[fK!I<+,#RA.Vc),5-fV6[cXTcC>/+nM1ZRC7)a4^QuK!b\_%Fu#^%I23Tr@8TVo/Sn[`D2b_XL!T_%rMTCUbVM`HBG?Hk`B7!(O9\Mp&TY%1*jX[W;W104["bcZP?q0t6<k]`">AHhe?SI.14b;KUG`u.%:Gc4hcu_G$-M2/l@UfdchX(R%?r#mF18Qa&YTeEa10W_K,8[@SeDR+())S!bM!*i4_5$E4POo#VApM%==u%FP-LuMd)=gC`jQI&LjZ*G[_W0[.5E\@e'#!@\BA,;U%#?D$jqW"V>'5[Q)2`+DPboZR!jI.H*brqYYE'!D;[IHn";80GVA8-.!RN([ag?b1J.97(4=Ho3hgbd'Z;H,)c5'#";[>jfsqmo6$%H4$L2dNm;rj<!QXC+dXo'BRTWf\Fut!1-jpV[%ti&YH8eTPCF)j;NsnLrA(sJb@E2jSW&7>PIgoZh^RuE."@,fKI0^<alZDD'a9f%e$7?^NpK[XH`!@A"iUATo%_5sE&$]`[N8BUf=*UmE"q%FkpuS8h2rb&-0?(>mPh[2Z!t=,1R6&\ek.'L)9JuRm=u1piPWGlXWtl(%HR(mQ*KLU;GH?mT!9I+'qd;Jr^U5.R`foH-+g5k!/\'_Ubn1prj2joW><MB=:.,cp3D]F3gZ]dc]%QfFd(,b(mZDJ/;Cn?<F:Bft%Zl\og'(I4=>Ilo-5BTLdVQ&EsTU9WOm7V@n,XWIDE/1pT]ibY:/[QTEr&[FF-P"fV2rDB_2%n+Z3jRRoe,?t2m,h\:&Ek_5Zb^*[%SF/T+UQll6ObqLAO=ehA$EUI2Z7d6dNPkV@dt8][:F_S8b\"s*eu%4IiUMKMQ"Z6B0>Y5YDt'krJT-(MHXJkEdDtU]DW,JgEc.8k%&Du#qQ=PVTiTG6;:.(_M:>RM+k&PL"U:4=(,JEVup/lD1H4c.RUDM[p(C\aQVY4353W+6u:i&DnD."YN8\i5,d9Y0<Zc7q+l`O.A%6UT6B-8Ks&..so%37+9[Ir64/Uk1;m2\YaTUB",(6:#!P7=b(?c6JtrLS+C36]iB_l:@p3bjk#sq*]0VEkXW@h`H*'NQ4-76N#]g%S2fh@>mel16aMpRL%OoVnQ+O5P<6^b/aa0ZY4Kd.kRQF^*9("O1U5$sQ(;mj4Q"o.T626o_Y[Uq&9);A&=?8Uea\<Hj6U;qAu]W%%(?nLf'&(E[-G0ki?S;-9\qcX4a(.M(]FZ1L?S&Yh(FR@jlDYXLX.b0Y&?Ec^\Z5mqS=+?,aW4Y_\dt1aJ`-kLgDjWV$OlA3`$2u;%>s7#;]XVf`.m7IO$S*k5iLJlE;?]u*k+\^$`7/I>B7e,C1XKFkhi2pT-[e9q?u_b%Ctg!RM!2ss=6@J$bgTn^$m5'38($`R?VKQ\%&:h/NdP)'V,i[/_&?9P.9Wb]YHuKoS"o8m*o>/4'ZXR0lfs/c,Y4%\(W4-D81g:U_-oDl[EX*DYPMMm?L;ZVrC@0(N>7@K^)dNj<%K@!"(MAbNQX#[(?)sa$=oZ&0TFf'M!FP#:.<p'Xm9'jTm&UtqAHY8YL_XZ#`b<:*s8FLGi.s/Lqb_@m`ja;%;E4$.dR-[^3-q&FQ%kEoA`2m<mah`pIXB'7maC3e5M0;OO$\Xlo9\Mo@F\4/tTlf1k:ka"bq[5`;J-nMfN9TO(;,!I%&h@WY\F8Rc#\cEZ9[]).gA7'U(%8S0k=7Z+=KAQ<C',lq;?MegmTEM=XH'1^+1'!^T2Ls!)P$T^9]bO:q70@#QJ$SF4+4s9>eQT3_@=psd?77PAQnmm#"[Zg6HK+!sQ%FEDFUl@DO0Cdf\kRhq<u]eUt%Vd`R)1l4p7X4;g<'sW+1V0b9X^Yb/]3ld^[Qm`o216F+&@Wn6S62V\XisCW;A1Tg\lsr1I1s^?W%fFVrJjOQXE]1>:9g<>=D_d-:O1U0dF/8c]?Q3SQ2ONn'M@SCUCJ"DL?%7Dn+"<<Dq;,m0!OL?5n$7H'F(E2A"(3F#<Nt?+58dIH4%$c2p6+k+@m,,A[P_$0aqFG=Es7R=-c,Z7Jt%(^Ye0gKE)qEksd.h-8t,=OpH]\-^S1"$ieO:i'Gfk;=eW&X%6;b97<ko7^6PBrYc%#ca,+EZ5e:FD:&I#fADGUTD\!&o8/SjOqh)@7[,VNZ80sr@@:E:D](.JqNl(S1Fu<!VoIX;/3!*.qT/k(G!M0Ad_ttmZ_<a.]\pJ%$bq3hb_Uu98gkjH6Si?XCe@[N)]E2,"I(?IQo/V'NMglla$q;L7-r<GlCbXO1+9e(F&?"3^T)s1W(.8V-t+GPP!GaR8,tJ?ME<,b%:Ys\tl<=+;8WHpeVP`jMZLDTJ4<A6^!]D;s,#9"P$qi>o4!o-r8AAU(UM5gX%L,@t_ABam?TJI9Y9siuHHF&8/TKs*@W+`_(l\%8%prl:6m+I=E.]ibm7,,P89oRL$akhk9X.d'uW\#tic6#E@1*;GAF>b3b;q;[Dn9,9T7nn"DM,TSfRlh_H6"12A:rp+&7T&##eQpVX%\8G%!7Yc.b_>.>K31MN0D8r<er0TO=5l^[[/BGXUIHTfb)TQ=1K=XpYerf&(cY0]_>Wt1!3^;88GT4e9i^&$)A#h7<1"b8n#gFV"%CU7YIlbVimdg^lJiitPr.VC!5G7[>g7H\fEU:u8ur+q0n@JXR0N:2A^Fl:?mh7qQc(dPfHCnt/q>iPUW=,*t5/,7R^rm\Y5MCbF,%rpIU[-PjhN+_nmO#Ch\1C"]9<bFdKKDfY/'Pj_L:gjTsb*YGT!2rJC=c;\\gd'C^b-*p+RA.;N<W%,+"F9NS[rqNVpkRI?Rou:om%7rR<56`fG-1C4ZEUO1KU=!Ucsp/%aA_1#stoQ2#+N(f!$%UbCD4j<U61HaA7Zb8abi3A_:Ki^\GH2i>qFA&Yh/+NFuqa_?Me^R9'%oZ3R)a*2D$ecg>`e:-:IhM<Qe;u4O-q>G9DPia,[%Agst)rXQ-EI,+*gT#Kb!]apS6lKYp2&YXa*?0`7F$4@:\Wo2>ID26Z**)]E%WN""Q![oZS@jtLXe8YF?$9>uQ^).oX<kks&%aGbT@q_*!Ln]6^8kR18jb%^/fFEf;P@!@)_X&[??L1;#1*(A'YcfM\?4;eb:Th)*%miOG\;%b(&+%i<P";aOkk@4VA_'1\@e1?bj[\p6OA'e._;PCA7p3lKu#u-,4Y;h9]#c>&FPa`1$7OD#I*4sTC2n<Lcj?q;?VGA'P%&DQ(,C5kZ'Q!MB]Ad,S\+cr([#gLVSbVG`)flNT>Qohd]N*/o%Z#ZG$@kl!XQOf-I19822F5GhaG\JTFh`^2kN\7Mqac&Gf*aS6j%c,Vr1UM7+)'@]GB3/k(M<UC3,Ec=/u[ZHW'E/"n38+sIB!p6a;NY/rlq]gF_eTU(OH;t=YOa&JR*V2`IMI!j%V,r;*+a+)p)4K8>%PbWV#O/&BWJ$>URR[S6^Rp`lM6ap7`okqu(o]/8-ba1SUFa*BQWep9^G!aq.bAH>r@D9S"`T'L-N9qpR5Cb9d@=5c"7,;rW9N6=B%0V,GAO7]jhG`CBRIk9$cGPBKOo=7udg2'o-Yu[%$)Pp5pelICoMqslM?+s-)^Ra!Q0LTE7f_p?Qlh6<uEMSeBpPW50/O=PM'6B^s%.+oAk2LBidgV;)VM7*)L_p:XeTqbOB4?^6AN("t^/26>0@Uu2if@.K![WaFR\'hm?nh?2YY$bZ'TMsmN&;.h1GXdQsYl`3?Ad*b0%6H%a.AV,:_3$hMMbNAF`A9;[!5;G708;Fj+W<.6\AD,"p`+")J6>WR-I2eJ,kcZ%LU(["@-bUaQkKY/`bSs_9^*T'Q9DMlXfp)5U%Tg&mC2HKo#$]h^,26ZQQZa@$d;lY8blNaKEGn</!37nVEjlT^=4;`\8WG1<NE?GLeD\(nN?/IL?&OVuCk$I+g/>HI3+(\"@0\pD8%M"C?]bFG>@Qte6?q[VG=1_Q7.k[*_(_1Xb_R0:MMkbe..i(RL"Ehkp!d!1<Y7tc4M8,B]\B!Feuk,[*!oDkN-DN>4qbo?VV!kYBj%_9sM7ktjLRlTN=>OdYi1\)Rk&_>/LX*Wl4jR835fqcE9A$U;k=NeYl6QYG"AQ7tC>*s#T%/YJ<<@:7a'>%E,4N\R4T4#5`2/jr0A%Ng>fV"V%5>Q;+bk!$<7`O9_QcGuj#>-"1Rs&<N7?iM2NdTgAl]=MGDQ:[G26[M%=#^9n-?.!73V-rVXk_8Bt>f%bPX@1"1up9058%V/3,XE+3*qcSi_:@!"+?&EaS>(lb*t:9K8IX%!,%C#)#^597nl%/HI=<-%U&^$J)@_$H:_5JVo"M9Y`7aU9ug*Eet=9nNp9fE=*D%ZRA6\eoiciS-;2?BHB/T:8DuaG#X(1?K"-oCIh\4`G(C[j;rG6]3#O<#:EY5281e++@.LQFM)O4Nlp\s[4_q(#C=r*HGm_Gej<nf%@fL+XE0Fdjr5-['d_XUrThWmD$^J\gjJq`k<&B^SU-k@?aWk@_L#>:0Uc17X*XL_=hZaoEcOO%$Yj4GC1jcGZ7@eJ!plP7S3="Z+%Ob(?D7H"/RJT#>gFc5FDj7C?lm\7KDKlaKGEr1*fh!M6]S66bg"m>K04$imkruU$ZdKb;U"AS<8Z,f[RTX2n6!8!<IkM'27fN:,C%FV"okp[];+PhdHgj4p=\5Z(:mq?<f"nU.TOeU/&6PTq,+K<a3pM2ZQ[!t4K0Oo8Z%4Gj$-_.mGe*X2LP>N<QQ[_tjM/%sMK2TiBS%\A7Kj>'/.u%PG,C-\An6Y2e/"/5^F3WHu"ng<tTCQ/k$[.S-WL0D@35;Zi0(X[P/1aj8@<?nn$;g$L]>'p1BiQb^3up;NNe=]D-(%_(H:ROuG-[^=n<.M+f0PYh]q^lfqbF)[*:a8YZ.emnuPjTa>A/a#^1r-<&PC8I`XUP^!TB_kQpJWBE#.:%'5qY!_O%8j2b+75,BN%.>(O6@oMJ[ccgAA7mmn!*E<fJT#[OVAsE"&U4qJ+fk<#'o,V?F"34pC;g9grIm;]E%T2J94ug*]O>EuF@b7M&qdS%[g=b(lC+C$+%TmnBB4k%e!aoo/dG&TgtZ1.a')iPd.R>hV=^HD54a?V*'Bu]QJaG.(Z%)I!B092>1P@c(HN/jOZN^?.5]i%D[W/R0q=B^p#^ree*%&b;WS0:E3<5<h4B),JPC,82+o$q^*daR\>8*3Bt<YqDSnOLuWFOWF9]Kjng1(kh2UQJ5!L_MKhG<O*:'ZDE_$Eq^lDM8d2MgO#4<%mP^74!Y;UE]<;GUp'U[B6,O,.QDtYef]%;R>bn`e/4?FdZ7W@"M$;W]7L$lL5-7ccpgu$YkE#\TcPs^,ec\OLB&l4dm2(BG\_d%r%bt)2J,obMsSf:d$?4Rh_qLkUG6Sm*eo=<+P^2Iqe4Xc8Tb2fM;r*hcI0Ug,"=reoQRMi>8Skd!T2no^l?Ksh%b@ltUR`K7=7FnIb%.3P*smr!.VNd)'<(oh4jFBr#("<.qXM&c<Fe%tt@9U?Z<-q[+_:PrU*b"Pup-scpjCr;#I"37\)lj1h3Dn8oilSG%nInYdlO[M0X%'^86a-3=9c1_j<R+-.m#4UeUr?HPSc2F<\h6,Dl&5loE4]YcbA*a%2<l]"=_6*cQ!IL]%E#HUKL3/tTDcHoGgJ6,WfL)pjp1<:"R%eWUo_DWb1irm"Va1t`[rpgrT,!5HLbUA4[rCM]dk[A_Gi$0e?nId"<58<^MN<#uHj$qs*:[R/6cQ;O!%&8Rr:ZC-GZ>n`@6e^Q]P%f[(I[(Mc*d?0hSA6=W<,AT<Nq#Eo9:'l-88R_t9dNo>/S_f85*d[[3To8L]pJ7;0Xa^31G0fSJ[5Rc-UR:tHTWkf'"^O3[9,j*oG%($N!h]+Smd5KH:eo3:$1M]q79$n5nM%#%',UD7-E4#je-.B';.D*TpTC"X86`n3_Bm@!1!mIVt(l,Jp561Oq`1_9H0]4PG-V4V%L%m:./EhXZ8$(VuL@58q`fQ[2BmIMC:&cN0%V93lrZn`=J-rjlY8*&uU"Z&V\*C^f+A80#9"!SiONPr;u[U:\sZ*B@&9M^J.DOsk*/%/3V1bZo>PC_XBndWV$9tiajVod_G1OTE&F+bXf#[%(%r7bQh'$N#kHKoYZ!,r?rKi"`iX]FCa]FM]mPDeC?0>(;\ZLaBs5n-EOO<%d9-;0<'`ZsjD/WLQ[+$(ID@L^f@H@'ZT$B\QqPHR`.O=!i&ZV,d2&Iol/mtcBQmP;3't#uF#\s1jRtNf]4_I2Z4IVN/a\Ol7&6;a%h`.DOYg]4mMr77sE%ss-T\_84J5U<Ckc[2+Vg_K;s/?!?R#cV]!#=2/n!\21Y4d_:BtNdVs)%fVd_/te[sP[oe7k=>^G4NZ>T^#Z%QrAIO0DaA\`Gu63LX@?2JVq@>XplguRI7n:riiqs*?/hgp3+Y=\NrY(%5`:#>8NcU%b'o^GMh$-?0PR,m[7C@1jc39L?]daoAJSY%[%28CM().$EfhRhq!J\4&m,/k@<R(7],SrRj'M"TC2>74DK6PO6\Ba%T#/$pO\)f7,`E26pgX&ADE1nU>c/e3Z*hR'?uRecK;4Tn%7Ub'6]#3C-Go1IW\!eq;OH5qFgONa55Z=LgZ+mXOKCk+$^"`[WL5K,*Lm=<pmJKgCQ#*Aga>7S?`@\)H!.>6?m\/%jG!'cW/s.Ac%Db1f-K]E('nCQ%rZsJ[S#MgqK9lJ=F%ltW]p@jPbqb.7NDEA(]h_;,m.%d(NFdin&d-N3IBQqjOcrk[YCLR(Ne3TSZlEI+FSnYCI%T`.;S]ONO.4t,$nffd+jR*W,c[`p\?>F,\b.C6Q_Z-_Qf`LqTo>HZU=BJJ`)2AOt2\"F4g:T#\[N]%ETdh=g$VLsnh0oM@YA_)VP%GO_?AMgJ>"R]ZW<DcVUid'0(kX6Nht2_oJ&%*I\4=D<X"8V><3F;P5Tqm/?fF\n?eafmkGXi&qg`LnGq4qMM)9aBJqhOV+o'^T?L%lfm:`TBec6<iPaG2/b\B>e"k=\1KdR2J@;aVJf!G'\5_!8mT@#,;\J7EbfGi9Vft%%b_OW#dhihR2N=s_+0N&D8e'gb."sCEmnHt%60$I.cgJ+7TVGJj,NT65iBa_cd1NnDg+t8h]&rZ&#X!Kp)jJD_h)pSZ#$i=DV?1'B%GGA1[)lTg),')eq7)cB@06ZXs%[F4a"7MW%>6@C;fXB>'&Semm9>lH,*])#_r4$\+I.?")l(AF_*N\@qPGn_O1)gpAIW!%r/aRSfR*E%g1-(X]\$=fS0cbAH,BmNUkec<6mN*FV%a^%']NDXG9Z7oZMkS3>hMN&#QRL`ShBJCG?F>=bXH"XL\CdI!=)/<`-11EH2oMBXBHZ!WBFO7.XUN&CEZ7jaL4hp,T`[h>M'WA-3%`bRd%\atOAN$tob6"(Him*<+"B1_$UH_J()@aMM/.[nXXQjtU9o<pK:CjA=-_6A@.7\QgJ"EpS,pXi5ncucEd`OkW49ZN6-9L$uT%C:C5sL^*6D#DH%%YgDe5@p/%,(6*s4o'M(XT]P-M_b?OYiu=P"d*N[oY#g9>`R<121Q2CQqPpsO\/3I+"q?p"<8gpe:Bhi:-bT^Q%fMg_R&PL$Mon=d`TP,$RfX>6D^6_3>;MIJq`F(/KoC#)R@F12;I%Oq`LAU+\#4f4`;nIr^P5gW$n*kY!`g5>fo6lpCfB2;`ZIR\s%C2DL-;;YDgISd_?G)OqU#4:5T)6`Y2JDi(5co[06gX;3\-'`lGY[uAO4].*Cj*dD_D[!"RIb4G`@=5[STih!b+Oe&rY^AO_SJu1B%hsSbUpT&3A']WD1=qZ0l(9N:qp9B1F&p_+HE@`$^/p4('kB*>6l)UQ2db_o/cKm^AEfodbU?1,EpKhdEp"R_^hk3XtPP;]Wm6I0&%g[jO[_O0H>ULbc/VnT:-=S=.$Zu+>3:n$_E>J?Y9\=lo<MRaD2]nIo9f'U`Lj-s>?Dkk/5]p.X5$"g]$[\d02R;)!RZZtdXUS<BH%nsoS>rJ%f;MfY_'l##'3@$Jg=`SJqET_b61EBWpi#V8Xq4#Xs=rn2F,d+a-dNlH8?7.l6(V/t]VSK;:`D(*702gZpj22Es40;:[Y%kZP!t-Scc5J#qT'9o7__Nf_8=c\H&U=);;+#%tW45)2*fkDp([Z5q;2,)^"7762?Dka`K0*>$8o<^=($[)7.c"3Pkj^$3AH:=)`f%d:-\=kLHQd@S;nh*>V.+(5)1[.*gL"+-]u6[i?*@aEcLtO(md7,9=rnOi^6u%@YcVat5l;X;P%u(L#/oRVZn\<<pM"^G73Q+><<b%Q'mYEFG"b>iTO9'XH()KN9-_bqmRCVi^*)5\(*cQ0"ST2=UkcA/ofHp,4FE0cmC^Brt!B;3md6")g&*tE_u+$W.Q;If+!XcMFH@$%VF5]Sr0t&)S`06Ped:,T-(EB+^',e>HFt8(SZ)qY5Etq<dM=!no4ChIQ;sZklcC@9b\IhJ6a96\;D.>E,6j"n9t0ihW.,3j4NU#@%=@YE/`;;oUc@LSqUBbut,`]:'a&ib,UDjeA>k'3\R8m7N2#L2"/cF'QSX0Pr0!IHgi`cIJ0Y,"$!A\2X5ja8O%oX(Lo#JDoA!V.I%1CA((NA@N)mdA#tPZ%XJQY,2B4*#!b>r$PYh_(m<bm\4=o`S5LDLaDuiHMp(+,D(AoMLbh;Ff`V!@]Tm4-^:`h<>uXA!k^*d1#8)%9QJLG>F!QG/Y]"),ihNND_f(fB$:!-\^_SW5:fl4?GD2[g?[@jbca\!0s_`AkB4n$=O,MOO84u-((Q14di$sV3Zk]pWlYRZbJ`]?%f#:cA?g0*siN1GOj8(3C8p>5leg4'T2<C7Q\i=+opEjZbkuCMl[HcG*l;\@1WHt"JZ#4Z)]Vm-LK!LDem6pW7dr$+)f?"0(^o&R6%6iN0\8*A*1\)qP9<81GOM=Y_a;d4%:Iqi.;L*t"O0/$)P,5(/1]<n&8MFaPt0Is7?e'':!lYDhf^IjJT@?fl$>n]!B0Yfa]cE1hp%X,*I8cZ_J*!P-a:`A7*#k]g=P(rh-fq+jNub1]H0k.:k0cI$Sd:?n3j7Q^"]X=Htgbq;dn[G8`2:?Bc-lG-H?>?38_CY;>S/C?WE%O,\&%-:JYRJ7eFA-d@qj.&L9HoEQqGRY\-/%@Ec^"floYAkkW`K,:+PH.3P7U!^Q:eKdY`<-bIPapY7V&iJ[<m]KlZjCg+ubc0kf%&kYl99>fi+B2jGuS(T2oR\_?T4mP1eBJNW'pLGWJa\faC2BgXn?8]AR.$]Q8/8aLm]S)=ZQOZitG3J"`CN;L@6&>)K*K+)b^MX3r%DHk/UNqF?^c)P%]:-M*Z$TSH:Tk[OSS`pSU]m.X\]M`BXp-DA8PLOo$Vl&*AZ%3V<CU?.m.d6IX]7FEki*%0OS^9ILmCrWb@qNQM%Ps]>%TUF0l@<2l@VK&ibV6W5=dP.X/XWFt%(FYLGfW(2V6X(m9.W&!-?9`S`>2#MO+,XuNUs;e.1!;H'#j.0+QpE0gb"M,5)CjEq%GQpP]:9I'_L)+`]Lr$P_),4k%]`o&],Bm@ZW.Qgh]&'A1-7>:GqEm`pfcFb+[-,m`[,JK6`:MA;#-^X5J1&ucj277a%grCU[s'p&%h";f?H9qe.f9Stg[`WK7Zg:WlN2m<$BtS@I^CCJoDfS<hSZbjOT4.BQeQh#-EO;^SdKl_-Pj.C4BiNUk]!H@QJWE5n%_R;43os.O%a3'EEc:-MDm(lO3&?AP<f+CXfESQ._'9@J4!^;1tU).guW4R4r$+RF_=bajIQS;iAaVqFh9?A)-,hWL;#B(1gf1sH)e22b&Xa])?%OpQ4_@G5FA6]$tbW(^1_B))So%H)kK##>Ms<2j%QkA+Y5W>9cO-F[9H/j"VBGLoTTpH`>hSa/)1!fMF8U(6XJP;RYbQY@l3>j7B.%d?Oo"YYHN;3n]'?NMnsRFJ\;s*V%0(5&P^pSE:X?iMAepJKm"V=C$Z#dbkG(9O@SX3pihGS'NH^j/:Or'4djGP=E/s25)A+%As<s%k`+Fj'Ys4$gYYt?c(,GYVaci`a^FD8Hs*,&_9g`<6X!i_bXH%,ct6:5pA>,`'g-QS%$jehiT)]Nj/Xir>s7B$"Z'qlh\C:H"UU`&%j]g!8XX(3Vb."+jl4?/NGR9&#aaNGK$G:-I-EkO25PdXN5&@#XERN0I-'7bn7$D@=Z;.R#TDIrH'(;<3VV<8qc\Ul\#<T/6dGrW$%S7-e=[37U?@=7jWa^&*Z*LIeq)<7cEO3b\"5\E*h*0F.ZIeFfJXI)k[Q&[o+1g9.b\:Ng.UR>^b_EaKNj3qbM,up_^d;(ld]Wnfs%)Qh-?%MJ'nj;LaTb0f<u"#LptR[HXG>P=b_qDDGVmXk(PHB!Z*3W7ebm`/ouW$gY'G&_htgh,Dnc3Q#bm3662etKX8_Y).=cW``[%;jA:lcVD(Q/)-EhNali^jNo[jK:L8Pc%MKqi9O=Jd+NG\>tVQID5h,CGks]Zbf_u3ej\RGEDU&n%#::Q1ed:cS@S?Z^#2!]oQ0jR%&@`O7JD.7!?Fq<XVRsb<ZH6tcm]7#2C17QZIbi)Wcs&k^l91,VY@5k(bC&R(&`;l2dqk<sG@>1p=6fAFm;oM1Zd\gGS&]-LY[/i7%<iu@c<j`Z0rLCmBfCYfi_NS1YglI;ADq9gZ]it'ge/I&q6EFTRO&'U%Fgc80\5/&RJYrr;NeI%ckrC<:<pC/jWQ-\DI=[r`c&ua3%g#HK7D0>M.\S=L'+$)KcFDLA$O_t!%ei"4`jR1/@M+4b-LgVf_No\u-pG<<N>jf#A>WFc=B0aS%,OjBXRc7m89OXR&at/6p]oM)E%#DS'AXX5W\k?4E^Z\\>V1WC:]*=18'WH"hQTejm*)^X8!oKYQ]`jYP9:,O4_!Yc$lk@.P`5t!66j)^H;-(S0EqjQp2>J^tHErOo-%;@Y^]9"6.)9LMsiB1)[_S7uLWXT>Sj.igHnF)sFf4j2U-AoEde7WicLZO/a6F3Ef`kd4Bl\q84(0m)Cn3r97FXHOT"6YAD-Y+W,&%(9FiscG"m*>:k)g)ERa&3h=lHMAePQ$9DJ#i$iF)lmq:9WWh^gTsLqq_ps>JW1gPQPA7-o>sh[>\@N#.-*fLA%@qnN*VRNgf?ial%,hl:cc$%%L]PZsjnCEjiL;PVR:bp;f7VX%#mW)>]'f3eL-U%qX0m^S]aT8<-hMm?Jg=NfURQ\B@n\E/$l."Ue@on)\W++dM:5Zkc%k>TR3Osp/i5.f,,cXAi'+3sQ0Wgn,m5==S5>$d^4]siHT/1M`WA?P8q1+Sb[F/c3RcB58d)NKEJB7&noTISQ9'SMtu1Hc.EJ(iO)%BoHs74*A8Pc.ctt[3g[JDYfQYod0kt-c;CF2IfF<h5n&%oMJMg@Q3WJe:,;$UFi7LLI$$UBrs'7C8bak<=1hR9Rd2'Y26G:@ub>)%5!%.qnQ9'_0:#52Y]l/95!iCRM(,TURs%nV=?Eqr@[ZUp/,iXnlE"%Gn44rEdNm1_an3sH$$NC>/_r&&.PQj[A?5m6l#o(ij/^Zj%"(+P=hd3G]QW@D?b.9FS\d6=4Q**:Qh_BB.C5(/n=c'$KqUI\1n+[S_E`A[I1gN>DFaQN\<_\Mn1[%W4UWscY+^.ih5--54lKPB.%a#g2d5/DP;MUa6kFZrAsURd3MqSY$#>$^ab%m#[f%b@+KE]N`&X)br)@?r,&oB(<kqg(7i(D\#2[HK3J8Jf"_2N@^g[?^/7#JluE%n^Rp=%`TInHWD.(cR>BXMcs2W^cF!TC,d`/44+E&:po\Km*_8Z"Y+MmSRcE>9hD+[1lEKZMXBeGjI0hJ3BPma`"TGknt`67]X%&P%qasjYq)skG"-RGC7]\TFr-3YS*Ks<VGY0h#jJoSIF[]9_e=*#F*ufDRnZ'6+qIA^/lV$\KQe<6P&=o1`LG^gr9nlK]RK`!#aQQIK%eKY/o9KhVN)jL!3>hb.hd"uh$P5XY;g-p")-lMLAn/:f3Ua2oO)4:f$OZDMP2=Q:R*+WTU4h_ir3Gj2Yp=!P_2"CR`kqb*AJ]Hnp%7ic/S-csG/<=>B^,D4.c$lKq`MUYi&H!FVm):L_JKS/h8B>lm06k9F'2CCRJ^5"o&60Xs%8_$tP4u_oJ=_<GU\m$1/K7-I'@BqU8%):5tec#kiiW<6)bo@,bKl_FsVKEp/;p&u1m=_F)d-m,KN\mS\n=KAU-mR+>2-WG(kS\t&F[WQ_]dSZK+iS$lM8_Zn<1t&Gp/T$R6%buW^jMOlgbFE5X<e\S'$eAItW)KDY"^)jHVqo;H0%qg%mH8aOAHFQo'=k$:ZB6Q\MEV49!COJe]FANK\E[.Mo&_G.jiH1ukj>J$<%Y(ngi4%_!^)I3kTo9Oo]eALNoX;i4f4BXh;0c%+Lej5R;Vm!0l#-MBI,,$OcR7Jjcd`Ioujh.?EOgS`7FMsd%%1(tr&uVp&a8PY[%>()2)32n.-m"P4E\=Wt)E`JZ@YW2em>GInO3pVH$om(2p[qmTj4Ehch<LnC&33KLt"sL@tp8fm=7L[i,,>D4tZsj<3fj61=VT17,%E38%t$uNXs7.:!378lZkb\b/*TDHLHU)k3KBh0CXUt;"LX4`R,Q,"0EBiuI_Y.bOYk&"f.XL-rp`m11@*#:"fZbP.lAjEItUs^hB%4WpJeZdm%3-`T^s\*Q(&,'@"M)K4;MOtrt5lIV,TeBR$n<2?7;)GuWSlGZM*Oc"I!6q&Tja4W>sL61'S>TX^mlUt1B5%N1-Pu_6F%L9%3f6UN;m\K5O..3(OtDgS4V&Z'HDldG9#\<H)-ob=`nh<TkI:JhIs]n6S,_d/@%30UG\"Xo'\c]:)FcdqG&6`hibhOeUcpiL1p%<n5<On9TR8m&L^63BcS[](.r*-osmAUX#rZ[]@l4WOcWMhTZ3u2>WcZ/KDCWGsR^bR65VVg;V=V]"1VZlYqg&6-bLZQj6W?d9#@S%bf5jt!.X!KB]a7jZQ.kZZmI<NR+O=&*EsMPNK3Xs4$`DX(5E!-pp8qAok8=j36!UHKL<IA3#q4S6m!RS.*1PlS^F2`AXrD#=CtQG%-q]Y;PW#W/c@iaB=Y5!bMr"4C1Xk(=ZY!&6@@)>63H%o+a/uJt'tYc=/I/+]M]o\>482Ep3c6h=Y0EW7?;WMWYnjCD];3Qc)2m=\%e\`itbCkT_YSN:*YoE'd%''=K?[pY,_N&PO4m"8a<lJqqG#`0Xq[0t5ihGP-m8L"%Ut)+eqsX("X]c5R4h!.\8`$lqgV75Uka]B(%%^.>fX>F_jS&FK<%cR9/i(-m7#K^gX3U2amS0`-;l($a-*78hJPVa)TA;g`C/pH[?aK=<OmEUj)kk9gEg[gCRmAYM#eX/5!rf5O6%"-bY>@Q$d-3h0C>S-OmW)u1d?Zd4Z!go99U]4CX^\[o(c)\L+\,\p@Hi]A=L37h6t,BC6UqOI.UNK;.`cHkjhDm_beicKXW^GXr:%kdA,\@^o(u']4sm/h`tKlOOS1*d;c'!BU*Omn'PD:6p[7\!kSn%ZnHEfskcXL\J]VZC9&i-YSa2doY"de^C"qo$P%;c7BcMIa\3P%eT<jX82=t,s4F<Nl--`=EC7eRWp*8lOmB*G1Y\g)Ch:Mal-*o,[./TTWp.`Bko?;^WM>p-/CuM(J\?'RFCqS31VF7"VDE:2ZtDlJ%;b^n*94r8!r$eZ1W_kfn[J#h[>"rYlS2Rns>tnt?IO:td:0C;(m&K2,KhkZBBB<>U[[PK%`D0?+BB[LJ-f1M2\e@rBmV4f;)QSTm%e!\fg2nGI'X90<9_:<X>]-W1fn-u=n1K+h\kd;#QF>\52)H9F4gV,M=Ra-j/W]/e5C:[T6>`G_[1TR@Yr#Xb["$j%.!:%9O<nGkr%emIsIr^`mUgDg\2T8m[m]8lYkhWe<'-i[LY'hW&EbL>\DeQI58cKJ6qm\l%=.[>*'+]1sG9uk*o$g7p3/?5;DO><Ki<#%Cf\t"4Z%l9m$DM?-UtI<O9R-1ca'Q5[bt:,\_M[SWC5MWl@[@="YYLks\AYu'Juk4Y3'j_J"B+1aQ,BC7VN>WHoJ:\'o8bHK)`3iZ2#pmF4E%8hOb1FH-i%fUkr?5BM+\[2N=$3;L^UD3i>lBC9MH'G4bKrL#ahLU$m+h5NV[7r$prI-Al/k##Qm!V]j(_b7B8,!)p6Qu(CeV8B%n%EhBk-#GsE3l'+CaGBqO?l=unRXMpg1N"-$;[Ma<[Klg'b1cNsf0XO$^iOHT57^4ss=N;R?6ljJ#T:V7;I:3LQDXB./';8&t/a$qn%2jDjAcff3=KS<^CdnmhZ29ph94q.[$eN?(YpbW\,k3PLFrP<*Iq\iB.Gl"NRoL2'8lbK@IGM%tODnDJ2U,go7cj0rr]i8";RoTmJ%Y%>YE3@_,<q?DVXY]_0k?!+_#CYZ%BW3_5+a;FLc@-^4KBl01_.2U6"=n@!DG%[bcWjd(I-!p6NC>2;7l3qg8FOZDp']nK;qE9]#%Y5\IT^:^YL>Zpq;n/\0e(.;PAcE\HVES:oiChl*UD0H?tW9:hVTDR=!e<$K3-T7X\r9h,`LEnCL<%:n5WatVt8%i;trbufH&b4(\%s3[M]Wh+>/"qRmX>FhEfVF>VKU7EBF9)uA@gt/R*Q+RCCh/IVK=Ofnt,VgA)KQh]QbVFQ.6R'EA*r'6[E0p/H-bXMDKOm+i\DjIU%<Zga`]4m[oa&n(adJ/F-+7`=dJb_^?]p*`rI%p10hXQrkPS`cA]VJ^$6]U`Sh6co_iJkIe^Ml-tXlb`DFSs)2(LO221Was63O(J"%G-IDk2iFCtDpo^YZ$&+ud2ghg"Smb\a/23Gm[bqFk6Q*LjGjLZkD/,>hX5!^`=?]sE\?]T'%>W%f1b+DH&'L[+.'nk:IRQ7S/GIa%B9s*qL`-+oq;&Lte!O`=@QJZ2jfg$\G-P2uR+ahIi&e&8Q$Jdb`cQB<V@<-sAp[[GB:!45Q*V_jSN?dj=SY.\?2=+h8PG<lLu@[=%.6HqU'Z6i=_g@>Hq1f[%0pa1MI7A-?r.l?Ec*b[&MLk_HfGEc^p"UdTEj@n&m)NC+oaFXRISc'jZ\_a^*F=MHqt3e34Wa)jhYIh*%>fHOj@2Le24Wg3SR^t=sf(66g=7uX16k$s-mq(#[1>]1+IsC(-g>#fFq;f\TSXU/P(9^tJH1:>$Vq3F_rTi0#bjO53qI8c]5'>hN%/%"i>CKL:kq-Qi/hOTT!j[Yef\@KS^-QYLa-XBa>4)AOgT0Jg,&%=Y]$#fk@la*UVa[9ceh<@MAJ,[C.E.@]08P+.[-@Re2jd3*q%B&Zq)CFB++2"@?=DS08%5Ns2sjndAfa]/XpcY;ps2DsmfWUO\O8'hZU3A)sjI(h]1UN;>Yi8HWXRP_Z9_mt8[]XQ2BS+':)@aX&C%o"+[*LGRpr:&4"\PCE'mYPiq0O)Z8\GMhEQ-FImhU\C\",C&PEjH!W\qIlpdlq3m5$%G0<rl%HrhbTkODeFPd3O@C5/1:$>]@Wt,%?Cmk0Q*[*s?*2jl)Y5aHXE9cG)YWm3S*/oJ5B5B?Adk/&7!6[t)UuE/G&ZC#%"!&1qttDBdt&R'aXKfVTiDc<"IqTb;k(+h2BA=?%o^t_fb^p>\"(#T-eWY)dH>(jIW>g,N-%4^f@7&><A_dgO4F)meZi_L/M+Viqn^GjYf3u^$][i0gGN`*D-Zj&J8o&[bbY7Xr7;:!u%:@$D?5Om^DPbdF%3%aRE88RXS\@VOr_Wgd`qWd:6.7Z0?;VO-B\GH%%+7.1O5O.gZB<)EHh/G>@2UYS!nuS`O0<ZG[-JFoP3-&Tc%OcnP?+'B]N?L*qZO6B_aDpa4h^uJ`f4798]M>:Tc=Y6Cm`D&(;`r!g1TTLs!XDbNWp"mMq$+'<BCudNZ_\2+1Vr!YW2ea;mM:KGg%f/5]1p@BBmZGZG3-@/\YQ]V9"%rqX=qT+?!T2(r,3r*aaE/A*Mmo^Xj=gmR_9S^cql48$`J`tNYrl_ohdsT1@C?&$T7&W;A<f9t)%aAfqc-YH!3PkSEW8Hh6?8`Kp8YF`DA]68.fcHOKdoWI`:=(VrifKl_)S/T\US^Q0;Y&ZX^*LP#+q]OXWb@=H:_"Vp\7BqDl0qkk7%FQ%5n+]I``=b*j@!7#s&aeT'ER;r;*7&S@m"ZU9-i2Am90Niq4joEOC%M,083,9!HHEE6u"k^'%'FStA%eajEJ@"A<!l^1k"^("L%?#I#0<enp$S2CPUfZ6S*!h@W6OW6W3?:k)5*S'[%jdZ3;[c9Km-cY]j+6=I3.f>N$q$q_5mDh?37l_gC'pR`Cau?dh7P"DqO7J:E%O8LdTjdZ03nrJ0_Dl37ZO7OcloI<,(r5;>bM%3,eT)>VGnaD4Dq'5<^Rdj[uRI5ejp:Gc_BKtEmW(HIS*A1+OW:0RWJ(=!YG=.@8%f5J6%BY5X?pil\V1Z-]oToSWFhnbi\,Mr*_*Z7j<=3#^?n"<@W+6:e>qPrH.ih7@''ArJP5-uKj`KB'NCH=6AWo"Cp!#b[:ht-r/%MblRZ]7+8=&Z=H"5!*1bcBK>r(\A<rop^F%=#gpYk.?(@2nD`=`I>V7Iad,iLUr%Ob.E,O:#3'Ocpr?4Dd8`A?$aP<O7*>7]H?EE%^ZhkNTDqEolSnc-AT$XRNg'6%S<8-IGQ#O[Rc7=3q)UleN-G5TQ=8CZlIXhEFm/I^Y.X(E@,C2[H.R!2X+#bdO85s9oRL_>Oa=*Q%rG)>_3*mT9kN^.WqFr=[C9Tq\?,%h(mHY#KKAPWM4h[,Khr?fV3OtR8j#bi(I\i=7bNH+_*$aqK:!%`A0\U^5Yj_E_fAto1K-0Wd%hkWF5n`WR(dIObY;!7FAi^(cWTQg@3T/X5V"@msnYGLrs[<U3qp^S+91&3uH+0^.8X+&*=O)L=0VLrc)(ld'*gf&U<)6(Z'f<911%O1aaJ)+2Gof<:uB9m]t6f^JZ2=*#_XfV.3qS,TGFZ#=L=GQ!Qdl^REM^DZTKJ&&[FdpMc0oQtsUb/,0^QD<pF*Bb9H]]plYEiaK`%7U=.,<PM,7S/q</^Zj]_6bD!5ht<H[kVV@!3qBn3A*-4ml8SZJ\Cod441a=TV:aaJSgN*Ta*?4>$EeBPqAhSBE9LTBW>m'f!'/oJ%Ia]$!Z<iUlY2Al)=Pf1$rN9KhaPg5!7eEsRDmF-8op`#cOUcHJ9ia'alSk";F6n,Lj@kRTi(V7qSZk;u^[!h,F-rE8q83hSC#<8>%ZT\4@9h2hmBRIb=n@__LduB5PHY#Mk]6:(Wh@HG72VaOBXIe9R3<*.D_38ep5IK#-ODCI<@Cl-D420)5:1K+j^-_7Wrqc@Ug/`)D%X?=7=Z<MhT+]'?'Vcl'*qne?#DX$2uqY'O,f'NEbF6g^2TDe5>:+ra;/YCblZI)s-J*6BZ0Ae_d_M^AA9`!B,98bG%G5^%IGJDpW%?TpT!5.;BaRba"5\"9bY>2*D'K5:2R`r-F/0"u[OgHYN2iQ`J<jmgdE?RMIN?FEr7rT3#:>9D/YSpU<JkMjq10<`6Z`ViFOrLJWi%G:oIJBpPpt`P8#%\?Yu1mh=%7V\_F-H0o*ZkClD:+$<k3>BtL.6,3HjGibGUFfF-L\@'_$rO%'[]B4UV^VBf[?eYMuTA93fih_/%%e\-B[Y@Lg#>WKR5qIIhZqHn9sgV<(O?XJ24a6*43PZp:#6^mr$hu4J*l7[)UrYZ.0ncU5N-i*_K>!.6/dbs7I@NdJSE52>Yo3tHI%9H5Qp1bQI%[<(fTj$+Sk3;IQDIHssOhg[kqqek@5A<Pfnae9+"c[<0F+C=I/8'FP0\@hM(iF7"Ok8i:RpHGu7qra[7PD47!;^BUf%J#aDi&o6OkE5=2FI\0iWo#K>,;g^iOo?V4HTDCX=ms_gSrpALc9C#sBrO17Kpi,]eP=t%L,2:-Gf6/6#I<#(o?[/'oH2JsI9@%6'%WKdtp;Al+?]_'rd@38!^H1)Dco&X(OT"J7;qY9;tpfAC'^"kP:g-%f8r<;q3+"aC.rS%rQ,J<kBP'GfbS]^t19B\H4'F>l1cYsf/%IZqRXnN$P1Ig.4CM,S+)HbQ,&c*^erCOPNK^)^.Yf=R:uB,87#/R?,26_-71pT*)s>KcRJrO4`I%kI2]K9bi7`U]p,q59QfVu0t/%ro*J2qsjt<rbu`7$Y1(/3A%L+95h'hcMj@jnk\`A]A1]&214:X>sEV6K.Z&X]"Yaei"%;/U/)l\oo&S'kO5_D\*mCKZG3$*,24K_%flA^26m8edL>#rsYFs6'j=Tbum>EoRCqk%tgV5tiAg+/Hg^0YI$KMu_[WGD#Y?K<P*t#=;jboISUTaS"#N#26G1YTC^3jkrYJHK.%2\mH6Q7V9fS#tX1cKa33bLa5K%5jT!m.ej)4uco<h/M9>S_UdLk9'6mjTj[=rc@anGP=.gQ\VS]ZMsImb=e?)]NJ=lqQlM81YP2H%LiDHbfZmFiA/.\8YPc*@Hf:1]]E"OF8X]Dg?>4b\asiBuJigjtpm7\([<l;.Re^_D!6Y/.+99hB"sRGG!1a#Zm\cn^:H!+JgfWFh%LMV<eIH,(Op2Et2%)8E]MKn[`jbS,_/sd6P,fb-]55h]Pbd-d2jk"DK__5fks86p+=*(\)qpom_CL=8_J,%IPZH%c5F<%0MFr=pj%?%$]!I\'h:]`7F(=OCc#/kEjl89GttJ?GSt!\ks9BMtmH0A"!M^:leI3HDe`>k4rRNO3;a+GfWI3n&M)/_9o8=qPC*(Z-!e='!bP%@%lC[P>^?;q=Q6sc[G)ioa?DTF)Pu&*$YtZ(O1FrepdJ2ZVMto@H]?sbDBj`AQ)bJBb%.PJa>MY<m.h1@[&_%4&VWZqU23S]`/Gj%No->l"U8<7>>85t:5+2RNjjZCL=jAPV6?]rHE=O>A'fllI;R58^V&13>Pr_WJ,fGEdrLep-_8SchCb;]FhQ9h1KCQO*HH/[jH\N9%p91T(M+qffM^Hs)dqbssF$Pqs4kQKpE-GLckJF!paIheuS2kosGrfGr^LZ]arq\j'5:/PHS32#`p"$2*k7Bgtk>oM!0P\3.[kdR`%p"<bu`d/fc&^d6/#G62^h3#i15#hsm8d^?QY;!T':I!_qD\LI#Csa3Bd*^8<'!das)\4k)h=8f-k9hC7MK=\p\\t%dLViqk;4$e"%3Z?@<3?\:7Gr$@G;To#FBqMIJbtXiXY'bXo[(2k\/68hF"AQPS9%&!UoqS<`]fgZ@7G@>"[JK00NTrY+D1'+gUHB.7-;VS!ZhM1n%*=tmHk4'HK&UYWm9q54XM+^W>^W?qdX\N]*S0_#G3:q2b9^;f:Kf?+E8V<Sf$bj[Ikef[##Fnpj+QcA8G]\+WC]gXIT-_HA?TUEA%&S[LU@D+E`M]ff:YoLHN?LI7N-ViOUdk>:Sc^Wad(2'$c[<hCui_Njl^*-ik#<I8F-.DRlS3-DI=rDC>$$5$o='kn(G:,qU%da#b%`jV5#0$43cqE)cjh8^pn%T\%B5@90:o&ooA(RfW[2Ya,8,C$S;<rRKW-6#VSm5b"6o3'aidW@.`T;u04V1_^trSWk:qo/H!`Qu"H%(M-+"-@D,eVdrcjNG%M\dW;-C;tk\uBRYh!_tH_\BRYh!P:5!#1dAsLR9LXdBRYh!K<m3?R\+'78;a*,o2El$T4'%*RPT#C6O(e2%0kYH3Ud6fmS:SB,AO"lr:f#\mL"TSNeS]kIhS6[DRO74Iq$4Q=c62R@)T4+%Vo'k*`@"aETV;Y]&6@`^-"I&/T])^A3pH*XY,eb-%5$u,0=4YnOndqrb4QF'NPSa&$>K\#KQ^6V*P8JM="0^kUI$BuDo9/*OQTu3fleX3FSRi^H3/_+%-."8NSirFf9=X]S[,M"NoQ+fM%8=_uo8DemKf_spl(@FB>W48m#OdF!>7+lA=:M3Vjc3e@IeVa.:$ZdK`C<b!nMuR_orqG6>rO_t,]`70Tr0b+Qk123C;!QHKGFu>;%GBP%qr4d/O5&Gf,g\LV]rp9RZjTh86DFA\[BD^/iSU!>@F0C5+4G!@E-]6@Jg)Ms_IpVrO^\6X_M>QJn>ktFIG!R*9U2dGSY+K''%>sEI]D@o"*k8"hWe?+E\J,fBGIVt:Z7rHtahS7ZV@f>O)=*F9r^0b0V4a8`h[*Vuq]5Om%8Hpmda-X!AZZ,Zohp45fhpDtOX\0JV%Un?DB\6#otXmpH?s6LSHDDI*`rOT4\mZ*!04GI0L8Rjc+-*Ank=h\tad$kCn^]/=e@:afQ%fG;F_Wk_(DW/h,Vq2_[IlWY"JN$qF%ZV^9$gYA:`2eJY`=(N>\pB`j+N]`kHK78:N%3+/n_"rf>`VNo]T<Mjlpg='hJ5F"pbcBjT(V&i0q?m6b]<o_]-2dtsF^Vb:UqD-!%VYlFVEc5+ghtkRY@CcA'No7eM(%I&<-TBB75AVZT/=+/m+-/&:5M]GFIkW7"H[e'U@;'5fk+3>W`T3AhD4V=LbEqeSf5@\+IXO7/%i>4"XQD^#Cn+ZI0q[.hAMiSY%c[2!ngTT7XEGl6:oBE%_mVF#T_8/K,7;NOaL4;-VmCg-t+Mc9u%t$C*IQkV\:XeC+hg97lDa4!s%qpiS!Z!WVVqeWK?55I<i"ZcRC7'S9.DpJ<-pAN$1O1*>>[JpS`0mSsS=;<9N79MYMkYi!VDUoTD[7B2G1UiaTDT!<WDoU]3G\ucp%WL\fGDS/'G^oQ_Q;cP^u/_(3A]_gssZe)NB[LE+oA?WId=)i^t"mbQNF_:N[:HS5mE+:p,lac#7jm>]hTtd;M>ePOfa#ieZ=e.-R%<R/,@@;VV]3Hc)8k9@&,1LE?'*P^s!>WL%-Lnfa5s&8Y^g`>PnJ+ESp]Aq]+:Ym1]PNCIIqGYG*ouZek2]Ok7]Ya5b%;mpOk9!rW%Q]:%b_eP]L\"3jQf]L)\[W-o0lR0FAn$d??Y8;s5q#:!D(\H7SGp.+^+8Y,U\*j1#^#H/@1udr0cgFAKTDPuQgjls*S/S&Qap6E!%#='Q'TT2a)DsPq&]tCfdJ4#ZdjnHIkSmH$qc'Qn<IJ@@Wk0FcroNe:Tn/-3G1#*D/HSF`@H<F#XdoX=8"<IFe]8M?'C8nekVE*#S%5%R76ZTkH7Wa82!%US!=O`RbiJo9%"d"-@037-;h2<GP*Hjda;*L?>*k]%T.Pl*L`,)2t'DQt5JWTs(C^LV'<:YE\[h:n-*neBoY%fCjcuS"8>mi?mFZEc'q-I1S[OVrZ>KBc*&(X"TTE1CYS.(a%>L2"B`?mn8hQ'RMQ>EXZg*[9,p`eT&8*Y4p%dS7RdTQ0#UC=!#"+%TDI2HBtSJ5);Qq#WJ;F(8tPua"Pb=P`p:9iPZqs:<6:=6_qXD$<6;JRr4+:;:b4'W5?T9K3r_uTam#7Xple]uR$S+/oFFpCV1eYi%.XC=sqcPC/n5rT2Mb:]\Vi4Y+/&B=SVi"'LV%rdfQ^bLP=)sG1bS%[lJXQobq2;HGf6)@hS:Ii)c<32HL5VRk=H`uU=4>j!06oE\%>/b9g@BKKj'][7#qq\e!=B_MspUj5X/;Z*2]tF!3kg$r/,aV5EkH9m9jK>SC`h]]!pQc;]?\TS@9V%UXO0<K9rc%ZR8C1X?N)rg3%pq&LmQ]"XQ"$H9mXR9H-Zi]O0mApPBrP&_]^EkAc;!QT]O7/kpBPqfE+V/b1IK']ZgoHF*p]#U\]_UI1rg]FTs*!YAn@tZh=$"WB%kL'kGkhtj`&sf(ibO^@IF,R6Q0COD&o$@$=Im/:.Zi@f9ZN*/%4a;)/b5Bq<.f1]\rG@!4oqm)$8uFm*KE(19lJ\eSDZ4\Q^Sh+&%qk!e6qE+WSSGq\hqS-pM:VBj<3rP*to,m*UmTV1@^\$PuqT$>WqX;(f^HMVpcYi_&1j+;n.(eWDFn8)e[4]%>I]m3Ap1q,&p&#q@%C97jt_D,/l3uHH'@.(5/duWW4c1U[$bO\N%5gS!YQ+;ohpL2@7\7TPik+P);/Ta9Fd2OmVgL>U"eN=u.6rQ;SM!CN*r+;t,f5r]p%`HDhl<\%</rPP#<X`q?FYRf5a_4[j@&k]LWCT>I8_n>Wk3-TocBZdL25.ZU\"P/tudqb$3$V^FMI4-8QlT?B6V>1<@kb'C,mCP7E%@!4<6Mcbd1bF3<#7V0)Pmooql5]%)[qcZP8(ekT<8/Z]@1n[U6+.;K_`#m!rp75!u425BM%);oJ"7j'S[$DP';F5sMEsmNMWRm:8%Ca)Y&Z!G:QkToUB`;7RQ's2<bliOR`=RPIW`9^Z:9PUVL]gkJ+SL2VH2=FfS[So&k#(NU@]#8522\VrSpg_[%N(LSdN9QM$J^Y':%\jVq4Y)GQl-+"&T:Lp^r/r[0q"0cnkMaT='$7<hl0hWP8L01hSg'NWjY`4>.S[Yn$i=%e4asOndf(cZ0?pc(p#eVCT`,-t]#`,sK%7%Hk['2RB8$"Q-J92j6u#>1sPOfG<W3mh%RoJrpP+;[q`6&Tm5@QeStH`?Va=P3dG[^#!Za]M]GN$\E),]>JHr7pE_&U"h!\g1l>%/4lm!r?4QQO2,"Z4nc?mISBtfdq;"ASV,$TrUbo1%PpF]O/]E9Pu`MAek8Q&/L$p`6)DO<'2bF?B!$8X;5mkh4gPn+2kHgJ!uRRe%\Eu9_W=J+A0Z,96l]R&m3hmgM<FhiAC5Hq^;M`.Z@D!a85$kRqO$M:7.mXi(p.;&Q,dD+QLd`T?V4DKH0stVY6dduIneemNG=]<P%*)/k80HMNR/X>%3c;6l7pC^'tLrNpfJHahd"dF[`TU'oYPGF8Qnjoae+sY2KjW[Gd.V3ph8lk!5Boj8>6t`"igmWCKjT>##oCk'%%<RCC:/eZS;m#g8?!>m@Wa5?'*nS);RIp^l"g`D`G#W""*+CiLB",Wk^$[`=h[%2t*p5):d0,^.>9q4<f>c\c:B^C>;2.P@eYbt')%_E)BB%kF1(.[UT0[ABs!SbZ&c.Oe%$9;/ir7!F[VQ!Po3G\[sq2?]8)WH_cPYDXZt>jUL`=N>-*No&$A8cXsAA(AsQfTOZt9)hJ?%A;C1fSmR!:D?$5hn)p#q2D/nqebHu<4)ahH?E-iG,UmAg]6L=A8IVCTXp^loO,gUWj%0S*SVAE(e(1fq6,`qO=$+[dPXUDMS<?pP%%F"CS1D6C(5te:E\9nK4VEg1T@UH5`29j5(ap<jdJ1IW6&nC?7n1B7/@<2igZ=l/A,Za2Ph<gBVj3ihS0o-i(+_fgZ$75[Hs)8>-%Om6Xn?pt(XPUGFd;8l1a[6:p.*2nc.Yn;+3JL(@Z%pN+fl(n&^9pF^hQiPS8I>EV'Wprr->="t@#E8Q,Q5V?]NFUP*+]o4>R&h-Y%Nd`A?@OhMF5i0O09;QLB)a[@<<<-X;<+F.M3J2/M)FBE2+\;]+s)<f/C#+m[;P(K;*9]S#%0c&3PKBSgT2o-!?UUb:=_SatSu8S2%M8KCYM6Nd>)2G%$,AL+F'eXgr!K-K-5ddtiF[!lE8[RcWj+0I8Ba>2kE]0&Q?;`&#o7Xro$Ae;6[HJ)7.uAq0m+u,A(8AcLZ)#W+%7pj3Z)A#e4Yn*Z"UMQj*E!%J(9UV"U1fHt/AG\\4U.Rh"!KpI`d7J=87(.)8Fj:1o$5Xog4oer&5Yaq*P&rE\VXJ=:afnAf(IhAn%R0b_XNf[q4iWY+#ZspsQYDKhFX_#rF!qKS^"D8K$/HZ)C:5I>X-l<^:P9kLSRf:cs&`<=II<u&bK`k3:>2ipd`mS+-&C=!pCW1+e%JBo8(2@8[X)fHekE2sY7/P%8IS0$as7!aK-&t%gPTL$.G9@)<ib.t.fhm9Zu5XL8j&HGP'rBQcITE.C9G$\-@FG&BR)ht%C8-d\E%-,S$uNF5jGQk#R"Z6@%2FR;@`[ZR4S2@'tEJ='9\bF4jcg%]Frm).tQaVk#0rECR#-e@jq-MA]#8HN"Z3'Sfh2Zd/M.V+SA,AHWS%3#O#W.HQtoTdA'n/)^"3Cp::H/C:J-Q5g6^+J4c7.m&9rTq1gUmsH]aL&l/D#2q4PNZgZmT^!=qN<.HQdHa,Q!9f4F@*d>+,5dSj%\H]s4$m_/8Xh]N;N@47,P#)`R?t:5RS&DE@V:+pS-mhPR'rb/u(j9[r@\r[moeO<k.Y-kOf$R&Z<lR"u;mFP-#r,s<Au<q;[m.\i%3j='19>M[>R1NJu!b+t-bH+XIbW=Cd.=>"-T/d/QBL6'!PYku:O^lY+1G\sH3V<cFF&KK;;3J4Gm/bW/K)-4]X<Y!o3Ya/$?<T!e%;>O+7a)oE[E))WQ8['*dRBRm#bS&+3;mG-Tg3OXq0HJO)(DPV_Od(BlrIte?8@"2]or)IK/?*4!r#54r"=/>Ked'k7&olX!@On]o%5NSaL7c#lQ3#[*;(D,784Y7FYJO%=2WeFj0!XY+lEfGUMe+OQ>*pl`gP0"6+Z]I"mVb+OrYA/SiT,it<s$EGblq!&`%U0_T3Dq@Q%3st8X)MW'@N#]3!>>ljWg56O5>u/]Q$r*1A`5&=2o:g6/Tt,1.!<Z%d)&l*tWHm4]@>o<-KW&]a.'U8`8\;Z$W2I4N[UM@6(S%Q5%c6-H]SHBI/&X+#(K;!^tgLB6nK@XP@dTfQ^1ckNfNJZFkk;uugi:MWXLENBB!/ZDV\Q45$Otl64WQ^K4gNb:L-JmnKqO49>KI#uN%8KCu7EH]SM)/s;'0e`O5NqO"l.U.rD7cJho(>8GA2J/*gBjQcadNB2=XUh^:5%+GN3.bp9+u,b;(0Ki1.+bGl`%#<k,rOO&@Np-Y%P>)Y9M$;`%=kRa0c/+-;5-T^JfE(JYG3jP?^dP:1S93,XX&uYJE4h3qj!%fL]KqEd*cKpM8nMVkdIN1:Qqp7VB;)6r*"9rsKPA^(%63i)l+f831rPT\e74^FUW#fG_Tk`@I)@UgoC>JZr%fi=b,I@emX,G93V7L&:%7L(7&?giR`C-)RG8UMF1_;raLV"]P.79d/:b0eP%dTVl,`f8<8e=c%tUeFFt&jJ>qS;7&0+VJ1`![Oee'<Itf:?kU%-Kf_cR8D!to<e%]R.K7]lc;*SN6r7M]NHpU'*t_P5'jJul\OkY%`td&,=UNHbfJ$,YaUV!,@@@`X-EEcQB2J@)F-;<D:\,LCJMG1rSGhJ>B6#tDJa!Y.%B\Z9&Kp!@8mUZWNcjkk(o5H58=1rO<]er'%_Dk+C`^hsMf\`QuQboUi>?T%9hIW"u;C!F"O$^"Fnb1'9a)egq.[_$?a%!@(,'c@&`j2HHkoh<HqV@j<&<`oGP=DULW(BA@Pu0lt%,fCmj(/\"mb0q)8;$5kIN3F%9\0PmkW.A9TcH&lac;0+l8V$8HCd^u.'%mI4C(es-V#Zo[!*RY_W6,tYOdL]c9b`I8+G!R&'c2CC%=^:#c/6T<H!<hUK<)<7)D3C9;q)7T>6P5K[6jd<:1C6r?=Ad)8XZ:S3`Jd4-PS>[,R3"JSBP1j1P7VN2C;`g7ZfJ/r#0<ON.)\fO%N#q/6&2P%5Cg!tnAq1"TYp)HuLoZp->p`N"Q2&Jo<eqVqFkZ^^bTtC9+,$!^`f.l\U5+g]Ah$j#N5S925jOPLIM=Tb"_9h@Ak%Hi%%hg`RFi\dN)G)pm0b\]X3Yeb5D$([i&`PtoA#X]PY`ri*R3$#i&[][n#peXrLk#[1^%>H3MY(o`)B'>ZB:"%hL.Y-CW3nsu+!ARe%<GL6pMR8_P!tsD%eFiq/"1<is=_K<?%!]Ol*#tjVOpi6E5e,@`[+9Q".fsPk:j7mM"_*Kr-Z;^G!\n1\kJq;&@oA/Baes#a7)Ym%%\EIKs4UW"p]cMc"N9GoY5oC/#5E5!%,(X82e14X@!B(c8/GJ'6c&2_"BHYDnanQh?"/"Kd(Ed+"#B6t\1,k1kZ?:_++/gd28q;K.%P"K/u$(_\3LJB8%:m6T@/]VE6J[t!\>\m"Y[EPrMKZE\7OLYNb)kcHC>U5N'FY$M]!Pss9&:M'Z8]6a]Wt5eScseD%n:SOa@KFn[%m2D-7(/^dk)j18<=XtjE_Od3Wa,m)0aX!u*F`eh#aN%Qm@9]VU.S44\)j1nX&:N)*e:B9+l?V_pg*NJiVNW'4G_%Rr-mLFC9Ndfq%Htbl.)8rqB6AsEiUeHrH0$#`O.bY5@"N(0#;#rZ$E&<@E2]IP=!Zcn,R^>KV&.?4M=9rr03!a'2;MpKK)anJ#+DA#$2M;9#O01kZ%#cjYF(8=3q#EFBqaLJGPK]>iPN_=uM"ZcgIb*&XWd;]>!&Zkh^Ub)R;#\"_^,]L#_WX,N<_uLi(KOL`j(KJ=gh[`']6RjkrS]FP.%N>nYYZeNgCVPJKjIGP@%+^Z-q*?T?bQ3`;UKL>u+n'Y*UGn3c"(>)^aNS"4cPr2%6fk7JV3>BA^J]Z>$fd.K%#c#se_]sX@QkJaA%+FdHZK$@'gSgbMa#o0/BqI!=BTIgU*&_]afp)/aB[o5,T'4O=PMdbc^id0,bgRC&-;6$Bd:f*^Y(EiNp\=j"4N3.c2QFu0n;FLt*%(dnr=$4B,^HeS0,AoYjf.$EM4g>XtG/rUgli]T"F]&8C(=D(9V`#-Zcp=O^%/:n-JR+1!PfAN$^!^oPEiIF)f-GZeK8:s>oD,4V4%G[hk)kU?duS9X6]96*sDCVI\b[:IsfOo)!i3($"jemY'`iU9XWJoqVA12-PB%`>k(]HX5H=uHPD0rW./Yr/-[(^hiOBj)M`8TnH"%#Y*[4f%+D0l9J2fZrl#t!nGL"Ho,-U"XQ)$D<sS*ZDq<ZA(lQb6Q5he7u[J45/:\^oKhd-JO<e\=4r5a.Y&m:(=]?\:l[ZH)2`fX%R9D48,?]eE*ifa<qX'8)Dh?s5aBP>ArXfEcN_!5*"#f%SM^`R9$.bXoK:#=M+K!D]JUh:&:pFI3M)bnkCp7FpU#RdL*(5c64"ru2%ZfJG7jC[LhM)8Pe'9P"3+e`P4!u9h?;')4><Hd<B<_C\]+Kol*N8]#;[+Oom;0*R>`o->_Oc`p'5U)^Bd)cCnhGlt+m]nu'0TH%j%[L/lt+Vq1q%^E$^?t<L8Pqcsq:fpo'R(+0<>g^&HYRB3,!opHO8urFL2dXKd9W`=n$+dh=o"bND)AQ/S`P<'18<^3SF.1%#kmLm9%G<,@cirT?7Z*]gnP-X3PS\S(g.>1R\BGeqsJ9i*N#\",N7_WMb7)9LoZ7ct:d<EsTd[uuU30/XB,9napNu1sQAKcXl*.(rGM@e#4%Z6NT<$4_FaTt#>4^e08'^aTNSfG[-7TE.7'1CsR>JRCOZ[1Gs[E>iDcKHe@X6$o'r":l4:o@@tVP=JUn45&`*&-[j2S`Lt&N.lkn%eN.3!Ca3Yal_5p6[SKD+D/eDV&0N'^T28<k/th;V0^pM[W0p%Eht+[k,rVJW-(#=L#@M]t</:uB$F#5=!XGBl#=BWUQ8X08?-!j4%%_E?Hb(PNPD$]@415(*udcF)WUl)"P,R3;*^mIo^Z2n1:3K+qj7^+?e%8/K8OI.?18Q\r>%#8^6Mc%FGD56[?'d'_2'3C3>\5_^l%jhP%[*cIJ#_deA=J9&p,_Pl@-0oEUE=dNtnMU'=a8L2iZUsVe:THp0Yi2kKdR:`:<JZo;-0Qt%o[TKaNM,@I&TuaVP22F97Rs`;<%cn7Z9BdG:H@<Xn1U;d@g?(e&E"q#4"TUG>B[ZgrZ!l&CCe-kAbm1Pr/D+^N=_fBj>IW07iL"$qHa(*@Qc+\mmB([#%OOa0jO&]jY%GiA4-I[Vs+Z4(,`*"YJp2JDFq!HptK;A@TaXip]nd/>-A!cjNWm[9`i>l,%t$=3?56LY9q+tjU3)N[6o+YeS0rXaY#/U:D*[YpNt%N^9ZN$4FJ`!j69RZfd[6,\Td41C8*6%M/tRLEXa6rPB*I.[I;-"IqEf^=u&-j8(,bcqmAC`93Ki$otSM%a%5\+l6%`G/PCCSVn)L%Sh`3=c%PQm"'E,Gncq_8YnEW(ANee=BK&l)P(gqO&raf=+:*3^"T',<Ap$S!HldobX6#A;kR>!&d)WnZR%]P6COfS!Ogp:Wq:#Mu%UWLG<L.rXr`"T$7M\mQPcsr(W$fBt]IE/08jad\jI3/oQ*g.<'btq("CMC#Ua/k)gR?jC%U75stDN7kNK5@5qYh^"Ic_C-<-aBJn%@jE\F=(SA6dCt;o/T!N%+mfu:M<gO3+<TMf7$gG1<*s_i.9DV,pZmp3VPOuCb[oB-c!SBY&MJdDiSs#;b!F%Z#R.Ck-4#m:dWSY&%CC`2+NBPlZb<cfhgc2)JrfY9*dRR.9Ca5K;jNqNJ:TfB:3<Pou0sRP;=tR^Oc#4a$-rP^[#0-+'/<VWq/$U.CfoR>TC(N;f>:+1s%'QFS:T$b*`3i<Ra%n]3ZVY;:-]i(b_]`V:)n?&!s[%\-ung5W1POgjf;\dgTcIN8.5W\Q'5n>YU?Qu-ZDpD>gO0'+.bt8DHRG'VM%YTOEK(L['FJ$3r.9mpQo4I?c0?!4IF5ltI]0X;B4b2uq=$c)m0ikPnF+3:hi';=*4-3%2?/D+8)q9`@%VY"[u-dPB;i2W=I5l*:4%0LF&DY.$R$>^YgA`@Ta&8n<[O8sbhV+hc9>4lM.s_os#u"aeu;'!cPF&a1fH,7)RQq@:K9`,Jqu`qr/O6pS`o!oC0`:fC,c8T"l4%58sa6JYl`l?OZim6Q.\:2?Z;A<'k/,)`<+="W!q\RQEcDN'SYf>"o0QN<48BBF2]\q6He(@qJ'%@OeBu-Nh;q-GlS3kT\KtVcAUV%!%%jP[i,]Q&eO7V&5U0+#fTnrUmIZh!"F%-abU76-M3s8(5)nYP>*>rV26M@77p2RSZoGd&/G\)TaqD`#J-8e0Phg2"W!C,\j2+F%"Ua<R*Aik31]l&["TER:I\.3eWA@]gPo<(69gdJ6`>?f[nU$@0L_KiKXnJF9M%Q=/E.EaBT(G?7<'\S@6qg7i*(;^bihGGsliSu:%"]lg?3JMG@]QD:@VDn_hI!C_oKIhdjT!5Q>h@Q%H9KbipF&jj6#RE&9QB7Ge4;aA&R%t0O!O*l7hLcCE&I_L$ZRlCfTuNnuHl1:'%PbeIh5e=<1UA]]LWs'Xg'P^XBPeqZE"=SI;RJ`Z1_16+fJtZfYZ(T1uKrJ=-k\^Y[?rBn1JgEEofo@L`O5'_pK3&?kO;HOO:s9;6%D0_KAiO5!F6NDtuVAc>S+@aSX.:4'V1dtq&JjZI:A9(lCh24ORV?80=""ONdFL)!7fl(=0b2j^A/>C@*0pM'J.nBpan7=+@#]^G:%rgB(Cj9q]Y6(Yr\Ps?Un#fuuL6&gB+XbUW8fXaQb#Qa7Q9b5/Ff0VcZH-f/:fROeGmedVR'7h`m=@g%+5n$<J\.>H]0Orssd)/7^%_,CTo$6Z,S$#2"9+RK1q-)r(UG2,(b7bJsddamrX+T)P(&G%6gSIdKP7IMBR%44E%gXE-+1N(:il!djQk$_3K'e#<M&5S>eBEj7D%5=pR#6?T,ZTmG.,X$fgIN(-2X`t4=BiquYtkU7$:"j!4aKNZS/$Aob=q@/%Z?`HR4BGd=oOFVG'9_-VTSZb<08Ma_Q=)a6G9'(L[%#i#hB<0,%#^B^f.e+Y\4Eg9N?Ti<(lMlNTr5>JK_P+(baU5D08@M\n=ck>pXLa1-Ll,ZR0qa'C*H`8J=!RcQ)#\f+OJW0dWiWSco%6;.:^d2laio>2O[]n]:Z+<);U$eH1/KSJg#QDLr4N<,F^%H)n-N=-+hK9YNWU2a?QY(h=@*U4h`&@DEcLTb(i&psm8QK/s4&asI#%">kDjK8mShe;(F(p-YZs:Fi0H)m3h"`GImPJ=qL(pI(hm,Es4'S0U]qP#9jEH8-lnAk$/8>g(J,&mJki.WM3W.*[p^mnMr_kYUR/%U^l%u\Y;b%:&6m^%is<$;1O5H+GDm5(Ag3SE)2L/,f6e@5\U;N<ShQ="[M<QQu\*%H9jE\3S)b<82f(5/65+Z7Gj?8jF*udU`^4d%#$uAN`u)`\lcAn#peRCg==o2K4<$>FK!fok4":e:f5InGOgpPk8a+TIQJo4V<Vk==<p<sG:k+]N`fa@rj2Q$Fe6m9J/7l7^2&Aqs%<-CMo2^C!%Cdp_2(a@fI!N>?qKUU?*fX;J845gEAfLs/Mg]N;L!7R5=n_QVMH;XmV4N1)=74I\$+;iR#8V[HOgM>/&GisfpSG>Hm%JWZh1Jnk_5gbjc4:&ueoE,^Qd(L6A/m:/J*6)^iO:J`b5/+?\?'2S<6!R%`6n;*<M/P1`al,o.E(;gM\Yk9+r_3)].G;o%p#$SX#%ppl/_P7^-;$T;ZQXh#[WUItt;',*\:O?.WC$@">-.fcD"C9N4;UZp,0JNdF,dlH9Zfa.YGc5&UT$37>'%jA:r2YHQ?KVh_@SHjPW%:B$gYoaHBOls.9[-:;HU+op;u3"+U)HZGLhW.e/CkW_S3pNRR7+r.K-[6c,frHa>Q(=FkoOU2#9!+/%snq9j1/jUhV()4]LAd!10%=i>FnLX2a7-['gG/hc\Z>fr/G%9iml]E7^[]'G%n:%><s/S9PW!C;.2E7ZKKQ8;IW-\2";HP3W']q.NIU'CbODT&$1b)dG`MABEI%8lbSm&:#$;;T9t*9WB,?]c)YleIi#c`spt2-ju/t^Oii@kg4sP2eB\>+TuO@^eP4IaTR2h\33nJcji+/%sAerBL(Q+:1W;fV]]q&%?sTkL2P',H-O[abFILagNc+dZg!^5`%F5iBp$A-!S)XpJ5[aR;+L$D)^m+^E$C6H&BJK'S_Y:jf;2G?52qdQNm.cI38-^Z.S8^Dr%FKVa&6*-?A'$92c=RPK?@[9-iE2+!!BSBK<_P\\KiOYc%(UB:O3dk_!%NUI_E-n`QOtmb]_S@1M<fYJ1]cu\B\$`TPL]YTQL/J\N%;.h1\"B+HHZ+U#F>)Y@RB\e!FO[C3u78(<AhZ5'(!#Ueqdb6@=.?.CO.f]Xfk_T<Q?,`D&(.Sm+lnfU5B]6j>=e@"3@Q"^<gR0Gn%J`<7Q)3hXM-($%di[HM#o]249RNF(*_u<nU#HiK.;geBu&-19=V;V!/M<VhO.hH%?gN++Q;mY4f/19B*;tj1U$k"66qlRn;.;A[s%R5aC[A`'bYN^0Z4%nG5jL*CJa\8Kd%84.M2imL2[<N)ul,hr;%X1#cr8Acoo(E;5b4NZ-.LL)FY\#$$q%73hdVB1`#ILkua[B1?5%+d>e8/DLCHUk?JRD2m*<Y=LOR,Y"ZG%<Rn?:&i^$hDZZRJ*Z;2,\d/9Xf!SeZgD+V8%*pG>qO9XA_Z*G\dkq3p+TlpUfX*0@@5\"%9#3QWYI;3*FUQ="^Q#>9'\hM7MEn2M^I5Bp0<o?j98m\:BH7/ZWXTJeYhAqa)]g]NX0e0BRpA><OKti%k[MbNqc=\HX1hK3gAVp9%ik-i(=:HgiImq<"#`NSL$d#c,[j*/`b?hhrqZ?rJY$>iD8qq0Z>IYl@pl8$t!>O[,W#5Lf_a-0>?q=n&+E<FY(o/EsQEFGn<T3L"%';QEVY*jnrA/%[a2%&+[7L'Jfh!(:h!B9R<p.*IiV*ne.5jO:n%OXYs%jVq4jaaIsTcAopfEWK9T`[#^n6T?f!egA09*p=FABfZ<%M:uK'Irg2#@RR1dnKH7,]I6MtF^\:/\%4k`+f>C9N?^k"Y7ZKW=[d*fT>Ei:)b:@5+A$7fOm[pKd1tT<([_9M,9pN->S*P]Skcg]%JY-C0LZc;um>aulb8Bt!(<HE[c;W48q@ktB8P6cVndrD^EuBe/$@J?[+HFT1r+o.M%EiB?'n\S6kX`TO\g*rc6J`1h'AWd]$!a5T%&Y,B90a#?B7mL>kPhg+0bSA-9qMlgXSqDij1")#2Z%9jG:*(O/0_5=MLeGW`<_P6Ob</c<gqd.$ZD(%WAj04r#k>jqR.1n)#I7mA%UM7S\&C\]Dh'sN*+uV]FQP!_XTT9W/?"$*e!4obMk:4Cteq4/.&!prhdN,4Eo<I(c>._o/!&=-FM40<>&$1`u+<R"QN;L0?@Q^%+%GT#s(V,2O@W`<gYqMp/SV","pBr\EM@Gh\%=`lrcAECL46@"n7l.;d)U4S^q#j&bl<@I;i:8d1s+4.mrI`JPu,cgA;'ABP+GXT+8%3pL."&JZILfnO)Pno0(qONnWFlS/l=%gYSP`D4ddJf2-HC*56(.F#9nU(NYS#k8CKhfs!K.>TqS<jks=rZ9Q>)#%fI@\rh0ofBru%3Y]EsiD+tI7^XTuhW(^3A;XDX8KCfRVg)Eg*%hEcaj@!U,[MU&<!D;Z%4%f!mK6\f7Q;#r(Q&pu-&a(8.76rH/0YZ)f]F"p'JU@a%(3!_#L)c$oQXS5*Eb3=`_X%HT$D]5jN.E,!'F,g:]U]RqU2*$X9'nu8[RFOZ2F&g(=]T:W^l;k!NrZBhe5?^W74B@"2aGQkQQmQF%'e[>\n:j3=!e[0sKe%WW\4tF#_8@"e/$NK*"]d1XS'lUc>Ib,N!CGceSW/n$OKrAJCoAJA<@_)d@)Yb$F6dt!6W>K"0,<U/ik#+=%QIfID-]o%eb;uN3r6iB-Djj!>q`"-;X,%Tk_<UTl=C-I'3^ld5dOIC.Wt0O0$+3).,d4q>eC?KEK!P72jpVO[7\^:Fk^/,ZdOJ%(%U8=f2S3)\eL74M^E5*$ATmPM&k8GnUqG]1Dd`b&#Id]9>&2Q/;U3iL>!c9B4r'6M3i/T&5QS>WsJr:e8=l8i0@H9gs/-U>=+R!"J%Q7s1J,+,c'oa5<Hn(P.%qBR1aA#,).o`OLDl4XK^+Fl29I%Ur5,/?3XSUoAQ!U7CsX9_3:GmrkQ0FWg[8;qKVJCXg>eq#XJJ:;%h%KcG&K".3r=/<u;l=c/,(,>fR0$E?F@d6/b0\"s(Vd8P`R0istIN/jd$n/<Oi+@;5p@Z:Y"DK4/TN#G0Ki_b=rpn#YE1I6"b"iH.C%5Y,JJdi.S)%WpocpGGiIg0)9h%1h+mSkg7C,]I.c`:C5;'n[II^cquE`2LADV,c*LqH\dOjb(qAj>>JWi;1\GhOQPVJmKa<X'jN<%`VU+A,I0)>"&t=t7moY*TQi6sC;nDaHP0g9![&>VMECo2H#T6KcY=SGQe%B[TkY8DKQQ)50OCh5]Q3?dO[?C+&ZZCF87r6[1r.0s%4N3X;,I4QfiOFia$FuB<ZGqSN!*k>LA*AL[.4fTKRUX"`P?=7Z9]ZClnV#7a;V@f42^$BA+OA\*!g+X6.3D#%6L"oZ86pd\\8h^V%-f[H>?HBLYliKV/BL<dlKuEa7`)IrU\]lj.-sI2L<#j&I6XjJ-D5Jr+`5;10&.W&W@UUn1"eMJp,95k32C:=j%R^5+.7fu30sP\E%'*k/lR+TKH=4Wbk#e(4d+sp=l3@7d93@7d9'GDG]<kK@+MYBW[2C91nh3js7Af.b\NJWXd>c0G+2YqfcPf$ecMB<?'bqZIXctdBj%:nW3r)A=(cN`!&#e2aJ-3L#;X[g%JCot66:!30W)+iVA$WO!Otj'mR_5.5I9J2nu_k7*#l<f,o$9Sq.O&^5ln@MTO3VM$XX*2i.4%cbe=5^7hLil"ZRM@L'j4fNaGp/YituYs;<SUFIuN(57\_d?05Qho8=+X^E<\ENtY0!KhB,Oe6iris$793uJim_(V[FN.Us9leAr%%T(BT_9h5\XD3s.JmM2G+&\i>Z7K`]tMld(A_1W[.Gsg\<Shf31URV6T3"9IB7J;k<W2C%L]UlWXZS?OCA8aA480ed2(onKa>eomF%TZ'MI(:B`>;md.h^J/QB:BA?l@*3/gVn.o!qQhp>M;lg$.>ZeWOe^AZ_lY,19,;))0a<a]-u]@0G#N7k;KS;ogEe_[UDq\)=8!mD%J^'^%f-sIaZ1oSI*>Kf`DMWjCU(j\p^nlR`!F_TL8%2>6>kOj]\q(E-Z=^)L+Yn)u!oYac6A4H\k#-=U*TuQbKSd3!L(*1@*J5_>%Zo<">QSF6CJ41/RK5hTl^cHo`.R3Tj<?la:P0Y2Tr<H/^S6hG2UG:"\a/i']^+M7i=9t%1K/#Wm;LSm+,LtG9.ggPB\KT%:Q2mQ)%<ij;\2&L4*fQcJ`EE\INbK),U*68<$$Rcj5+;Z/kN+/ngWr*7C`H5?^$4c70'S[?%UdfA2/;J6PLh!ugEU0-6Cd8dr%&LHu$pIA;%"^-_$3R+g6!m#@W!n-_4lu%a/)a3[5RdmZRfI/,u71<>4?&_V6P7YcT!MYRY<R2@H.bZ:+W9q5K<LB.`\HGgN,Tr-%C3h`IPHeA3%s$:$gFP[ic4<Z#`5PWH7%U4Z%;@>LJ3BNFB;6!I6n&[DRo)+#OeM/(/:R^Wk;itpCi\OVGJ;A3u\Aih$5r""/ir`m+_&cEGKOH]s%a__cOEq07QiRIt<*!d4Q&E9F#5YjDcfPr7HL&6*5?HpD&XD1Ii3%K\64e5V9FTO:#AJUZ15kSE>AXQs9SaqWJ)Of!hX4H3%(ZcT_%!j\%DAam9cI.@eKC)p/+>OdDMbrLD]W1tc%El;(X*gU:X=r(QB7N<'3(.u1Cn=I$3#,V$d$:3lf'<"f!dcFPR1VhMp*$mju1(PRm%D:YR/Xb!(m+>Yo@bh?B)$kQoi'H9$R)['aBp0<7?@CWS)SZXsQ^gPrQDO+Q.OjkX%(l4sW?E+i]'8YdKFPC@m^l]Dr,&2ss-7^35%(TTj^8M;DSUpp&6U`5$q_S]6<G/Dn)`DFfr0F6Bb42>[.(J%.0M8:m3:*@o4J@f*W/EPPeXo*krE?[r.8<_XV63q,:9L\Se[8(L?%aO(`W'I)RBMr7%n7*pMh9k$_((oW3\+%3&hlm9[ciU@iM-/jP$8-8@K(SO\3,t&,OZn$,M!1[lXUObEK(#WfZSh!WLd+nmM/p86_%0,@;)=X-qLP\J_@lK6rn?lR)i36E<&DDDD%^,1M$']j4$30K6!;_V1t#86(,1i0kg^c9R&a6,s=:;fY5)uG?@%?",HhVCSnKGRtG%n\G*sMVe1N*b1HU&EG<MAG6X-VMqLAEI>5rM)rZN"N_:[2FbORbR@[6h@>5e"FXqEe7cF[8k]]-mhoU[^>M:J'gl33;k9$a09@a!%$C80A6&VF-_q+)MJ8NunLM@!&?TY=OKb]Ok1>^-A"qGL%CgA070E7+N\dsU'T'T$T?8rm$C5QTBl9^(&PMWp[:g`4-ECj3L;)0cS%.i>i1G?^$XTWS#ObR['7K-n1q;(rg@H]N'^/b``4`E3WJU[fNI&8ur+@DX=lM-8md!HD@\&'tu+)8J?WkI=R<*ohl%G`"8^k/o\r%!0P[UF-7ETWQC#JGHq;37G%reL7*_Y\`hafiIh&R_*F^=65p3/UmFXY6WjtV'Vg9S+Z__?k7B.9/d%'fSMdqd0oS';(a9YK/J3jF%0A0o]%;p,WQ3(D.LB4+Ih&qGB=!04[d!aZt$fmSedumZn496Z.mM_lP)1bY.=Td'0cF%Y("OVpd>pd-4fVN!"<C<,`TUJ/3TB=TR%bRlWJ)&NND>r>K9N&0n&l\qp5p_gQ;S6a\gS6]1#=L-*gN#pZ(f"j'kjQ"UM`,uD?.Kq'8m9Y6baYi)/j0?13c3JYk]o$$NA8thX%Rf+Ea995[[q`_9I.Ia!m=&PpR@mrFS)\mC/'Xj5"+a@+E<2>]UJkoE]:\G*l^EDNY9n*a?8Um_,fY/Wno'8Ih`.fb%mc9Yf(W=I<%Z4oGBK^VBgRf'[NTVk$^4Yp-f?NeA?.r^h5hXi+-"de>+fMXPC?e/po8jhrl03_=iOjB+KrM;cB1)498.!cLp$r>EHVa?a\?h%sr%dW$%IXk;_;lTuD='Y7gKD!M]Y.0?X#OaiZRd"RuiP,5J)RgPYW(EAOB;:`sU.?.CO9.0gPKAC=OgTj]d;/;_4>o54$K0.VsDmE_X%Nk8t9+\V6<r'#G+]HrIB&?dl+>LNoQ5-?*a.G9g/3LSlBY^(mE9C^b&3#'#`Y9G:iV.)b3QPe%Uj9nHB*"P[cHMnI-E]/9NcSR%J%Ff!D`@bGBtZ0X9c\,Je\/&!LtF':(3C[eX&l\3Y!hCQ#sT0&am'EW,4[c"Ld1[l@8eWU#iM1,a#B"/bWh2+JP3T2f[5kZ!.9K5`m%7SZlI3),3VVU0l6LQR"^JZn=@5#Z\UZ8'E.Q%VVm8D2ia!`+EFD:8c_BgIEuZsq!e>+t:=%?LprV>:O)+JZ@p\Ue\E'Vuq*+UF]S%"c@f76If]u1%L_Z,csAs1EGGm@P7qE`i*e54UG\lBd.<&fnI)4F\(%q$4Q3PoU/`,c9B^7e1h7XqaY5$`aOkQ'Me4a(*[r50kH)-%F2Z6<V6'r']D'b%(-iYZ)6.]I's_q;%0/S2<Au,3n3:T;d.R"$cSki#WOV(m[A+Up;sbEjh5Xjl]94#u=!;O=Ii03D&Q0l>h600'%)i+Vs!gr7n^VX%XA/]69A?lnClrOgp/Hm&Rnk,Y1"gME#=*<,`TeIT:pFnn'd^h^7N[:sCA\h">3V/Bg4qKm=E\8]@^)gCh2+44^%nQNI;K_`.ECdhu=77qGd`PaAQ1$1@4g.Q"t@7J7B"QDUc/3u0_iV;4IETIKLGWB=MBc&@_c]_K#7E^.J>09kV-J>*s&]SM'Wd,1N%p![Pp'S;7Q(g3UN.&FkI-Ol7+;2Jk:<+<6-Qc:gOe/hRqW]dJs<3^2%8rS^,Hul:I@p>$ppahV;)j.8N#VO.G/4k.B%Bg2Beg2G.%]-2hIl.%8CNa<349"AuW+^1]T@B6b%@Y>qH;IFo:]46/@2=_(8"XJW2IK[S9WBeNKXUSp$1lA*JCm!:d$C3,C[7DT5(2:_R=M>=\%m7LbtMVtEK.>C3Dk.VMqWo?P^XpN_OZ=ekB;MeqBZs^`pPo*Z"p^EQqY/:V\QRb49.*dA:n9qjGJijhN![pPs2FT,qUkGZSXG!M[%/>$"/er,nFI1X7(-8]N&<645QnOc.P.H0%`.j=0Z/"PkClhH46:_XD(S5G5Z:La.`$T:88muK_>U5l3f*2)g9YsbFOQjncSKe_io%&VDQ8M,>'+a/EM6cIEbSd=n<66U*XW'^e!r%T4*6#uVik6@I:Wb>AfJ>3[/<Qs<KBkUm"I<!7[ASRM=_N/Dkk^N4b)_/e0A>hL-7%Cb^1s87%VgLf4&]Q!V!4#R]td\H]t+B*U$.00PQNo7]cD%on/0^/b840VJnHN0L$MVe;(U;XM:_B^IU#;3d[/65f&5*AWG>O\bUb%lN52^:r-[L+VH(XgEWSmEoIc"O-%KHq/d&J<#[+ONtTY5UVo^&WNBfa?b0).a4f"R;b.<WV871#=:Z2Pd1*e7j(68::'G6?)juQU%?;ZUO=`XKdYditt,rA_[EVRtqS65u2@j>V8@2=ScFFM9,@"GI>ghedYI2lJc<\0okA]C'I5FUp$Q^6g,5+*@+bUm/8iEfggphoT`%IlmP.X)j2WpYNR?H+<n:TA?(:\bBIgr+B[Ac,Yn7[aWOboU#CJq`A0"IG3SHs8)JfrrS@`jPl)U=7:%OrI82`3Lg~>%AI9_PrivateDataEnd