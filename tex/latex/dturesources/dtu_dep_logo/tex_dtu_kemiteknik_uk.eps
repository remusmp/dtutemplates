%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: DTU Kemiteknik UK.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: PeopleGroup%%CreationDate: 27/02/08%%BoundingBox: 0 0 295 26%%HiResBoundingBox: 0 0 294.8799 25.3145%%CropBox: 0 0 294.8799 25.3145%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 12 8%%BeginData: 3328 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45939AFD04FF52277D5927527DFF7DA8FFA852537D52FD05FFA8FFFF%FFA87DFFFFA8FFFFA828FFFF7D52A8FD04FFAFFFA87DFD0AFFA8FF7DA8FD%04FFA8FD38FF689AFD04FF52FF28FF52FF52FF52A8FF7D7DFFA85227A827%527D522752527D527D52A85252A852FFFF277DA852277D7D52277D527D27%527D5227A827527D527D527D52277D7D5227FD37FF8D9AFFFFFFA859FF52%A852FF52FF7DA8FF527DFFA87DA8525252A8FD047DA87D52FFFF7D27A852%FFFF527DFF52A87D7D277DFF7DA8A87D52277D525252A87DFF52A87DA852%7D287DFD37FF689AFD04FF275252FF52FF7D5227FFFFA827FD057D2752A8%FD047DA8527D527D27525259FFFF5252A87D7D7D52277DFF7DA87D7D7D27%52A8277DA87DFF7D7D7DA87D52527DFD37FF8D9AFD05FFA8FD05FFA8FD05%FFA8FD05FFA8FD0BFFA8FD05FFA8FD04FF7D5252FD06FFA8FFFFFFA8FD08%FF7D527DFD37FF689AFD24FFA8FFFFFFA8FD06FFA8A8FD13FFA8A8FD14FF%A8FD09FFA8FD07FFA8FD11FF8D9AFD04FFA87DA8FD06FFA8FFFFFFA8A8FD%0AFFA8FFFFFFA8FFA87DFFFF7DA87DA8FFFFA8FD05FFA8FD05FFA8A8FFFF%A8FD05FFA8A8FFFD04A8FD05FFA8A8FD0FFFA8A8FF7EA8A8FD05FFA8FD0B%FFA8FFAFFD04FF689AFD04FF7DFF7DA87DA87DA8A8A87DA87DA87DA87D7D%7DA87DA87D7D7DA87DFFA87D7DA87DFFA8A8FFA87DA8A87D7DA87D7D7DA8%A87EA8A97DA87EFFA87D7DA87DA87D7DA8FF7DA87DA87DA87DA87DA87D84%A8A87DA87D7D7DA87EA87DFF7DA87DFFA87DA8A87DA8A8A87DA8A87E7DA8%7D7DA8A87DA87DA87D7D7DA87D7D8D9AFD04FFA8FFA87DA8A8A8AFA8A8A8%7EFFA8FFFD04A87DFD06A8FFFFFD05A8FFFFA8FFA8FFA8A87DA87EFD04A8%7EA8FFA8A87DFFFFFF7DA8A8FF7DA8A8A8FFFD06A8FF7DFFFFA8A8A87DA8%7DA8A8A87DA87EFFA8A87DA8FFFF7DFFFD04A87DFD04A8FF7DA8A8A87EA8%7EFFFD04A87DA8A8689AFD04FF7DA8A8A87DA87DA8A87D7DA8A8FF7DFD05%A87DA87EFFA8A87DFFA87E7DFFA8FFFD07A87EFD0AA87DA8A8FF7D7D7DA8%A8A87DA8A8FF7DA87DA87DA87DA87DA8A8A87DFD07A87DA8A8A87DA87DFF%FFFD04A8FF7D7D7DA87DA8A8A87DFD07A87DA8A8A87DA8FD0CFFA8A8FD37%FFA8FFFFFFA8FD07FFAFFD19FF7D84A8FD0FFFA8A87DFD6CFFA8FD11FFA8%FF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2008-01-14T11:34:40+01:00</xap:CreateDate>
         <xap:ModifyDate>2008-02-27T18:42:04+01:00</xap:ModifyDate>
         <xap:MetadataDate>2008-02-27T18:42:04+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>24</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAGAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6L/zjF/yimrf8x//ADJT&#xA;MbTci9F7R/3sf6v6UR+co8kHzv5N/wAaG2Ggiz1ppfrbcU9QLacOJBDep/Lx+LwzJedYt5Z8naNq&#xA;N3+Vt1r+kR3Go6nb6i19JfRBriaK2tx9S9ctVmMcITjXCqI8o6nZzXPkXy0k4fX9I8x61Pqumb+v&#xA;bxcr9hJKnVUInTix2PLbFWQefpPJ4/Ne3Xz7JGnlxdDVtKF+xWw+v/W5PXIrSP1xEI6V3p0xVAWM&#xA;mveX/OGrXOhXi2+j3Xm79H3fl9LaAQytPpEExmWUKJUf1ANg1D18aqsa8r/mZ+ZOseUNa1WXzPEL&#xA;qzs1uzBDFYC5tboXRia3e2aFmWAo1P3nx1WoahxVk1hrH5hfp+XS7/zRLd2cl7rGlECzsY3UWlmt&#xA;1BOpELL6g5FWDKVI/ZxVC/l751vhHoGn6nro0KwtdA0u603S7eCzRtVkmSX10jEsbGqGJVCQceuK&#xA;sRf8wrzzZ5c1201bUY9WitpdA1LQXuhZfXYDNqccNwp+qRwoHUHi4C1XlxJ3xV6P+exsTqnlJNUl&#xA;sI9JaW9M/wCmBM2nGURJ6InETICftcOZpXFUr1vzF5003VrxdF8xJFo2k2Gg30Gnw2tpJaSR31y1&#xA;tJDC5iEywlEDIS5YfzYqt8tedPPPmL8zrzQG8wS6fZW15qsFxBGNKT91bO0dr9Tjnhmu5GWnKVnX&#xA;jt4Yqk0Ov+d9M8haZc6Hr76dDa+UF1z6itnYvAZoHjVkUGAOqyh2LfFselBtiqaW/wCZ3n+b8zNS&#xA;05NQtVgtJglv5bnWCJprdrFp1lgqv1qaRpAD8L8QK1G64qlXlX8x/wAxtZ8majqjeaYnubdLCasM&#xA;dgbm3nnuzbTW81t6J4w8HqvMCQstQ3E0Kqe+ZrjzRonmPzSbPzBcHUrXTtBdNSe108yt615PbyRu&#xA;BbBTGeZcD7Qbo1NsVQHmj8w/P/l+1nsLnXJbl7XX7zTm1OCDT4Ll4E02G9tlb6yn1NArzkSOVrxF&#xA;Rir1/wAgzatceS9GuNYvk1LVJ7WOW8vYmgaOSWQcm4NbKkJQV4qVHQdT1IVP8VdirsVdirsVdirs&#xA;VdirsVdirsVdirsVeN/84xf8opq3/Mf/AMyUzG03IvRe0f8Aex/q/pem6zqd3Df2VhaWUV5NcpNO&#xA;PXlMKr9WMfQiOarEy7dMyXnVO0836PMlqJXeCe5WMtE0bsI2lYoqSSKpjQlwVHJhXtiq+38zaDO0&#xA;stu0kkioHPC2uC8kYfhyjAj5SqrN1SoGKrR5u8vywxyQyyXIkR5o0it55GpExViVWMlCGWnxUxVR&#xA;i89+XjbWs00k0DXUMU6RPbzlgsxKpXijD4mUhd/i7VqMVVV83+WhDHOlz+7uA0hZYZTxCP6TPLRK&#xA;xgMONZKYquk83aGrXCLJLJLb+tyRYJvia2JWVUbhxdlI3Cn36Yqqp5g0ttJtdXmEkUNwF9BXhkM3&#xA;KTYKsYUyEn/JG43G2+KoSLzVaTavp+n6dC0sF5HNPJcenMioI2CkD93Tl6ho3IjidjuQMVdda9dt&#xA;+kngsIp9P0wutxLNMUZ5IoxKwjjEUgIFQKswxVUtvOGiTWiztJJHITErW/ozmXnMpZFSP0+cgIVq&#xA;Mq0NDirGLPS/yt0zX4NctjcfXWkkurOJXv5raKfUDIkkkVt8cMUs55qQEBrUUxVky+cNGYiZZ1ay&#xA;eFZY5FWUyszzGAIIgnInmtKD4q9sVRB1/SFu7aKT1Ybi8olu01tPEGJBYR+o8aqG2Pwk19sVag16&#xA;zXQbTWLiJ4YbuGO4dIYpLgp6sfqHl6SMaAdWKgYq0nmvQXmgiS5LNcCIxOIpTH/pH91WThwUvXYM&#xA;R4YqkWqW/lfznqtraSJdF7GKW6sdWtZruwljLMIJFhmi9EujqaMVYqcVUvL+v6fpOnQaRpmn29rp&#xA;dil1b2sEV000kKWIko1xGYy6I/pfa5OakdScVZDF5q0RpVge4CTcaueEnohvS9Zk9YqI+Qj+LjWt&#xA;O2KoWfztpUU9p+7nNpdRTy/WTb3IIEAjNRGYuTIyy15j4RTFUY3mnQVuPQNz8VB8YjkMVWj9YL6o&#xA;X0+Rj+ILyrTtiqja+dPLl1cRW8Ny/qzMiRh4J0BaVecYLOiqOa7rU79sVXad5o0+7ht92e4mgS4d&#xA;LaKedEV1LCrrH8NQp4hqE+GKtReatPuLy0trQNK09y9rOJFkgkhdLd5/ijlRX3CU7dcVWP5nprlx&#xA;pqraolq8aTPPc+nMxeNZf3UIjfnRXH7QqcVVIvOHl6WAzpcvwAiZQYZ1dxOeMZiQoGk5EUHAHFVM&#xA;ectHLmT1StmqEu7RzrKJBOtvx9Ixhv7x+Pz7YqqSeb/L8cCzPcOFPqck9CcyJ6BAlMkYTnGEJFS4&#xA;AxVUfzRoSTyQNc/FEHLOI5DGfTj9V1WQLwZlT4iqsTTtiqgPN+lCWQyOy2/GD0SIrgzO05lAHo+l&#xA;yofQPGla/KlVV03nHy7FAk7XDtE0ZlJjgnkKoHMZaRURjH8alfjA3GKpP+WH5d/4G0m70/8ASH6R&#xA;+tT+v6vo+hx+BU48ectfs9a5Vjx8Lse0tf8AmZiXDw0K53+gJ7quk31zqFnf2N3HbT2kc8VJYTOr&#xA;LOYySAskNCvpe+WuuSqHyJHb3cE8dxHMqJAsy3MTyMzQMW5o0csSqWJr8StQ4qg7HyVq82lQJeXq&#xA;2tzDB9XhijiqEQ3CTusxEp9Xn6QU8Su2FU20PyoNL51uFk9SOZCscXpKPXmab4QXegXlQDAqHg8l&#xA;yraxQTXyu0VvYWqukJQcNPuTOpIMjbutFO/v7Yqpz+Q1kuXn+sxSiZ52mhuIHkjKz3DzgAJNEar6&#xA;hWpJB8MVRo8prVK3RIWe+nICUr9f5/D9r9j1Ovf2xVUGgXv6G06z+up9c0x43guvQPpt6SlAHi9S&#xA;u6NQ0cb7inTFW9K8uNY3dtdPdetLDDdRy/BwDveXC3LuPiPEBlIC79euKrJ/L18W1KK2vY47HVOb&#xA;TwyQGR1eWL02McgljABoDRlOKoS/8k/WpFlF2okjW0EYeIslbRJozyCyRsQ63B2DClOpxVdB5MEZ&#xA;qLiOP47F/ThhZIwbG4ef4Q0kh/eepTdjTrv0xVT/AMDurrLHfBZ4n9WBmi5KH+uSXY5LzHIfveFA&#xA;R41xVfceUL271mDU7rUI5GikglMYt2HFoCarCzTN6av+0N9++Kq935Wmm0PStMjvAv6NWJHaSIyR&#xA;TiKIxUkiDpsftD4tjiqlY+TBa2ENp9c5+jJYSB/TpX6gytSnI/b4/R74qraF5ZuNLuoZHvFngtbX&#xA;6laxrCY3EfMODI/qOGYcabKuKoQeSrkqYXv4xbqbxovTtyktb31KiWT1W5qnrE8Qq1oK9MVbbyOz&#xA;obWS+rprSG4aARUl9U2/oV9XmRx/a48K170xVFr5dv5Wt3vb6OZ7a2uLRGigMVUuFiHJqyyfEvpd&#xA;qA17YqgLfyEsEpIuYZI3RAxlgdpFdLdYOUbLMqL9itCjfPFUXD5PEbRN9br6TWDf3dK/UFK/zft1&#xA;+j3xVS0/yde6fZyWdpqQSK4tEtbl/RPq844TCssLiVfTNKGhDdMVW6N5JfT72C7e8SR4ZxOyxQek&#xA;rEWz23eSTc8+RPjiqNk8uTfpe7voZrcR3rI8yTWxllUpGsX7qUSpxqqDqp3xVKNZ8m3g02zSzlkn&#xA;ltLays6Q8YpeNrKGaWNmkQBiOg5Cnjirem+UL24s4nvWFlMlFMVDI7iO9S6EkjGWX45PT+L4261r&#xA;2xVXvfIguL6a8S5jMk8kzSRXELyRFJuHw8Umhaq+n15b16Yq7/AcYnuyk0HoXPrMitA5lieaIxkx&#xA;uJglAWJAMdabV74qjpvK4k1SO/8ArNODWjenw6/VBMOvL9v1/DaneuKsb1jyfrMV0PqUTX0Xpv8A&#xA;DyWOCRpbyW4MVwnrwsUVZR05V3+HthV//9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:B655F9E626C4DC11B0F7C948713094C1</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:C98A8962E6F511DCA9DBE848ED1657C8</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:B555F9E626C4DC11B0F7C948713094C1</stRef:instanceID>
            <stRef:documentID>uuid:B455F9E626C4DC11B0F7C948713094C1</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5080.000000</stDim:w>
            <stDim:h>5080.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.609398</xapG:cyan>
                           <xapG:magenta>67.578102</xapG:magenta>
                           <xapG:yellow>66.796898</xapG:yellow>
                           <xapG:black>89.843796</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>6.250000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>96.093796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>62.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>51.562500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.890602</xapG:cyan>
                           <xapG:magenta>76.562500</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>26.953102</xapG:cyan>
                           <xapG:magenta>81.250000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>16.796898</xapG:cyan>
                           <xapG:magenta>97.656296</xapG:magenta>
                           <xapG:yellow>92.187500</xapG:yellow>
                           <xapG:black>6.640601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.390601</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>79.296898</xapG:magenta>
                           <xapG:yellow>96.484398</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>98.046898</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>34.765602</xapG:magenta>
                           <xapG:yellow>86.718796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>4.687500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>92.968796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>18.750000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>97.656296</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>98.828102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>99.218796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>85.937500</xapG:cyan>
                           <xapG:magenta>17.578102</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>3.906298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>89.843796</xapG:cyan>
                           <xapG:magenta>33.203102</xapG:magenta>
                           <xapG:yellow>98.437500</xapG:yellow>
                           <xapG:black>25.781298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.781296</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>74.609398</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984399</xapG:magenta>
                           <xapG:yellow>45.703102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.531296</xapG:cyan>
                           <xapG:magenta>14.843798</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.109398</xapG:cyan>
                           <xapG:magenta>52.343796</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>98.828102</xapG:cyan>
                           <xapG:magenta>96.093796</xapG:magenta>
                           <xapG:yellow>3.515601</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>26.171898</xapG:yellow>
                           <xapG:black>24.609398</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>98.046898</xapG:magenta>
                           <xapG:yellow>0.781298</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>49.218796</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>1.171899</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>34.765602</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>37.109398</xapG:yellow>
                           <xapG:black>10.937500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>11.718798</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>49.218796</xapG:yellow>
                           <xapG:black>0.781298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>96.484398</xapG:magenta>
                           <xapG:yellow>20.312500</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656298</xapG:cyan>
                           <xapG:magenta>27.343798</xapG:magenta>
                           <xapG:yellow>39.843796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.843796</xapG:cyan>
                           <xapG:magenta>42.578102</xapG:magenta>
                           <xapG:yellow>52.343796</xapG:yellow>
                           <xapG:black>6.640601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.390602</xapG:cyan>
                           <xapG:magenta>52.734398</xapG:magenta>
                           <xapG:yellow>60.546898</xapG:yellow>
                           <xapG:black>23.437500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>57.421898</xapG:cyan>
                           <xapG:magenta>60.156296</xapG:magenta>
                           <xapG:yellow>63.671898</xapG:yellow>
                           <xapG:black>41.796898</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656298</xapG:cyan>
                           <xapG:magenta>38.281296</xapG:magenta>
                           <xapG:yellow>63.281296</xapG:yellow>
                           <xapG:black>1.171899</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>31.640602</xapG:cyan>
                           <xapG:magenta>48.828102</xapG:magenta>
                           <xapG:yellow>73.828102</xapG:yellow>
                           <xapG:black>9.765601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.937500</xapG:cyan>
                           <xapG:magenta>57.031296</xapG:magenta>
                           <xapG:yellow>83.593796</xapG:yellow>
                           <xapG:black>22.656298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.062500</xapG:cyan>
                           <xapG:magenta>63.671898</xapG:magenta>
                           <xapG:yellow>92.968796</xapG:yellow>
                           <xapG:black>35.546898</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>41.406296</xapG:cyan>
                           <xapG:magenta>69.531296</xapG:magenta>
                           <xapG:yellow>96.484398</xapG:yellow>
                           <xapG:black>48.828102</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>47.656296</xapG:cyan>
                           <xapG:magenta>73.046898</xapG:magenta>
                           <xapG:yellow>83.203102</xapG:yellow>
                           <xapG:black>67.968796</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.781298</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984399</xapG:magenta>
                           <xapG:yellow>45.703102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>98.046898</xapG:magenta>
                           <xapG:yellow>0.781298</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>48.437500</xapG:cyan>
                           <xapG:magenta>36.328102</xapG:magenta>
                           <xapG:yellow>33.593796</xapG:yellow>
                           <xapG:black>1.562500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -25.3145 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 25.3145 li294.88 25.3145 li294.88 0 licpclp[1 0 0 1 0 0 ] concat3.57129 0.234375 mo3.57129 22.9092 li0 22.9092 li0 0.234375 li3.57129 0.234375 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0 0.91 0.72 0.23 cmykf293.597 18.4238 mo293.597 17.7031 293.271 17.1387 291.972 17.1387 cv290.624 17.1387 290.349 17.751 290.349 18.4238 cv290.349 18.5215 li290.349 19.0498 290.589 19.7461 291.972 19.7461 cv293.271 19.7461 293.597 19.2422 293.597 18.5215 cv293.597 18.4238 licp293.69 23.3555 mo293.69 22.8857 293.306 22.6934 292.224 22.416 cv290.866 22.0684 li290.517 22.3691 290.276 22.6689 290.276 23.2949 cv290.276 23.4033 li290.276 24.0771 290.673 24.498 292.007 24.498 cv293.378 24.498 293.69 24.1133 293.69 23.4512 cv293.69 23.3555 licp294.665 17.1016 mo294.233 17.1865 li294.448 17.4141 294.642 17.7754 294.642 18.4238 cv294.642 18.5215 li294.642 19.8438 293.825 20.5781 291.972 20.5781 cv291.335 20.5781 290.925 20.4814 290.577 20.3359 cv290.372 20.4336 290.276 20.5654 290.276 20.7441 cv290.276 20.9492 290.372 21.0586 290.649 21.1299 cv292.44 21.5869 li293.62 21.8877 294.749 22.2246 294.749 23.3555 cv294.749 23.4512 li294.749 24.6055 293.979 25.3145 292.007 25.3145 cv290.108 25.3145 289.241 24.582 289.241 23.4033 cv289.241 23.2949 li289.241 22.6211 289.603 22.0684 289.999 21.7676 cv289.915 21.7324 li289.53 21.5635 289.362 21.166 289.362 20.793 cv289.362 20.7822 li289.362 20.4561 289.519 20.1084 289.854 19.915 cv289.481 19.5674 289.302 19.1338 289.302 18.5215 cv289.302 18.4238 li289.302 17.3555 289.903 16.2959 291.972 16.2959 cv294.604 16.2959 li294.749 16.2959 294.88 16.416 294.88 16.5605 cv294.88 16.873 li294.88 17.0293 294.798 17.0771 294.665 17.1016 cvcp287.534 22.9092 mo286.958 22.9092 li286.825 22.9092 286.716 22.8008 286.716 22.6689 cv286.716 18.7129 li286.716 17.498 286.308 17.125 285.394 17.125 cv284.89 17.125 284.325 17.3174 283.771 17.5957 cv283.771 22.6689 li283.771 22.7891 283.663 22.9092 283.53 22.9092 cv282.94 22.9092 li282.819 22.9092 282.712 22.8008 282.712 22.6689 cv282.712 16.5361 li282.712 16.4043 282.808 16.2959 282.94 16.2959 cv283.542 16.2959 li283.675 16.2959 283.771 16.4043 283.771 16.5361 cv283.771 16.7656 li284.433 16.3926 284.972 16.2119 285.683 16.2119 cv287.124 16.2119 287.774 17.1133 287.774 18.7129 cv287.774 22.6689 li287.774 22.8008 287.667 22.9092 287.534 22.9092 cvcp280.692 22.9092 mo280.114 22.9092 li279.983 22.9092 279.874 22.8008 279.874 22.6689 cv279.874 16.5361 li279.874 16.4043 279.983 16.2959 280.114 16.2959 cv280.692 16.2959 li280.823 16.2959 280.933 16.4043 280.933 16.5361 cv280.933 22.6689 li280.933 22.8008 280.823 22.9092 280.692 22.9092 cvcp280.716 15.2373 mo280.104 15.2373 li279.97 15.2373 279.862 15.1299 279.862 14.9971 cv279.862 14.0352 li279.862 13.9033 279.97 13.7949 280.104 13.7949 cv280.716 13.7949 li280.849 13.7949 280.956 13.9033 280.956 14.0352 cv280.956 14.9971 li280.956 15.1299 280.849 15.2373 280.716 15.2373 cvcp278.347 17.125 mo277.794 17.125 277.288 17.2705 276.688 17.6309 cv276.688 22.6689 li276.688 22.7891 276.579 22.9092 276.448 22.9092 cv275.858 22.9092 li275.737 22.9092 275.63 22.8008 275.63 22.6689 cv275.63 16.5361 li275.63 16.4043 275.726 16.2959 275.858 16.2959 cv276.423 16.2959 li276.556 16.2959 276.651 16.4043 276.651 16.5361 cv276.651 16.7891 li277.253 16.3672 277.808 16.2119 278.347 16.2119 cv278.517 16.2119 278.601 16.2832 278.601 16.4287 cv278.601 16.9219 li278.601 17.0537 278.517 17.125 278.347 17.125 cvcp273.116 19.0264 mo273.116 17.666 272.601 17.1387 271.542 17.1387 cv270.507 17.1387 269.931 17.7275 269.931 19.0264 cv269.931 19.1338 li273.116 19.1338 li273.116 19.0264 licp273.958 19.9395 mo269.931 19.9395 li269.931 20.1084 li269.931 21.5391 270.495 22.0684 271.601 22.0684 cv272.3 22.0684 273.188 22.0195 273.741 21.9355 cv273.767 21.9355 273.778 21.9355 273.802 21.9355 cv273.897 21.9355 273.995 21.9844 273.995 22.1045 cv273.995 22.5137 li273.995 22.6689 273.946 22.7529 273.753 22.7891 cv273.069 22.9219 272.407 22.9932 271.601 22.9932 cv270.22 22.9932 268.872 22.3447 268.872 20.1084 cv268.872 19.0264 li268.872 17.3066 269.821 16.2119 271.542 16.2119 cv273.296 16.2119 274.187 17.3174 274.187 19.0264 cv274.187 19.6758 li274.187 19.8311 274.103 19.9395 273.958 19.9395 cvcp266.575 19.0264 mo266.575 17.666 266.058 17.1387 264.999 17.1387 cv263.966 17.1387 263.388 17.7275 263.388 19.0264 cv263.388 19.1338 li266.575 19.1338 li266.575 19.0264 licp267.417 19.9395 mo263.388 19.9395 li263.388 20.1084 li263.388 21.5391 263.954 22.0684 265.062 22.0684 cv265.757 22.0684 266.647 22.0195 267.2 21.9355 cv267.224 21.9355 267.237 21.9355 267.261 21.9355 cv267.356 21.9355 267.452 21.9844 267.452 22.1045 cv267.452 22.5137 li267.452 22.6689 267.405 22.7529 267.214 22.7891 cv266.526 22.9219 265.866 22.9932 265.062 22.9932 cv263.677 22.9932 262.331 22.3447 262.331 20.1084 cv262.331 19.0264 li262.331 17.3066 263.28 16.2119 264.999 16.2119 cv266.755 16.2119 267.646 17.3174 267.646 19.0264 cv267.646 19.6758 li267.646 19.8311 267.56 19.9395 267.417 19.9395 cvcp260.671 22.9092 mo260.095 22.9092 li259.962 22.9092 259.853 22.8008 259.853 22.6689 cv259.853 18.7129 li259.853 17.498 259.444 17.125 258.53 17.125 cv258.024 17.125 257.46 17.3174 256.907 17.5957 cv256.907 22.6689 li256.907 22.7891 256.798 22.9092 256.667 22.9092 cv256.077 22.9092 li255.956 22.9092 255.849 22.8008 255.849 22.6689 cv255.849 16.5361 li255.849 16.4043 255.946 16.2959 256.077 16.2959 cv256.679 16.2959 li256.812 16.2959 256.907 16.4043 256.907 16.5361 cv256.907 16.7656 li257.569 16.3926 258.108 16.2119 258.819 16.2119 cv260.263 16.2119 260.911 17.1133 260.911 18.7129 cv260.911 22.6689 li260.911 22.8008 260.804 22.9092 260.671 22.9092 cvcp253.829 22.9092 mo253.251 22.9092 li253.12 22.9092 253.013 22.8008 253.013 22.6689 cv253.013 16.5361 li253.013 16.4043 253.12 16.2959 253.251 16.2959 cv253.829 16.2959 li253.96 16.2959 254.069 16.4043 254.069 16.5361 cv254.069 22.6689 li254.069 22.8008 253.96 22.9092 253.829 22.9092 cvcp253.853 15.2373 mo253.241 15.2373 li253.108 15.2373 252.999 15.1299 252.999 14.9971 cv252.999 14.0352 li252.999 13.9033 253.108 13.7949 253.241 13.7949 cv253.853 13.7949 li253.985 13.7949 254.095 13.9033 254.095 14.0352 cv254.095 14.9971 li254.095 15.1299 253.985 15.2373 253.853 15.2373 cvcp250.341 18.4238 mo250.341 17.7031 250.017 17.1387 248.72 17.1387 cv247.372 17.1387 247.097 17.751 247.097 18.4238 cv247.097 18.5215 li247.097 19.0498 247.335 19.7461 248.72 19.7461 cv250.017 19.7461 250.341 19.2422 250.341 18.5215 cv250.341 18.4238 licp250.438 23.3555 mo250.438 22.8857 250.054 22.6934 248.972 22.416 cv247.612 22.0684 li247.263 22.3691 247.024 22.6689 247.024 23.2949 cv247.024 23.4033 li247.024 24.0771 247.421 24.498 248.755 24.498 cv250.124 24.498 250.438 24.1133 250.438 23.4512 cv250.438 23.3555 licp251.411 17.1016 mo250.979 17.1865 li251.196 17.4141 251.39 17.7754 251.39 18.4238 cv251.39 18.5215 li251.39 19.8438 250.569 20.5781 248.72 20.5781 cv248.081 20.5781 247.673 20.4814 247.325 20.3359 cv247.12 20.4336 247.024 20.5654 247.024 20.7441 cv247.024 20.9492 247.12 21.0586 247.396 21.1299 cv249.188 21.5869 li250.366 21.8877 251.497 22.2246 251.497 23.3555 cv251.497 23.4512 li251.497 24.6055 250.726 25.3145 248.755 25.3145 cv246.854 25.3145 245.989 24.582 245.989 23.4033 cv245.989 23.2949 li245.989 22.6211 246.349 22.0684 246.747 21.7676 cv246.663 21.7324 li246.276 21.5635 246.11 21.166 246.11 20.793 cv246.11 20.7822 li246.11 20.4561 246.267 20.1084 246.603 19.915 cv246.229 19.5674 246.05 19.1338 246.05 18.5215 cv246.05 18.4238 li246.05 17.3555 246.649 16.2959 248.72 16.2959 cv251.353 16.2959 li251.497 16.2959 251.628 16.416 251.628 16.5605 cv251.628 16.873 li251.628 17.0293 251.546 17.0771 251.411 17.1016 cvcp244.282 22.9092 mo243.706 22.9092 li243.571 22.9092 243.464 22.8008 243.464 22.6689 cv243.464 18.7129 li243.464 17.498 243.056 17.125 242.142 17.125 cv241.636 17.125 241.069 17.3174 240.517 17.5957 cv240.517 22.6689 li240.517 22.7891 240.409 22.9092 240.278 22.9092 cv239.688 22.9092 li239.567 22.9092 239.46 22.8008 239.46 22.6689 cv239.46 16.5361 li239.46 16.4043 239.556 16.2959 239.688 16.2959 cv240.288 16.2959 li240.423 16.2959 240.517 16.4043 240.517 16.5361 cv240.517 16.7656 li241.181 16.3926 241.72 16.2119 242.429 16.2119 cv243.872 16.2119 244.522 17.1133 244.522 18.7129 cv244.522 22.6689 li244.522 22.8008 244.413 22.9092 244.282 22.9092 cvcp237.86 22.9336 mo237.403 22.9824 236.224 22.9932 235.517 22.9932 cv233.833 22.9932 232.954 22.3574 232.954 20.7578 cv232.954 16.127 li232.954 14.5273 233.833 13.8916 235.517 13.8916 cv236.224 13.8916 237.354 13.915 237.86 13.9629 cv237.933 13.9766 237.979 14.0586 237.979 14.1318 cv237.979 14.7324 li237.979 14.8164 237.933 14.877 237.849 14.877 cv235.528 14.877 li234.253 14.877 234.048 15.2139 234.048 16.127 cv234.048 17.7988 li237.739 17.7988 li237.872 17.7988 237.979 17.9063 237.979 18.0391 cv237.979 18.4961 li237.979 18.6289 237.872 18.7383 237.739 18.7383 cv234.048 18.7383 li234.048 20.7578 li234.048 21.6709 234.253 22.0078 235.528 22.0078 cv237.849 22.0078 li237.933 22.0078 237.979 22.0684 237.979 22.1523 cv237.979 22.7656 li237.979 22.8379 237.933 22.9219 237.86 22.9336 cvcp227.606 22.9092 mo226.981 22.9092 li226.862 22.9092 226.767 22.8008 226.767 22.6689 cv226.767 14.0957 li226.767 13.9766 226.851 13.8672 226.981 13.8672 cv227.606 13.8672 li227.728 13.8672 227.823 13.9629 227.823 14.0957 cv227.823 22.6689 li227.823 22.7891 227.739 22.9092 227.606 22.9092 cvcp223.952 19.7109 mo223.062 19.7109 li221.607 19.7109 221.222 20.0352 221.222 20.8896 cv221.222 21.0332 li221.222 21.9004 221.631 22.1279 222.329 22.1279 cv222.882 22.1279 223.376 21.959 223.952 21.6475 cv223.952 19.7109 licp224.771 22.9092 mo224.216 22.9092 li224.083 22.9092 223.976 22.8008 223.976 22.6689 cv223.976 22.4053 li223.399 22.7422 222.798 22.9932 222.124 22.9932 cv221.102 22.9932 220.163 22.5488 220.163 21.0459 cv220.163 20.9023 li220.163 19.6035 220.921 18.9531 223.062 18.9531 cv223.952 18.9531 li223.952 18.4727 li223.952 17.4629 223.604 17.1133 222.665 17.1133 cv221.884 17.1133 221.307 17.1621 220.825 17.21 cv220.802 17.21 220.788 17.21 220.765 17.21 cv220.657 17.21 220.549 17.1738 220.549 17.0176 cv220.549 16.5977 li220.549 16.4648 220.634 16.3926 220.802 16.3672 cv221.294 16.2832 221.848 16.2119 222.665 16.2119 cv224.337 16.2119 225.011 17.0537 225.011 18.4727 cv225.011 22.6689 li225.011 22.8008 224.901 22.9092 224.771 22.9092 cvcp218.817 22.8623 mo218.419 22.9336 217.88 22.9932 217.314 22.9932 cv215.679 22.9932 214.753 21.8398 214.753 20.0713 cv214.753 19.1338 li214.753 17.3652 215.667 16.2119 217.314 16.2119 cv217.868 16.2119 218.419 16.2725 218.817 16.3438 cv219.01 16.3809 219.058 16.4414 219.058 16.6094 cv219.058 17.041 li219.058 17.1621 218.962 17.2227 218.854 17.2227 cv218.829 17.2227 218.817 17.2227 218.805 17.2227 cv218.276 17.1621 217.903 17.1387 217.314 17.1387 cv216.352 17.1387 215.811 17.7754 215.811 19.1338 cv215.811 20.0713 li215.811 21.418 216.341 22.0684 217.314 22.0684 cv217.903 22.0684 218.276 22.043 218.805 21.9844 cv218.817 21.9844 218.829 21.9844 218.854 21.9844 cv218.962 21.9844 219.058 22.043 219.058 22.1641 cv219.058 22.5977 li219.058 22.7529 219.01 22.8262 218.817 22.8623 cvcp212.948 22.9092 mo212.372 22.9092 li212.239 22.9092 212.131 22.8008 212.131 22.6689 cv212.131 16.5361 li212.131 16.4043 212.239 16.2959 212.372 16.2959 cv212.948 16.2959 li213.081 16.2959 213.189 16.4043 213.189 16.5361 cv213.189 22.6689 li213.189 22.8008 213.081 22.9092 212.948 22.9092 cvcp212.974 15.2373 mo212.359 15.2373 li212.228 15.2373 212.119 15.1299 212.119 14.9971 cv212.119 14.0352 li212.119 13.9033 212.228 13.7949 212.359 13.7949 cv212.974 13.7949 li213.105 13.7949 213.214 13.9033 213.214 14.0352 cv213.214 14.9971 li213.214 15.1299 213.105 15.2373 212.974 15.2373 cvcp210.124 22.9092 mo209.546 22.9092 li209.413 22.9092 209.306 22.8008 209.306 22.6689 cv209.306 18.4121 li209.306 17.4033 208.837 17.125 208.211 17.125 cv207.778 17.125 207.272 17.2705 206.806 17.4502 cv206.877 17.7148 206.913 18.0283 206.913 18.3887 cv206.913 22.6689 li206.913 22.7891 206.829 22.9092 206.696 22.9092 cv206.06 22.9092 li205.939 22.9092 205.854 22.8008 205.854 22.6689 cv205.854 18.3887 li205.854 17.3418 205.554 17.125 204.929 17.125 cv204.495 17.125 203.966 17.3418 203.461 17.5957 cv203.461 22.6689 li203.461 22.7891 203.377 22.9092 203.245 22.9092 cv202.608 22.9092 li202.487 22.9092 202.403 22.8008 202.403 22.6689 cv202.403 16.5361 li202.403 16.4043 202.5 16.2959 202.632 16.2959 cv203.233 16.2959 li203.365 16.2959 203.461 16.4043 203.461 16.5361 cv203.461 16.7656 li203.942 16.4648 204.556 16.1992 205.218 16.1992 cv205.734 16.1992 206.119 16.3438 206.42 16.6914 cv207.08 16.3809 207.79 16.1992 208.415 16.1992 cv209.498 16.1992 210.363 16.7402 210.363 18.4121 cv210.363 22.6689 li210.363 22.8008 210.256 22.9092 210.124 22.9092 cvcp199.89 19.0264 mo199.89 17.666 199.374 17.1387 198.315 17.1387 cv197.28 17.1387 196.704 17.7275 196.704 19.0264 cv196.704 19.1338 li199.89 19.1338 li199.89 19.0264 licp200.732 19.9395 mo196.704 19.9395 li196.704 20.1084 li196.704 21.5391 197.269 22.0684 198.374 22.0684 cv199.072 22.0684 199.962 22.0195 200.516 21.9355 cv200.54 21.9355 200.552 21.9355 200.575 21.9355 cv200.673 21.9355 200.769 21.9844 200.769 22.1045 cv200.769 22.5137 li200.769 22.6689 200.72 22.7529 200.527 22.7891 cv199.842 22.9219 199.181 22.9932 198.374 22.9932 cv196.992 22.9932 195.646 22.3447 195.646 20.1084 cv195.646 19.0264 li195.646 17.3066 196.596 16.2119 198.315 16.2119 cv200.07 16.2119 200.961 17.3174 200.961 19.0264 cv200.961 19.6758 li200.961 19.8311 200.876 19.9395 200.732 19.9395 cvcp193.985 22.9092 mo193.409 22.9092 li193.277 22.9092 193.168 22.8008 193.168 22.6689 cv193.168 18.7129 li193.168 17.5107 192.663 17.1387 191.882 17.1387 cv191.509 17.1387 190.752 17.2344 190.223 17.4746 cv190.223 22.6689 li190.223 22.7891 190.114 22.9092 189.981 22.9092 cv189.394 22.9092 li189.272 22.9092 189.165 22.8008 189.165 22.6689 cv189.165 14.1074 li189.165 13.9766 189.26 13.8672 189.394 13.8672 cv189.994 13.8672 li190.126 13.8672 190.223 13.9766 190.223 14.1074 cv190.223 16.584 li190.799 16.332 191.545 16.2119 192.063 16.2119 cv193.337 16.2119 194.228 16.9453 194.228 18.7129 cv194.228 22.6689 li194.228 22.8008 194.118 22.9092 193.985 22.9092 cvcp187.577 22.8623 mo187.181 22.9336 186.64 22.9932 186.074 22.9932 cv184.438 22.9932 183.513 21.8398 183.513 20.0713 cv183.513 19.1338 li183.513 17.3652 184.427 16.2119 186.074 16.2119 cv186.627 16.2119 187.181 16.2725 187.577 16.3438 cv187.771 16.3809 187.817 16.4414 187.817 16.6094 cv187.817 17.041 li187.817 17.1621 187.721 17.2227 187.613 17.2227 cv187.589 17.2227 187.577 17.2227 187.565 17.2227 cv187.036 17.1621 186.663 17.1387 186.074 17.1387 cv185.111 17.1387 184.57 17.7754 184.57 19.1338 cv184.57 20.0713 li184.57 21.418 185.1 22.0684 186.074 22.0684 cv186.663 22.0684 187.036 22.043 187.565 21.9844 cv187.577 21.9844 187.589 21.9844 187.613 21.9844 cv187.721 21.9844 187.817 22.043 187.817 22.1641 cv187.817 22.5977 li187.817 22.7529 187.771 22.8262 187.577 22.8623 cvcp181.252 19.1465 mo181.252 17.9199 180.759 17.1387 179.629 17.1387 cv178.51 17.1387 178.017 17.9063 178.017 19.1465 cv178.017 20.0605 li178.017 21.2871 178.498 22.0684 179.629 22.0684 cv180.747 22.0684 181.252 21.2988 181.252 20.0605 cv181.252 19.1465 licp179.629 22.9932 mo177.861 22.9932 176.958 21.8271 176.958 20.0605 cv176.958 19.1465 li176.958 17.3789 177.861 16.2119 179.629 16.2119 cv181.396 16.2119 182.31 17.3789 182.31 19.1465 cv182.31 20.0605 li182.31 21.8271 181.396 22.9932 179.629 22.9932 cvcp175.155 22.9092 mo174.578 22.9092 li174.446 22.9092 174.337 22.8008 174.337 22.6689 cv174.337 16.5361 li174.337 16.4043 174.446 16.2959 174.578 16.2959 cv175.155 16.2959 li175.288 16.2959 175.396 16.4043 175.396 16.5361 cv175.396 22.6689 li175.396 22.8008 175.288 22.9092 175.155 22.9092 cvcp175.179 15.2373 mo174.565 15.2373 li174.435 15.2373 174.325 15.1299 174.325 14.9971 cv174.325 14.0352 li174.325 13.9033 174.435 13.7949 174.565 13.7949 cv175.179 13.7949 li175.312 13.7949 175.421 13.9033 175.421 14.0352 cv175.421 14.9971 li175.421 15.1299 175.312 15.2373 175.179 15.2373 cvcp171.692 20.2402 mo171.692 19.4473 171.296 18.7129 169.876 18.7129 cv168.025 18.7129 li168.025 22.0195 li168.421 22.0313 168.854 22.0684 169.274 22.0684 cv170.767 22.0684 171.692 21.7441 171.692 20.4453 cv171.692 20.2402 licp171.644 16.2119 mo171.644 15.0586 170.682 14.8164 169.215 14.8164 cv168.807 14.8164 168.362 14.8418 168.025 14.8535 cv168.025 17.835 li169.876 17.835 li171.271 17.835 171.644 17.1621 171.644 16.4043 cv171.644 16.2119 licp169.274 22.9932 mo168.481 22.9932 167.772 22.957 167.315 22.8857 cv167.039 22.8496 166.918 22.7422 166.918 22.4414 cv166.918 14.4326 li166.918 14.1553 167.051 14.0117 167.304 13.9863 cv167.699 13.9395 168.434 13.8916 169.215 13.8916 cv171.126 13.8916 172.738 14.3965 172.738 16.2119 cv172.738 16.4043 li172.738 17.2939 172.27 17.9805 171.452 18.292 cv172.282 18.5801 172.786 19.3145 172.786 20.2402 cv172.786 20.4453 li172.786 22.4648 171.151 22.9932 169.274 22.9932 cvcp160.851 17.2227 mo160.452 17.1484 159.828 17.1387 159.442 17.1387 cv158.266 17.1387 157.88 17.8711 157.88 19.1572 cv157.88 20.0244 li157.88 21.334 158.253 22.0684 159.442 22.0684 cv159.852 22.0684 160.441 22.0313 160.851 21.9951 cv160.851 17.2227 licp161.656 22.7891 mo160.909 22.9336 160.177 22.9932 159.442 22.9932 cv157.651 22.9932 156.822 21.8271 156.822 20.0244 cv156.822 19.1572 li156.822 17.2705 157.688 16.2119 159.442 16.2119 cv159.815 16.2119 160.381 16.248 160.851 16.332 cv160.851 14.0957 li160.851 13.9766 160.946 13.8672 161.079 13.8672 cv161.692 13.8672 li161.812 13.8672 161.909 13.9629 161.909 14.0957 cv161.909 22.5137 li161.909 22.6689 161.872 22.7529 161.656 22.7891 cvcp155.163 22.9092 mo154.585 22.9092 li154.453 22.9092 154.346 22.8008 154.346 22.6689 cv154.346 18.7129 li154.346 17.498 153.936 17.125 153.022 17.125 cv152.517 17.125 151.952 17.3174 151.399 17.5957 cv151.399 22.6689 li151.399 22.7891 151.291 22.9092 151.158 22.9092 cv150.569 22.9092 li150.448 22.9092 150.341 22.8008 150.341 22.6689 cv150.341 16.5361 li150.341 16.4043 150.437 16.2959 150.569 16.2959 cv151.171 16.2959 li151.302 16.2959 151.399 16.4043 151.399 16.5361 cv151.399 16.7656 li152.06 16.3926 152.602 16.2119 153.312 16.2119 cv154.754 16.2119 155.403 17.1133 155.403 18.7129 cv155.403 22.6689 li155.403 22.8008 155.294 22.9092 155.163 22.9092 cvcp147.647 19.7109 mo146.757 19.7109 li145.302 19.7109 144.918 20.0352 144.918 20.8896 cv144.918 21.0332 li144.918 21.9004 145.327 22.1279 146.022 22.1279 cv146.577 22.1279 147.071 21.959 147.647 21.6475 cv147.647 19.7109 licp148.466 22.9092 mo147.911 22.9092 li147.779 22.9092 147.672 22.8008 147.672 22.6689 cv147.672 22.4053 li147.094 22.7422 146.493 22.9932 145.819 22.9932 cv144.798 22.9932 143.859 22.5488 143.859 21.0459 cv143.859 20.9023 li143.859 19.6035 144.617 18.9531 146.757 18.9531 cv147.647 18.9531 li147.647 18.4727 li147.647 17.4629 147.299 17.1133 146.359 17.1133 cv145.578 17.1133 145.001 17.1621 144.521 17.21 cv144.497 17.21 144.484 17.21 144.46 17.21 cv144.353 17.21 144.244 17.1738 144.244 17.0176 cv144.244 16.5977 li144.244 16.4648 144.327 16.3926 144.497 16.3672 cv144.989 16.2832 145.542 16.2119 146.359 16.2119 cv148.032 16.2119 148.704 17.0537 148.704 18.4727 cv148.704 22.6689 li148.704 22.8008 148.597 22.9092 148.466 22.9092 cvcp139.157 22.9092 mo138.532 22.9092 li138.411 22.9092 138.315 22.8008 138.315 22.6689 cv138.315 14.0957 li138.315 13.9766 138.399 13.8672 138.532 13.8672 cv139.157 13.8672 li139.277 13.8672 139.374 13.9629 139.374 14.0957 cv139.374 22.6689 li139.374 22.7891 139.29 22.9092 139.157 22.9092 cvcp135.503 19.7109 mo134.612 19.7109 li133.157 19.7109 132.772 20.0352 132.772 20.8896 cv132.772 21.0332 li132.772 21.9004 133.181 22.1279 133.879 22.1279 cv134.432 22.1279 134.925 21.959 135.503 21.6475 cv135.503 19.7109 licp136.319 22.9092 mo135.767 22.9092 li135.634 22.9092 135.526 22.8008 135.526 22.6689 cv135.526 22.4053 li134.948 22.7422 134.348 22.9932 133.674 22.9932 cv132.651 22.9932 131.714 22.5488 131.714 21.0459 cv131.714 20.9023 li131.714 19.6035 132.472 18.9531 134.612 18.9531 cv135.503 18.9531 li135.503 18.4727 li135.503 17.4629 135.153 17.1133 134.216 17.1133 cv133.433 17.1133 132.856 17.1621 132.376 17.21 cv132.352 17.21 132.34 17.21 132.315 17.21 cv132.208 17.21 132.099 17.1738 132.099 17.0176 cv132.099 16.5977 li132.099 16.4648 132.185 16.3926 132.352 16.3672 cv132.845 16.2832 133.397 16.2119 134.216 16.2119 cv135.887 16.2119 136.562 17.0537 136.562 18.4727 cv136.562 22.6689 li136.562 22.8008 136.451 22.9092 136.319 22.9092 cvcp130.367 22.8623 mo129.97 22.9336 129.431 22.9932 128.865 22.9932 cv127.229 22.9932 126.304 21.8398 126.304 20.0713 cv126.304 19.1338 li126.304 17.3652 127.216 16.2119 128.865 16.2119 cv129.418 16.2119 129.97 16.2725 130.367 16.3438 cv130.56 16.3809 130.607 16.4414 130.607 16.6094 cv130.607 17.041 li130.607 17.1621 130.512 17.2227 130.403 17.2227 cv130.38 17.2227 130.367 17.2227 130.354 17.2227 cv129.826 17.1621 129.454 17.1387 128.865 17.1387 cv127.902 17.1387 127.362 17.7754 127.362 19.1338 cv127.362 20.0713 li127.362 21.418 127.892 22.0684 128.865 22.0684 cv129.454 22.0684 129.826 22.043 130.354 21.9844 cv130.367 21.9844 130.38 21.9844 130.403 21.9844 cv130.512 21.9844 130.607 22.043 130.607 22.1641 cv130.607 22.5977 li130.607 22.7529 130.56 22.8262 130.367 22.8623 cvcp124.499 22.9092 mo123.922 22.9092 li123.79 22.9092 123.681 22.8008 123.681 22.6689 cv123.681 16.5361 li123.681 16.4043 123.79 16.2959 123.922 16.2959 cv124.499 16.2959 li124.632 16.2959 124.739 16.4043 124.739 16.5361 cv124.739 22.6689 li124.739 22.8008 124.632 22.9092 124.499 22.9092 cvcp124.524 15.2373 mo123.909 15.2373 li123.778 15.2373 123.671 15.1299 123.671 14.9971 cv123.671 14.0352 li123.671 13.9033 123.778 13.7949 123.909 13.7949 cv124.524 13.7949 li124.655 13.7949 124.765 13.9033 124.765 14.0352 cv124.765 14.9971 li124.765 15.1299 124.655 15.2373 124.524 15.2373 cvcp121.675 22.9092 mo121.097 22.9092 li120.964 22.9092 120.855 22.8008 120.855 22.6689 cv120.855 18.4121 li120.855 17.4033 120.388 17.125 119.761 17.125 cv119.329 17.125 118.823 17.2705 118.355 17.4502 cv118.427 17.7148 118.464 18.0283 118.464 18.3887 cv118.464 22.6689 li118.464 22.7891 118.379 22.9092 118.247 22.9092 cv117.608 22.9092 li117.489 22.9092 117.405 22.8008 117.405 22.6689 cv117.405 18.3887 li117.405 17.3418 117.104 17.125 116.478 17.125 cv116.046 17.125 115.518 17.3418 115.011 17.5957 cv115.011 22.6689 li115.011 22.7891 114.929 22.9092 114.796 22.9092 cv114.159 22.9092 li114.038 22.9092 113.954 22.8008 113.954 22.6689 cv113.954 16.5361 li113.954 16.4043 114.05 16.2959 114.182 16.2959 cv114.783 16.2959 li114.915 16.2959 115.011 16.4043 115.011 16.5361 cv115.011 16.7656 li115.493 16.4648 116.106 16.1992 116.769 16.1992 cv117.284 16.1992 117.67 16.3438 117.97 16.6914 cv118.63 16.3809 119.342 16.1992 119.966 16.1992 cv121.048 16.1992 121.913 16.7402 121.913 18.4121 cv121.913 22.6689 li121.913 22.8008 121.806 22.9092 121.675 22.9092 cvcp111.44 19.0264 mo111.44 17.666 110.924 17.1387 109.866 17.1387 cv108.831 17.1387 108.255 17.7275 108.255 19.0264 cv108.255 19.1338 li111.44 19.1338 li111.44 19.0264 licp112.282 19.9395 mo108.255 19.9395 li108.255 20.1084 li108.255 21.5391 108.819 22.0684 109.925 22.0684 cv110.622 22.0684 111.513 22.0195 112.067 21.9355 cv112.09 21.9355 112.103 21.9355 112.126 21.9355 cv112.222 21.9355 112.318 21.9844 112.318 22.1045 cv112.318 22.5137 li112.318 22.6689 112.271 22.7529 112.077 22.7891 cv111.392 22.9219 110.731 22.9932 109.925 22.9932 cv108.542 22.9932 107.196 22.3447 107.196 20.1084 cv107.196 19.0264 li107.196 17.3066 108.146 16.2119 109.866 16.2119 cv111.62 16.2119 112.511 17.3174 112.511 19.0264 cv112.511 19.6758 li112.511 19.8311 112.427 19.9395 112.282 19.9395 cvcp105.537 22.9092 mo104.96 22.9092 li104.827 22.9092 104.72 22.8008 104.72 22.6689 cv104.72 18.7129 li104.72 17.5107 104.214 17.1387 103.433 17.1387 cv103.06 17.1387 102.302 17.2344 101.772 17.4746 cv101.772 22.6689 li101.772 22.7891 101.665 22.9092 101.532 22.9092 cv100.943 22.9092 li100.823 22.9092 100.715 22.8008 100.715 22.6689 cv100.715 14.1074 li100.715 13.9766 100.81 13.8672 100.943 13.8672 cv101.544 13.8672 li101.677 13.8672 101.772 13.9766 101.772 14.1074 cv101.772 16.584 li102.349 16.332 103.097 16.2119 103.612 16.2119 cv104.887 16.2119 105.776 16.9453 105.776 18.7129 cv105.776 22.6689 li105.776 22.8008 105.668 22.9092 105.537 22.9092 cvcp99.2354 22.8379 mo98.7295 22.9336 98.2607 22.9932 97.2393 22.9932 cv95.7607 22.9932 94.0645 22.1992 94.0645 19.2773 cv94.0645 17.6074 li94.0645 14.6602 95.7607 13.8916 97.2393 13.8916 cv97.9971 13.8916 98.7295 13.999 99.2588 14.084 cv99.3672 14.0957 99.4512 14.1318 99.4512 14.2393 cv99.4512 14.8535 li99.4512 14.9258 99.4277 14.9844 99.3076 14.9844 cv99.2959 14.9844 99.2842 14.9844 99.2705 14.9844 cv98.8389 14.9492 97.9482 14.877 97.252 14.877 cv96.0732 14.877 95.1582 15.5625 95.1582 17.6074 cv95.1582 19.2773 li95.1582 21.2988 96.0732 22.0078 97.252 22.0078 cv97.9365 22.0078 98.8018 21.9492 99.2354 21.9111 cv99.2471 21.9111 99.2705 21.9111 99.2842 21.9111 cv99.415 21.9111 99.4775 21.9727 99.4775 22.1045 cv99.4775 22.5977 li99.4775 22.7422 99.3672 22.8145 99.2354 22.8379 cvcp89.8564 14.6016 mo89.2783 14.6016 li88.7139 14.6016 88.5459 14.7695 88.5459 15.4307 cv88.5459 16.2959 li89.8076 16.2959 li89.9404 16.2959 90.0361 16.3926 90.0361 16.5127 cv90.0361 16.9805 li90.0361 17.1016 89.9404 17.1865 89.8076 17.1865 cv88.5459 17.1865 li88.5459 22.6689 li88.5459 22.7891 88.4385 22.9092 88.3174 22.9092 cv87.7266 22.9092 li87.5957 22.9092 87.4873 22.7891 87.4873 22.6689 cv87.4873 17.1865 li86.3213 17.0537 li86.1885 17.041 86.0928 16.957 86.0928 16.8369 cv86.0928 16.5127 li86.0928 16.3926 86.1885 16.2959 86.3213 16.2959 cv87.4873 16.2959 li87.4873 15.4307 li87.4873 14.1426 88.1123 13.7598 89.1709 13.7598 cv89.4951 13.7598 89.6875 13.7949 89.8438 13.8311 cv89.9775 13.8672 90.0713 13.915 90.0713 14.0225 cv90.0713 14.4199 li90.0713 14.5527 89.9873 14.6016 89.8564 14.6016 cvcp84.1328 19.1465 mo84.1328 17.9199 83.6396 17.1387 82.5088 17.1387 cv81.3896 17.1387 80.8984 17.9063 80.8984 19.1465 cv80.8984 20.0605 li80.8984 21.2871 81.3789 22.0684 82.5088 22.0684 cv83.6279 22.0684 84.1328 21.2988 84.1328 20.0605 cv84.1328 19.1465 licp82.5088 22.9932 mo80.7412 22.9932 79.8398 21.8271 79.8398 20.0605 cv79.8398 19.1465 li79.8398 17.3789 80.7412 16.2119 82.5088 16.2119 cv84.2764 16.2119 85.1914 17.3789 85.1914 19.1465 cv85.1914 20.0605 li85.1914 21.8271 84.2764 22.9932 82.5088 22.9932 cvcp75.8076 22.9336 mo75.5674 22.9697 75.2549 22.9932 75.0264 22.9932 cv73.9189 22.9932 73.3916 22.7051 73.3916 21.3828 cv73.3916 17.1865 li72.2236 17.0537 li72.0928 17.041 71.9951 16.9697 71.9951 16.8369 cv71.9951 16.5127 li71.9951 16.3809 72.0928 16.2959 72.2236 16.2959 cv73.3916 16.2959 li73.3916 15.1172 li73.3916 14.9971 73.4746 14.9004 73.6074 14.877 cv74.2324 14.7803 li74.2451 14.7803 74.2578 14.7803 74.2686 14.7803 cv74.3652 14.7803 74.4482 14.8652 74.4482 14.9844 cv74.4482 16.2959 li75.7471 16.2959 li75.8799 16.2959 75.9893 16.4043 75.9893 16.5361 cv75.9893 16.9453 li75.9893 17.0771 75.8799 17.1865 75.7471 17.1865 cv74.4482 17.1865 li74.4482 21.3828 li74.4482 22.043 74.6172 22.1406 75.0986 22.1406 cv75.7705 22.1406 li75.9404 22.1406 76.0244 22.1885 76.0244 22.3086 cv76.0244 22.7305 li76.0244 22.8379 75.9639 22.9092 75.8076 22.9336 cvcp70.6377 22.9092 mo70.0596 22.9092 li69.9268 22.9092 69.8193 22.8008 69.8193 22.6689 cv69.8193 18.7129 li69.8193 17.498 69.4111 17.125 68.4961 17.125 cv67.9922 17.125 67.4268 17.3174 66.8721 17.5957 cv66.8721 22.6689 li66.8721 22.7891 66.7646 22.9092 66.6338 22.9092 cv66.043 22.9092 li65.9238 22.9092 65.8154 22.8008 65.8154 22.6689 cv65.8154 16.5361 li65.8154 16.4043 65.9111 16.2959 66.043 16.2959 cv66.6455 16.2959 li66.7764 16.2959 66.8721 16.4043 66.8721 16.5361 cv66.8721 16.7656 li67.5342 16.3926 68.0752 16.2119 68.7861 16.2119 cv70.2275 16.2119 70.877 17.1133 70.877 18.7129 cv70.877 22.6689 li70.877 22.8008 70.7695 22.9092 70.6377 22.9092 cvcp63.3018 19.0264 mo63.3018 17.666 62.7852 17.1387 61.7275 17.1387 cv60.6924 17.1387 60.1162 17.7275 60.1162 19.0264 cv60.1162 19.1338 li63.3018 19.1338 li63.3018 19.0264 licp64.1436 19.9395 mo60.1162 19.9395 li60.1162 20.1084 li60.1162 21.5391 60.6807 22.0684 61.7861 22.0684 cv62.4834 22.0684 63.374 22.0195 63.9287 21.9355 cv63.9512 21.9355 63.9639 21.9355 63.9873 21.9355 cv64.084 21.9355 64.1797 21.9844 64.1797 22.1045 cv64.1797 22.5137 li64.1797 22.6689 64.1318 22.7529 63.9385 22.7891 cv63.2529 22.9219 62.5928 22.9932 61.7861 22.9932 cv60.4033 22.9932 59.0576 22.3447 59.0576 20.1084 cv59.0576 19.0264 li59.0576 17.3066 60.0078 16.2119 61.7275 16.2119 cv63.4814 16.2119 64.3721 17.3174 64.3721 19.0264 cv64.3721 19.6758 li64.3721 19.8311 64.2881 19.9395 64.1436 19.9395 cvcp57.3984 22.9092 mo56.8213 22.9092 li56.6885 22.9092 56.5811 22.8008 56.5811 22.6689 cv56.5811 18.4121 li56.5811 17.4033 56.1113 17.125 55.4873 17.125 cv55.0537 17.125 54.5488 17.2705 54.0791 17.4502 cv54.1514 17.7148 54.1865 18.0283 54.1865 18.3887 cv54.1865 22.6689 li54.1865 22.7891 54.1025 22.9092 53.9717 22.9092 cv53.334 22.9092 li53.2139 22.9092 53.1289 22.8008 53.1289 22.6689 cv53.1289 18.3887 li53.1289 17.3418 52.8281 17.125 52.2041 17.125 cv51.7705 17.125 51.2412 17.3418 50.7363 17.5957 cv50.7363 22.6689 li50.7363 22.7891 50.6523 22.9092 50.5186 22.9092 cv49.8818 22.9092 li49.7617 22.9092 49.6787 22.8008 49.6787 22.6689 cv49.6787 16.5361 li49.6787 16.4043 49.7744 16.2959 49.9072 16.2959 cv50.5078 16.2959 li50.6396 16.2959 50.7363 16.4043 50.7363 16.5361 cv50.7363 16.7656 li51.2178 16.4648 51.8311 16.1992 52.4912 16.1992 cv53.0088 16.1992 53.3936 16.3438 53.6943 16.6914 cv54.3564 16.3809 55.0654 16.1992 55.6904 16.1992 cv56.7725 16.1992 57.6396 16.7402 57.6396 18.4121 cv57.6396 22.6689 li57.6396 22.8008 57.5303 22.9092 57.3984 22.9092 cvcp48.3428 22.9336 mo48.1035 22.9697 47.79 22.9932 47.5615 22.9932 cv46.4551 22.9932 45.9258 22.7051 45.9258 21.3828 cv45.9258 17.1865 li44.7598 17.0537 li44.6279 17.041 44.5313 16.9697 44.5313 16.8369 cv44.5313 16.5127 li44.5313 16.3809 44.6279 16.2959 44.7598 16.2959 cv45.9258 16.2959 li45.9258 15.1172 li45.9258 14.9971 46.0107 14.9004 46.1436 14.877 cv46.7686 14.7803 li46.7803 14.7803 46.792 14.7803 46.8037 14.7803 cv46.9004 14.7803 46.9834 14.8652 46.9834 14.9844 cv46.9834 16.2959 li48.2842 16.2959 li48.415 16.2959 48.5225 16.4043 48.5225 16.5361 cv48.5225 16.9453 li48.5225 17.0771 48.415 17.1865 48.2842 17.1865 cv46.9834 17.1865 li46.9834 21.3828 li46.9834 22.043 47.1533 22.1406 47.6338 22.1406 cv48.3076 22.1406 li48.4756 22.1406 48.5586 22.1885 48.5586 22.3086 cv48.5586 22.7305 li48.5586 22.8379 48.499 22.9092 48.3428 22.9336 cvcp43.6533 17.125 mo43.0996 17.125 42.5967 17.2705 41.9951 17.6309 cv41.9951 22.6689 li41.9951 22.7891 41.8857 22.9092 41.7539 22.9092 cv41.165 22.9092 li41.0439 22.9092 40.9365 22.8008 40.9365 22.6689 cv40.9365 16.5361 li40.9365 16.4043 41.0322 16.2959 41.165 16.2959 cv41.7295 16.2959 li41.8623 16.2959 41.959 16.4043 41.959 16.5361 cv41.959 16.7891 li42.5596 16.3672 43.1123 16.2119 43.6533 16.2119 cv43.8213 16.2119 43.9072 16.2832 43.9072 16.4287 cv43.9072 16.9219 li43.9072 17.0537 43.8213 17.125 43.6533 17.125 cvcp38.2432 19.7109 mo37.3525 19.7109 li35.8975 19.7109 35.5137 20.0352 35.5137 20.8896 cv35.5137 21.0332 li35.5137 21.9004 35.9229 22.1279 36.6182 22.1279 cv37.1729 22.1279 37.665 21.959 38.2432 21.6475 cv38.2432 19.7109 licp39.0605 22.9092 mo38.5068 22.9092 li38.375 22.9092 38.2676 22.8008 38.2676 22.6689 cv38.2676 22.4053 li37.6895 22.7422 37.0889 22.9932 36.415 22.9932 cv35.3936 22.9932 34.4551 22.5488 34.4551 21.0459 cv34.4551 20.9023 li34.4551 19.6035 35.2129 18.9531 37.3525 18.9531 cv38.2432 18.9531 li38.2432 18.4727 li38.2432 17.4629 37.8936 17.1133 36.9551 17.1133 cv36.1738 17.1133 35.5967 17.1621 35.1162 17.21 cv35.0928 17.21 35.0791 17.21 35.0557 17.21 cv34.9482 17.21 34.8389 17.1738 34.8389 17.0176 cv34.8389 16.5977 li34.8389 16.4648 34.9229 16.3926 35.0928 16.3672 cv35.585 16.2832 36.1377 16.2119 36.9551 16.2119 cv38.6279 16.2119 39.2998 17.0537 39.2998 18.4727 cv39.2998 22.6689 li39.2998 22.8008 39.1924 22.9092 39.0605 22.9092 cvcp32.2178 19.1816 mo32.2178 17.9199 31.8447 17.1016 30.6553 17.1016 cv30.1494 17.1016 29.585 17.1621 29.249 17.2227 cv29.249 21.9844 li29.6445 22.0566 30.2705 22.1045 30.6553 22.1045 cv31.833 22.1045 32.2178 21.334 32.2178 20.0479 cv32.2178 19.1816 licp30.6553 22.9932 mo30.2822 22.9932 29.7168 22.9463 29.249 22.8623 cv29.249 25.0371 li29.249 25.1592 29.1514 25.2666 29.0186 25.2666 cv28.4053 25.2666 li28.2861 25.2666 28.1895 25.1699 28.1895 25.0371 cv28.1895 16.7656 li28.1895 16.6094 28.2256 16.5361 28.4424 16.4883 cv29.0791 16.332 29.9209 16.2119 30.6553 16.2119 cv32.4463 16.2119 33.2764 17.3789 33.2764 19.1816 cv33.2764 20.0479 li33.2764 21.9355 32.4111 22.9932 30.6553 22.9932 cvcp25.6768 19.0264 mo25.6768 17.666 25.1592 17.1387 24.1006 17.1387 cv23.0674 17.1387 22.4893 17.7275 22.4893 19.0264 cv22.4893 19.1338 li25.6768 19.1338 li25.6768 19.0264 licp26.5186 19.9395 mo22.4893 19.9395 li22.4893 20.1084 li22.4893 21.5391 23.0547 22.0684 24.1621 22.0684 cv24.8584 22.0684 25.749 22.0195 26.3018 21.9355 cv26.3262 21.9355 26.3379 21.9355 26.3623 21.9355 cv26.458 21.9355 26.5537 21.9844 26.5537 22.1045 cv26.5537 22.5137 li26.5537 22.6689 26.5068 22.7529 26.3145 22.7891 cv25.6279 22.9219 24.9678 22.9932 24.1621 22.9932 cv22.7803 22.9932 21.4316 22.3447 21.4316 20.1084 cv21.4316 19.0264 li21.4316 17.3066 22.3818 16.2119 24.1006 16.2119 cv25.8564 16.2119 26.7471 17.3174 26.7471 19.0264 cv26.7471 19.6758 li26.7471 19.8311 26.6631 19.9395 26.5186 19.9395 cvcp19.0518 17.6309 mo19.0518 15.4541 17.9443 14.8281 16.502 14.8281 cv15.9365 14.8281 15.5635 14.8418 15.168 14.8652 cv15.168 22.0313 li15.5518 22.0566 15.9365 22.0566 16.502 22.0566 cv17.9443 22.0566 19.0518 21.418 19.0518 19.2539 cv19.0518 17.6309 licp16.502 22.9932 mo15.5869 22.9932 14.6621 22.9336 14.3125 22.873 cv14.1572 22.8496 14.0615 22.7529 14.0615 22.5742 cv14.0615 14.3125 li14.0615 14.1426 14.1572 14.0352 14.3125 14.0117 cv14.6621 13.9512 15.5869 13.8916 16.502 13.8916 cv18.7256 13.8916 20.1455 15.0332 20.1455 17.6309 cv20.1455 19.2539 li20.1455 21.8271 18.7256 22.9932 16.502 22.9932 cvcp0 0 0 0.56 cmykf19.3057 8.3418 mo18.667 8.97266 17.7041 9.25781 16.5361 9.25781 cv15.6523 9.25781 14.6123 9.18555 14.2568 9.125 cv14.0771 9.0957 13.9756 8.99805 13.9756 8.78809 cv13.9756 0.613281 li13.9756 0.408203 14.0771 0.305664 14.2568 0.275391 cv14.6123 0.21582 15.6523 0.142578 16.5361 0.142578 cv17.6934 0.142578 18.6484 0.419922 19.2861 1.03711 cv20.0459 1.76953 20.2451 2.77539 20.2451 4.13672 cv20.2451 5.26367 li20.2451 6.60938 20.0518 7.60449 19.3057 8.3418 cvcp18.8691 4.19434 mo18.8691 3.03418 18.7158 2.31641 18.2002 1.84082 cv17.7822 1.45313 17.1982 1.31641 16.5361 1.31641 cv16.0303 1.31641 15.6885 1.33398 15.3643 1.35156 cv15.3643 8.05469 li15.6816 8.07227 16.0303 8.08496 16.5361 8.08496 cv17.2246 8.08496 17.8291 7.93555 18.25 7.50977 cv18.7354 7.01953 18.8691 6.33203 18.8691 5.20703 cv18.8691 4.19434 licp31.5908 9.25781 mo29.6494 9.25781 28.3975 8.31934 28.3975 5.89063 cv28.3975 0.462891 li28.3975 0.335938 28.501 0.234375 28.6338 0.234375 cv29.5518 0.234375 li29.6787 0.234375 29.7871 0.330078 29.7871 0.462891 cv29.7871 5.89063 li29.7871 7.35156 30.1963 8.09766 31.5908 8.09766 cv32.9854 8.09766 33.3945 7.35742 33.3945 5.89063 cv33.3945 0.462891 li33.3945 0.335938 33.4971 0.234375 33.6279 0.234375 cv34.5498 0.234375 li34.6738 0.234375 34.7832 0.330078 34.7832 0.462891 cv34.7832 5.89063 li34.7832 8.31934 33.5332 9.25781 31.5908 9.25781 cvcp27.0322 1.40039 mo24.8076 1.40039 li24.8076 8.92676 li24.8076 9.05273 24.7109 9.16699 24.5801 9.16699 cv23.6533 9.16699 li23.5273 9.16699 23.4248 9.05859 23.4248 8.92676 cv23.4248 1.40039 li21.2002 1.40039 li21.0684 1.40039 20.96 1.32813 20.96 1.19531 cv20.96 0.456055 li20.96 0.330078 21.0684 0.234375 21.2002 0.234375 cv27.0322 0.234375 li27.165 0.234375 27.2666 0.324219 27.2666 0.456055 cv27.2666 1.19531 li27.2666 1.32227 27.165 1.40039 27.0322 1.40039 cvcp123.829 3.4375 mo122.579 3.07227 li122.434 3.0293 122.345 2.91992 122.345 2.78809 cv122.345 2.65625 122.345 2.71094 122.345 2.71094 cv122.345 2.57813 122.446 2.46973 122.579 2.46973 cv124.812 2.46973 li124.943 2.46973 125.05 2.57813 125.054 2.71094 cv125.063 2.99023 li125.795 2.54004 126.3 2.38574 127.05 2.38574 cv128.676 2.38574 129.138 3.50586 129.138 4.8418 cv129.138 8.91992 li129.138 9.05273 129.029 9.16699 128.896 9.16699 cv128.054 9.16699 li127.923 9.16699 127.813 9.05273 127.813 8.91992 cv127.813 4.9834 li127.813 3.85352 127.562 3.51563 126.642 3.51563 cv126.185 3.51563 125.681 3.69727 125.151 3.9668 cv125.151 8.91992 li125.151 9.04688 125.043 9.16699 124.911 9.16699 cv124.063 9.16699 li123.937 9.16699 123.829 9.05273 123.829 8.91992 cv123.829 3.4375 licp142.827 7.98633 mo142.937 7.97656 143.044 8.03711 143.044 8.15625 cv143.044 8.75781 li143.044 8.93359 143.001 9.01563 142.796 9.05273 cv142.062 9.1875 141.499 9.25781 140.554 9.25781 cv138.884 9.25781 137.735 8.32422 137.735 6.02148 cv137.735 5.60352 li137.735 3.80664 138.431 2.38574 140.513 2.38574 cv142.62 2.38574 143.267 3.85449 143.267 5.60352 cv143.267 5.98145 li143.267 6.15527 143.188 6.26367 143.031 6.26367 cv139.058 6.26367 li139.058 6.36523 li139.058 7.42969 139.483 8.10938 140.614 8.10938 cv141.401 8.10938 142.239 8.0332 142.779 7.99023 cv142.827 7.98633 licp141.931 5.2168 mo141.931 4.05664 141.414 3.51563 140.513 3.51563 cv139.624 3.51563 139.064 4.08203 139.064 5.2168 cv139.064 5.29492 li141.931 5.29492 li141.931 5.2168 licp146.411 2.46973 mo146.543 2.46973 146.649 2.57813 146.654 2.71094 cv146.665 3.00293 li147.339 2.50977 147.917 2.38574 148.428 2.38574 cv148.577 2.38574 148.675 2.47656 148.675 2.61523 cv148.675 3.29297 li148.675 3.42578 148.577 3.51563 148.428 3.51563 cv147.827 3.51563 147.322 3.67188 146.77 3.98535 cv146.77 8.91992 li146.77 9.04688 146.661 9.16699 146.528 9.16699 cv145.681 9.16699 li145.556 9.16699 145.446 9.05273 145.446 8.91992 cv145.446 3.4375 li144.239 3.07227 li144.095 3.0293 144.005 2.91992 144.005 2.78809 cv144.005 2.65625 144.005 2.71094 144.005 2.71094 cv144.005 2.57813 144.106 2.46973 144.239 2.46973 cv146.411 2.46973 licp73.6162 3.4375 mo72.3613 3.07227 li72.2148 3.0293 72.127 2.91992 72.127 2.78809 cv72.127 2.65625 72.127 2.71094 72.127 2.71094 cv72.127 2.57813 72.2275 2.46973 72.3613 2.46973 cv74.6982 2.46973 li74.8311 2.46973 74.9404 2.57813 74.9404 2.71094 cv74.9404 8.91992 li74.9404 9.05273 74.8311 9.16699 74.6982 9.16699 cv73.8564 9.16699 li73.7256 9.16699 73.6162 9.05273 73.6162 8.91992 cv73.6162 3.4375 licp74.7236 1.49023 mo73.833 1.49023 li73.7021 1.49023 73.5869 1.38086 73.5869 1.25 cv73.5869 0.240234 li73.5869 0.107422 73.7021 0 73.833 0 cv74.7236 0 li74.8555 0 74.9639 0.107422 74.9639 0.240234 cv74.9639 1.25 li74.9639 1.38086 74.8555 1.49023 74.7236 1.49023 cvcp90.0469 1.04004 mo88.8105 0.673828 li88.665 0.630859 88.5752 0.520508 88.5752 0.389648 cv88.5752 0.257813 88.5752 0.311523 88.5752 0.311523 cv88.5752 0.179688 88.6768 0.0722656 88.8105 0.0722656 cv91.1475 0.0722656 li91.2744 0.0722656 91.3701 0.173828 91.3701 0.305664 cv91.3701 8.91992 li91.3701 9.04688 91.2813 9.16699 91.1475 9.16699 cv90.2764 9.16699 li90.1514 9.16699 90.0469 9.05273 90.0469 8.91992 cv90.0469 1.04004 licp81.0205 8.03906 mo81.1348 8.03027 81.2432 8.09766 81.2432 8.2168 cv81.2432 8.82422 li81.2432 8.99805 81.1963 9.07129 80.9971 9.11328 cv80.6602 9.18555 80.1191 9.25781 79.4697 9.25781 cv77.8701 9.25781 76.8193 8.19922 76.8193 6.33594 cv76.8193 5.30762 li76.8193 3.44434 77.8643 2.38574 79.4697 2.38574 cv80.1123 2.38574 80.6602 2.45801 80.9971 2.53125 cv81.1963 2.57227 81.2432 2.63867 81.2432 2.81836 cv81.2432 3.42578 li81.2432 3.5459 81.1396 3.61133 81.0244 3.60547 cv80.9844 3.60352 li80.4756 3.5791 80.1553 3.52246 79.4697 3.52246 cv78.7061 3.52246 78.1416 4.00391 78.1416 5.30762 cv78.1416 6.33594 li78.1416 7.63477 78.7002 8.12109 79.4697 8.12109 cv80.1553 8.12109 80.4775 8.07813 80.9775 8.04297 cv81.0205 8.03906 licp88.6758 8.55566 mo88.8105 8.59961 88.917 8.72852 88.917 8.86719 cv88.917 8.99805 88.917 8.92676 88.917 8.92676 cv88.917 9.05859 88.8096 9.16699 88.6758 9.16699 cv86.6436 9.16699 li86.5107 9.16699 86.3994 9.05859 86.3955 8.92676 cv86.3857 8.6582 li85.8438 9.00195 85.1797 9.25781 84.5557 9.25781 cv83.5459 9.25781 82.5361 8.84277 82.5361 7.2793 cv82.5361 7.18359 li82.5361 5.84863 83.335 5.16895 85.4512 5.16895 cv86.2744 5.16895 li86.2744 4.66406 li86.2744 3.76855 85.9248 3.49805 85.1016 3.49805 cv84.3271 3.49805 83.6494 3.55664 83.208 3.58789 cv83.1494 3.59375 li83.0361 3.60156 82.9258 3.55859 82.9258 3.39648 cv82.9258 2.80078 li82.9258 2.66797 83.0039 2.58984 83.167 2.56055 cv83.6533 2.46973 84.2783 2.38574 85.1016 2.38574 cv86.791 2.38574 87.5967 3.18555 87.5967 4.66406 cv87.5967 8.20801 li88.6758 8.55566 licp86.2744 6.07715 mo85.4512 6.07715 li84.1768 6.07715 83.8643 6.41309 83.8643 7.17773 cv83.8643 7.27344 li83.8643 8 84.2002 8.19336 84.8506 8.19336 cv85.3428 8.19336 85.8115 8.03711 86.2744 7.7832 cv86.2744 6.07715 licp60.1885 7.98633 mo60.2959 7.97656 60.4033 8.03711 60.4033 8.15625 cv60.4033 8.75781 li60.4033 8.93359 60.3623 9.01563 60.1572 9.05273 cv59.4229 9.1875 58.8584 9.25781 57.915 9.25781 cv56.2451 9.25781 55.0947 8.32422 55.0947 6.02148 cv55.0947 5.60352 li55.0947 3.80664 55.79 2.38574 57.8721 2.38574 cv59.9795 2.38574 60.626 3.85449 60.626 5.60352 cv60.626 5.98145 li60.626 6.15527 60.5479 6.26367 60.3916 6.26367 cv56.417 6.26367 li56.417 6.36523 li56.417 7.42969 56.8457 8.10938 57.9756 8.10938 cv58.7627 8.10938 59.5996 8.0332 60.1416 7.99023 cv60.1885 7.98633 licp59.292 5.2168 mo59.292 4.05664 58.7744 3.51563 57.8721 3.51563 cv56.9834 3.51563 56.4248 4.08203 56.4248 5.2168 cv56.4248 5.29492 li59.292 5.29492 li59.292 5.2168 licp62.8066 3.4375 mo61.5283 3.07227 li61.3818 3.0293 61.293 2.91992 61.293 2.78809 cv61.293 2.65625 61.293 2.71094 61.293 2.71094 cv61.293 2.57813 61.3955 2.46973 61.5283 2.46973 cv63.79 2.46973 li63.9229 2.46973 64.0283 2.57813 64.0322 2.71094 cv64.0439 2.99023 li64.5908 2.63672 65.1514 2.37891 65.8389 2.37891 cv66.4395 2.37891 66.8545 2.55469 67.1416 2.89648 cv67.7793 2.57227 68.4033 2.37891 69.1318 2.37891 cv70.3389 2.37891 71.1045 3.06641 71.1045 4.60547 cv71.1045 8.91992 li71.1045 9.05273 70.9951 9.16699 70.8623 9.16699 cv70.0205 9.16699 li69.8896 9.16699 69.7822 9.05273 69.7822 8.91992 cv69.7822 4.74805 li69.7822 3.78027 69.4502 3.52246 68.8018 3.52246 cv68.4717 3.52246 67.9893 3.62988 67.5381 3.83496 cv67.5928 4.09961 67.6162 4.40625 67.6162 4.73633 cv67.6162 8.91992 li67.6162 9.04688 67.5205 9.16699 67.3877 9.16699 cv66.5166 9.16699 li66.3896 9.16699 66.2939 9.05273 66.2939 8.91992 cv66.2939 4.73633 li66.2939 3.75 66.0664 3.52246 65.417 3.52246 cv65.0742 3.52246 64.6289 3.69727 64.1299 3.95508 cv64.1299 8.91992 li64.1299 9.04688 64.0342 9.16699 63.9014 9.16699 cv63.0293 9.16699 li62.9043 9.16699 62.8066 9.05273 62.8066 8.91992 cv62.8066 3.4375 licp135.864 7.98633 mo135.972 7.97656 136.079 8.03711 136.079 8.15625 cv136.079 8.75781 li136.079 8.93359 136.036 9.01563 135.833 9.05273 cv135.099 9.1875 134.535 9.25781 133.591 9.25781 cv131.919 9.25781 130.771 8.32422 130.771 6.02148 cv130.771 5.60352 li130.771 3.80664 131.467 2.38574 133.55 2.38574 cv135.654 2.38574 136.303 3.85449 136.303 5.60352 cv136.303 5.98145 li136.303 6.15527 136.224 6.26367 136.068 6.26367 cv132.095 6.26367 li132.095 6.36523 li132.095 7.42969 132.521 8.10938 133.65 8.10938 cv134.438 8.10938 135.275 8.0332 135.815 7.99023 cv135.864 7.98633 licp134.968 5.2168 mo134.968 4.05664 134.45 3.51563 133.55 3.51563 cv132.658 3.51563 132.099 4.08203 132.099 5.2168 cv132.099 5.29492 li134.968 5.29492 li134.968 5.2168 licp154.743 3.4375 mo153.494 3.07227 li153.349 3.0293 153.259 2.91992 153.259 2.78809 cv153.259 2.65625 153.259 2.71094 153.259 2.71094 cv153.259 2.57813 153.36 2.46973 153.494 2.46973 cv155.726 2.46973 li155.859 2.46973 155.964 2.57813 155.969 2.71094 cv155.979 2.99023 li156.711 2.54004 157.214 2.38574 157.965 2.38574 cv159.591 2.38574 160.052 3.50586 160.052 4.8418 cv160.052 8.91992 li160.052 9.05273 159.944 9.16699 159.812 9.16699 cv158.97 9.16699 li158.837 9.16699 158.729 9.05273 158.729 8.91992 cv158.729 4.9834 li158.729 3.85352 158.478 3.51563 157.556 3.51563 cv157.099 3.51563 156.595 3.69727 156.066 3.9668 cv156.066 8.91992 li156.066 9.04688 155.958 9.16699 155.825 9.16699 cv154.978 9.16699 li154.852 9.16699 154.743 9.05273 154.743 8.91992 cv154.743 3.4375 licp150.823 3.4375 mo149.567 3.07227 li149.421 3.0293 149.333 2.91992 149.333 2.78809 cv149.333 2.65625 149.333 2.71094 149.333 2.71094 cv149.333 2.57813 149.435 2.46973 149.567 2.46973 cv151.904 2.46973 li152.036 2.46973 152.145 2.57813 152.145 2.71094 cv152.145 8.91992 li152.145 9.05273 152.036 9.16699 151.904 9.16699 cv151.063 9.16699 li150.931 9.16699 150.823 9.05273 150.823 8.91992 cv150.823 3.4375 licp151.935 1.49023 mo151.046 1.49023 li150.912 1.49023 150.798 1.38086 150.798 1.25 cv150.798 0.240234 li150.798 0.107422 150.912 0 151.046 0 cv151.935 0 li152.067 0 152.176 0.107422 152.176 0.240234 cv152.176 1.25 li152.176 1.38086 152.067 1.49023 151.935 1.49023 cvcp104.659 3.4375 mo103.409 3.07227 li103.264 3.0293 103.174 2.91992 103.174 2.78809 cv103.174 2.65625 103.174 2.71094 103.174 2.71094 cv103.174 2.57813 103.276 2.46973 103.409 2.46973 cv105.642 2.46973 li105.774 2.46973 105.88 2.57813 105.884 2.71094 cv105.896 2.99023 li106.626 2.54004 107.13 2.38574 107.88 2.38574 cv109.505 2.38574 109.968 3.50586 109.968 4.8418 cv109.968 8.91992 li109.968 9.05273 109.859 9.16699 109.726 9.16699 cv108.886 9.16699 li108.753 9.16699 108.644 9.05273 108.644 8.91992 cv108.644 4.9834 li108.644 3.85352 108.392 3.51563 107.472 3.51563 cv107.015 3.51563 106.511 3.69727 105.981 3.9668 cv105.981 8.91992 li105.981 9.04688 105.873 9.16699 105.741 9.16699 cv104.894 9.16699 li104.767 9.16699 104.659 9.05273 104.659 8.91992 cv104.659 3.4375 licp48.1396 1.04004 mo46.8896 0.673828 li46.7451 0.630859 46.6553 0.520508 46.6553 0.389648 cv46.6553 0.257813 46.6553 0.311523 46.6553 0.311523 cv46.6553 0.179688 46.7588 0.0722656 46.8896 0.0722656 cv49.2275 0.0722656 li49.3604 0.0722656 49.4619 0.179688 49.4619 0.311523 cv49.4619 2.79395 li49.9795 2.53125 50.6055 2.38574 51.2891 2.38574 cv52.7568 2.38574 53.4482 3.3418 53.4482 4.96484 cv53.4482 8.91992 li53.4482 9.05273 53.3408 9.16699 53.207 9.16699 cv52.3662 9.16699 li52.2334 9.16699 52.126 9.05273 52.126 8.91992 cv52.126 4.96484 li52.126 3.83984 51.7822 3.52246 50.9893 3.52246 cv50.5986 3.52246 49.9795 3.64258 49.4619 3.89453 cv49.4619 8.91992 li49.4619 9.04688 49.3545 9.16699 49.2236 9.16699 cv48.374 9.16699 li48.2471 9.16699 48.1396 9.05273 48.1396 8.91992 cv48.1396 1.04004 licp119.907 3.4375 mo118.651 3.07227 li118.506 3.0293 118.416 2.91992 118.416 2.78809 cv118.416 2.65625 118.416 2.71094 118.416 2.71094 cv118.416 2.57813 118.521 2.46973 118.651 2.46973 cv120.989 2.46973 li121.122 2.46973 121.229 2.57813 121.229 2.71094 cv121.229 8.91992 li121.229 9.05273 121.122 9.16699 120.989 9.16699 cv120.147 9.16699 li120.015 9.16699 119.907 9.05273 119.907 8.91992 cv119.907 3.4375 licp121.021 1.49023 mo120.129 1.49023 li119.997 1.49023 119.884 1.38086 119.884 1.25 cv119.884 0.240234 li119.884 0.107422 119.997 0 120.129 0 cv121.021 0 li121.151 0 121.26 0.107422 121.26 0.240234 cv121.26 1.25 li121.26 1.38086 121.151 1.49023 121.021 1.49023 cvcp102.041 9.14258 mo101.619 9.19922 100.796 9.25781 99.7256 9.25781 cv98.7891 9.25781 98.0537 9.12891 97.5752 8.63281 cv97.208 8.25195 97.0557 7.70898 97.0557 6.90625 cv97.0557 2.49414 li97.0557 1.68164 97.2129 1.13477 97.5908 0.75293 cv98.0693 0.267578 98.7969 0.142578 99.7256 0.142578 cv100.796 0.142578 101.597 0.205078 102.041 0.263672 cv102.166 0.28125 102.222 0.353516 102.222 0.473633 cv102.222 1.16016 li102.222 1.26758 102.143 1.35156 102.035 1.35156 cv99.6475 1.35156 li98.6611 1.35156 98.4336 1.64063 98.4336 2.49414 cv98.4336 3.97852 li101.907 3.97852 li102.041 3.97852 102.149 4.08691 102.149 4.21875 cv102.149 4.88086 li102.149 5.01367 102.041 5.12109 101.907 5.12109 cv98.4336 5.12109 li98.4336 6.90625 li98.4336 7.75977 98.6611 8.04883 99.6475 8.04883 cv102.035 8.04883 li102.143 8.04883 102.222 8.13281 102.222 8.24023 cv102.222 8.93359 li102.222 9.05273 102.166 9.125 102.041 9.14258 cvcp45.6836 7.95313 mo45.8369 7.93945 45.917 8.02539 45.917 8.17578 cv45.917 8.82422 li45.917 8.98145 45.8076 9.0498 45.6641 9.08203 cv45.3223 9.16016 44.6895 9.25781 43.7158 9.25781 cv42.9248 9.25781 41.998 9.06543 41.3398 8.39453 cv40.6631 7.70508 40.4277 6.75 40.4277 5.27637 cv40.4277 4.125 li40.4277 2.59961 40.6729 1.63672 41.3818 0.951172 cv42.0342 0.316406 42.9404 0.142578 43.7158 0.142578 cv44.5576 0.142578 45.3223 0.262695 45.6758 0.335938 cv45.8076 0.363281 45.9043 0.414063 45.9043 0.551758 cv45.9043 1.26172 li45.9043 1.37109 45.8623 1.45508 45.7119 1.45508 cv45.7051 1.45508 45.6943 1.45508 45.6816 1.45508 cv45.2539 1.43555 44.4014 1.35156 43.7344 1.35156 cv43.2266 1.35156 42.7783 1.4834 42.4404 1.81152 cv41.916 2.32617 41.8164 3.07031 41.8164 4.20996 cv41.8164 5.19141 li41.8164 6.30566 41.9102 7.03516 42.4248 7.56152 cv42.7627 7.90625 43.2178 8.04883 43.7344 8.04883 cv44.3945 8.04883 45.2197 7.99121 45.6475 7.95508 cv45.6836 7.95313 licp166.103 9.62402 mo166.103 9.25781 165.832 9.08203 164.659 8.79492 cv163.444 8.49414 li163.18 8.76953 162.999 8.99805 162.999 9.52734 cv162.999 9.63672 li162.999 10.2197 163.349 10.5801 164.581 10.5801 cv165.843 10.5801 166.103 10.2617 166.103 9.71484 cv166.103 9.62402 licp167.292 4.64063 mo167.292 4.73047 li167.292 6.14355 166.365 6.85352 164.532 6.85352 cv163.896 6.85352 163.475 6.75 163.18 6.62988 cv163.006 6.72656 162.928 6.84668 162.928 6.99023 cv162.928 7.21289 163.042 7.31641 163.319 7.38086 cv164.924 7.77832 li166.329 8.12109 167.425 8.41602 167.425 9.62402 cv167.425 9.71484 li167.425 10.9043 166.589 11.5898 164.581 11.5898 cv162.657 11.5898 161.707 10.8564 161.707 9.63672 cv161.707 9.52734 li161.707 8.94531 162.003 8.42773 162.392 8.10352 cv161.991 7.89258 161.804 7.46582 161.804 7.06348 cv161.804 7.05078 li161.804 6.70117 161.96 6.3418 162.291 6.13086 cv161.925 5.77148 161.768 5.33789 161.768 4.73047 cv161.768 4.64063 li161.768 3.50391 162.458 2.46973 164.532 2.46973 cv167.728 2.46973 li167.859 2.46973 167.963 2.57813 167.963 2.71094 cv167.963 2.71094 167.963 2.74219 167.963 2.87305 cv167.963 3.00391 167.873 3.11523 167.728 3.15723 cv166.827 3.4248 li167.138 3.72949 167.292 4.13184 167.292 4.64063 cvcp165.987 4.65234 mo165.987 4.00391 165.698 3.49805 164.532 3.49805 cv163.349 3.49805 163.072 4.0332 163.072 4.65234 cv163.072 4.74805 li163.072 5.23535 163.283 5.83594 164.532 5.83594 cv165.682 5.83594 165.987 5.41016 165.987 4.74805 cv165.987 4.65234 licp116.003 9.62402 mo116.003 9.25781 115.731 9.08203 114.56 8.79492 cv113.345 8.49414 li113.081 8.76953 112.901 8.99805 112.901 9.52734 cv112.901 9.63672 li112.901 10.2197 113.249 10.5801 114.481 10.5801 cv115.744 10.5801 116.003 10.2617 116.003 9.71484 cv116.003 9.62402 licp117.192 4.64063 mo117.192 4.73047 li117.192 6.14355 116.267 6.85352 114.434 6.85352 cv113.797 6.85352 113.376 6.75 113.081 6.62988 cv112.905 6.72656 112.829 6.84668 112.829 6.99023 cv112.829 7.21289 112.941 7.31641 113.22 7.38086 cv114.823 7.77832 li116.231 8.12109 117.325 8.41602 117.325 9.62402 cv117.325 9.71484 li117.325 10.9043 116.489 11.5898 114.481 11.5898 cv112.558 11.5898 111.608 10.8564 111.608 9.63672 cv111.608 9.52734 li111.608 8.94531 111.902 8.42773 112.294 8.10352 cv111.892 7.89258 111.703 7.46582 111.703 7.06348 cv111.703 7.05078 li111.703 6.70117 111.86 6.3418 112.19 6.13086 cv111.824 5.77148 111.667 5.33789 111.667 4.73047 cv111.667 4.64063 li111.667 3.50391 112.358 2.46973 114.434 2.46973 cv117.627 2.46973 li117.761 2.46973 117.862 2.57813 117.862 2.71094 cv117.862 2.71094 117.862 2.74219 117.862 2.87305 cv117.862 3.00391 117.774 3.11523 117.627 3.15723 cv116.729 3.4248 li117.037 3.72949 117.192 4.13184 117.192 4.64063 cvcp115.888 4.65234 mo115.888 4.00391 115.601 3.49805 114.434 3.49805 cv113.249 3.49805 112.974 4.0332 112.974 4.65234 cv112.974 4.74805 li112.974 5.23535 113.183 5.83594 114.434 5.83594 cv115.581 5.83594 115.888 5.41016 115.888 4.74805 cv115.888 4.65234 licp0 0 0 1 cmykf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (PeopleGroup) (PeopleGroup)%%Title: (DTU Kemiteknik UK.eps)%%CreationDate: 27/02/08 18:42%AI9_DataStream%Gb",KCNC^ZP2J!ls1g:JR#/?8'FI)+YV.UqUr5:NacCCfG%Y;pUI/(gh-0-lVj>?_q=U)2bQLb]U0(C(,uUTi>"p:D'HW*Y,Or_h%Z^^jX[hmX\cYiaXj[?Y9Y+(8KHD6m*IIY;V^A).4YubINg(;G%^!Rl.2cFQ[$T7i]=l2KPj.#Z;X6'$1pU<*EbE!b.2jZJ4+2==n%F7qBicR/[s]Y(oQFY^Qk49)/Riok1TAoVh$>hn+@S_[$<ZppEthTYC@0&M,)J+_:]p<-$+>6O7NZ*D&lKVlJR`6SScqYL-\rpB9'%BQO"ClRVc,,C\V.`6YWRGBY_Bk_"KTc+j(8s#\!qG^"3D)ZV!FJ,7J5Q9S`(]Xp>=]=>ENY<Pt75;'-'>b9b'j7l>S_q8c#T1_HD%Bm.AC:)Z"[0KXGe4b'*eA,21Djf^WWk82`o2]pr+E5'(HVg185]mG1t0,U*4pk&:1^A6aeEd@Pkl\dhC_pR(eWd]$\G'ODCPNjeR%cZ#CsHrU)>"b&SGrHWYnMgBGiO(8)#]#nBr9V7pT[_0j<q!Q&jqT#(TM`lM(4H-5@(&V*2Y:$R(@1lc=bK#t%HK$Kj:;p9aC):*j%2Pb<t/+>^'a`k315@7ZFl*XGgB:<H'8iP>=o';r^l2H!Un[;O[2m$j3-GKD20:XqOhDiL28EXD&md?Cm4;^>]q)>jd\t4BBRU5RF%HbclOZO<-geNf&;`'XcBJ-X]HB6Ruq:,F*ejF8i_3LThhLIbF_O4O*<D=MfUpj51@W7LaYf(cAupoW->m:(XSWE.b_WOBd\g(m>h%/XC/+`Br8e!R$.HAHMd;m1?L$#ZqEuiGU8)T4=kr*,Ej_ps"2HAJP[OG-P^bXM%`opPT4*TcR-^WB^#EqA*khpKCX*i,:0#A&@,*%$HFD:V=/@kp`%E7M"!?`>@rKPigB3ore2T6hq/Rd'=EcD_V[=jr#_Ul-@@2c-G:KoiOJA9Q<>aM-L6:IV`CVWUfkRl<0KdH]r/SC%hrsI[F'0_:5sJHYa+qF7-!ESQ217tFLAta4*1s;dbmN"?n_nEa$V*_QO2%[W#f5D#$HIq:Bb^qIBO9s%pdW(#m()&8X;U\lAfXOl%]ZIh5aJnpdF6XRTQWf^JU([$LAT2aCR5d7/9r"S(EI@O#9+cX5ph3F$0)ijG34eA__/.dd1ir9n_J[1u_%jdEloAJ]iI^D(=]:c5%l5e,1]pIjjHS-fmA#$bJ.=""_:A*juqOsM0c6R5'25e!Y()HFqn2KfZW`+<h]/B%.RAZ#@K\_7S)?6pa`Za%"H'Ms,o/^9?A1"R)%SdjqboN0mBm8?ZTlM-#3'3/$0dkp\krh"Y$S)I0BT73dnX<gF:T73<*^[qKtj$!A.]tE+kcd<>QPQ.PQfo5pUs3jd:`UPZKo)J?'%E^G9=s66FV5=Eh;mI3':/,_&LdJko7`lsDO3ZK`3CU7-qVK)%VL;qod*A82rprG*(8)?.)"2'1_(B:8cp^'S"jN':MIk1nff](;1%9-)VS<%bV)$p?H;mpcg2f&n)*(>&un:]I@'^'FP_3-^A!T&X%ZTCdusM1=K&liiE&C1(m")3cXe@p?LXPbS2OB5Y!Da5Mhd$ebs?%+(3E$H:RQoF+pBb*m!R8ml5*&:@N+&)ulWN=:X5Cn"dCj4S=rmalTHZP`E),IESrdo,rI=]r1OB\754;C]iP=]oqn`4WC=qdN@]U%onaeJCY0iIBME#jEBJN\"A=XP$!RbXXS92tSjsc9"f(iSm.l6Z>`QHO]lLA!ISr4T15Mq"gVBX*rNB2cXc_0"^RHtNW:QU6oe_!2%rVia,Qh2Ei[LVB.Q8^DN#t*,\nZ:\%MS74aSl^^H&akn`gbE82r_(h%rfYS_*i`S5`Lb*kKa9gjCW`Pm+7_X7Y]fKk-\=:f+&XHc%mnW*&<2Vf!q7g1Bg^ZFSqB'IEn;>3<Nmsug'nk77/&qVa%4>*nCM,W/3k[iYkE]>(#c:EK2!7;sWI8NZdjJ)&M/T5^9*p9;/)FQC%=Te(\ggg;l`n<AGs'r[$a*AqIjF*P"Cu)[CS(('.2oH0rLbbR'WrnHoli?DUcdPX0K_$[$CYk<Q"C#[)Gn3EV#4MTOjSCHC7eCDD%F+p(M8(!_ijhJJ(RD)=dj#<WZh1$Q40`M%5gD_OMC+uSse[P&fs5s4%Hhcm0[l=%'^:o&?;uPtEmEJGManKFlmjGHbjn7AhJ"A?Q%rgZdoJ=^*F@nEohfu8_25M4hR\#=iW4SeECs'D;S6"L8]:Ts4?mZs=]H@:fWk3Z]&HiNX7jN!aZbLF;p=/hYtN_h:A)t3Pc<k/.s%RV$m=9jF@kVPDnXSU1a/?N16)EgL"&T3Yc0r-WkbiVgakcjL&l:N)ur[WpKbo'COflc26Ort/r?gXT(YQPUaI1,]o0n'>n?0$Z,:%YCHFo\%LGMg@=aic0\LcD%V)7rK$(%c%i$W$$(4fG4P*7[iZZ+)OK^E`V!Hf+`Ta0BtV"QJ6'q:lh>$6QEe&Gmh`7ilOdfXH$4UZ%4,NIV,a'7b?_D%;P!lP(W-nc$Yp=b$?9LOe)`=$h(Z58cp?_/MOP;E9ItE`r_+UtuYpT\RF#=Ate.Xd/]rh:?qO^c9<6shi4NI+d%]hkZ72+fBoXD6^6b,_1qe4e-;YrYa?VJ\YmCNO&OAo&CkO)I@+eBFA,F539bbsL#cklt*fUTJFAdp<9-Uh>"VO7e?9R+`t;(_*L:%26Cl<Rp_9#%!84RF(,on[L+l6CI$us/*eab!;=LZm+`Z:'>%pnkZZI#f!H4b?.\p2Zq'MbSQGh!LZE1\:Oo.(K;7DI!,77TLId&^%@E*kqTf*XHQH&69]J<q5Eu_Io>)"U2Q_F$/EVNNR^W_5PJ]r_i"4%)ZWJ*WT*Ytk_\T[)Mk':>LQAs(tIV<d@)R&>Ni+-,%GSQ04%(:P>%Sh+neAfB*1rctG.opDZ2Wpp%geDuNHZWe7a9Qu#DGH_2c(8F`?&m<":Ja<OJG8,gn5R,[RnLJiN>\06/5nU,DgaRj=cpFEe%^DH$9_bqrl@Okj41#UFf-9T)n\$-8F(8QMXW<!<$@'SjuDF^p_*nIWN<Ah"l%BOU[COQ>#5Hb%rNW:4fq#p>oYbW167Q!']cjAXY%*3b;)_eht\\NOgb[0`tT7\s7%=ISBlX47---W?lU-WET0Vi?hYd=8XYq!L$LMMHoSQ8d.cc*EFJn'/hYYJIT#T1Bmc\1MG7T/Jm=%T5dBESrUFoMJF4kG1tZ<B'%93Um[&1+Php%)g6GUU!nir1Yq>6ln6Q*jLR^_X7[0RBPXZ"=cmulR?>$/B.(r"eX7U*IIhKF3qG`q%-$*)3<gp3Ad6jG04DC@#/,3>@/?TQ(MC6bo-tAdc:S!Vkh2E?HAjkdVM`5oNf$?jVO\_C+P7A+^XM7rZ.J.Uuq]*T*7>f[5E"-\e%Ul<15>o^P;1I>HF0Bil?Wr0/95E8`%E8&/4?(I<]=_J3Y<#sC]j>UW7gi'Ylk@IV(J,ZdSVl!<4IA9`C>#VoXA(_KjY&s`#RWpat%C20<ZC9OZkhJ?D5p(?-q_&<\<%X)dgT[?Dn?<O>+g+#6?@1&YS^M'ZOnNASnQ>3e^2>Mb[lA=(jAQk@+0t'Db>rQ(I3)&[mUCVm-%8d]&:K!I#<5.1O$Sil&8RH!(ZZY<?BX'^pUfljB#n?Jt4Nh':O`%UVr;\9RiF_lsZS[,fnETNn]fl9nP6mEOL.=,aH7"IP,$A1ee%;'m':`Q@+a0ji-?7uOV@$b'dcG%!Z$D1JM5-]=1PPN.l&amA*P,b4WCGLE'b&9Tj,&-X"cEI;eSHosWb*?Q;W@p^7gj7_+H)\=V@%+AVTW0gD'JcfaoQr+I/6IdZ@cgs-@bf*r:qHFB33b`6?-fkbgg$St"gZZ]qHVUi'X\7Akc/WNSdNfW<mZ_O:jE9*)8;0uh>0%E55%'PuGk3!mW6*bO@ZK]%IjD6UhV:MbP`epcRRr3;mkR6Q<!op'a8obO@tLgdOF(MNSbF#S/1/i`<iCRkV0=9Iee5ReLr8UK7<6!H>N%Xi5qddXi6EJ5S9j:$TkR5fG_f<G)Lc:B8qcfbX4Qos1-8=LtQaM0EI*]8e#W,d&&[EBVHM-Yc/F+94"&'LMj<(&aE39n.)6W8HLi%I^iWXIK71:AZ>X2q#Y_m:ASnR>Z`f.(!/#m=]rpG8NSgnePS^g&7,/GR#R8@?i2r[i`F]rLBOjAC./=_.k9Sl&B(mF*7\]OSj`dE%@9O^!%<AmHq02e2Fd<!,(mIRUT;;<bX1J<hW]t="PBDcE-M=Kdkc$V[ft,4?G\hi/nrKB,\*e7lVl0<8IR8FBi\QLVL=:;cV[b%,%:*34R:*E@V:*WN0NA2tDR5gb2Jf1CF`E@n?KkD"TMo&GG8eqsp=<&H#/\9iu#sdp=JER#&Ndcct+G:,a<H3dN'hX",Xqk@EV=>p$%T>V./ko9uo#nYYkaFPb%2LtgX(,-Hh%.LA9=)nEh)+Zq&BAab0=MX>mdBs"tNHPI5?,eLAT^#$4h.K"5O+GlS*%aE@<^?X'?igOF%"^$?Yec>)'Yo,5'?oJhiN<P,_-jDWG9ajc;N8Hqqn?kd%ETY&^J9T6S&^B=:`0i(:#%sijZW#/1Mt>DgTbEri.*X9,VnK6P3u9[e%iXF)k%,q,So]F36q8(bS^"HOVbs58k2jWW]B'(MdbTb:?btFPg--]&NPW0shS.V0Q4<k6\4A^06J6EgU[[);p^qsa"b)_+M07\R&%@.?J`JD".o2$X3j'eIZ>B(Qq9Jd!VUW)J8S?u\dN+0^YG9gJZr,3o@,nLIE!4\)&U<]kHO[HE6%.F1TU/Fq8`)>U0Z*aQ&A8Naj8%V+[C<4YAl]4WusYnl1bNcBnsbPF?ZbPdM0%g#u"L.sEND!,\mkkU2GQVbN64#I&6=V/Er:X<=GP4e%7EO5*bHe(__%6#t`#ZV=Q2%*rl#7#*<gF@a;82nNRE[`7@j'[%#RG\k2mYoHdOa%-iV^:cGVWS*GOogiaTPTpfdp-b^fT=K!d%*Z%hY)J]OT&7G`:8)tUlHlJKW%-dtNGA/,;%3%--Zj^a?knrWFI8T>W/W6;XPI^pUM[,24r5&?W?AnU2[<9oKA1,k?D08=pN7Qe`/:XoQkqbQsg&%1)m39r[s`<1I_%_I*69cK",FDrhiN%'t@(`'tP22@d_uXWm:1rgRGee<-L<js>jIfi5R)e@oL#F=GV7=J*Hri;'"q#i,rdKiP$fHst^%[3F',G:G05%j`B4*Wh('8,"rH%<3)`n+_"Fl3@e>0]8mhSm(`_AX=@bc<LM&?b%H0"<o^+C$?!Oi[cX!]H%;SfKqNWP..jW*Mhdm=PMF]\ik_Pf%WL?OGqOr[,GjH+t$j0ea^hhB-@6=16_Eq'67Y9&^O:;B@<03?QXNkEX%FqhRW+f8_@p+Yr*@5m"MP^VY=A[HrdU>R?MeZFpW0+(q%=B-m%fM[h`<47[l[\F\VSi!oCTd>uT,R#g$[A:g9+r=7iW6EdleE0T"6]I+J](VM#5Z+jTh2\kS3Q9"5NYf+93hg&HF?S.I5i8W:%b(iT]a-#D,5g2RND]\SdittD'Lg"2^$W._!5.7C%R]$sq?5V40+Q60`N(/Hp&Fh,k+A>+(7qO47L\s)Hki.6WX9T/;<R7Bs(sXmi%Z@u/VA(I[4XsN;3$JRm/J?"#[c)(V%ZrCRMM0+3sNf^@oa2s@'9e=tV:mb@bNf?JM:t$_+!ne7L.p/e(cltp_^r`U/Osb'OaS#eC%0\?jn&h_I%>g/R;78us:\:TKfK`qrA(((QF0X)`(AGfYeI;<ik+cUe@4h>R+I&nq`TN;Y<e/PKX%mSS][<nG2P:`F<Wp#r%oRWpo%XMo,J^t,J+d.\XRbc1\0Cl>29mX;YMVXmbkgVYs46T4N&Se[I7B1'A;#e201<o]'s7m^+VZG!#On`\^iqGrZ[h1I:$'q.=\jeH>_%kZL-]p5dW'd^=W/'OJ]dOpiM]%T6Is8m=i#%E\=*_BMkm7Zl+MOprW:GTp9[Z>Cjk8$[Pr/L4>),S;h(2O'#s7#WF$/r9cGj;;\f%&Xu@r*^a,ME'gE80qOL&KFB8>66RQ\R8M%eU8-OF`LrPd1oQMnlVm1RI</FH@*dQTU=D,7<DdoVB@D1BWYLjQR^K.QG-,nQXWcG"%@GO9+i?W`mqY%&*Kr]"L.]lsPSa-EL[pnXFespR&;&eL=bNM@"8h>:n;kHTl=/kW?U6"FETD7bcK,aLOc2QnPq!:J&Uk89W$6E6d%ejU?"<NI[%$W^%=oTc\!KL&Z[@th!6I,ea%Qjq[Y`7^V#]sI&0mjMa4Zc6,Y_u]:.2*:*'AuqN=**!(NnBqJH\p?q6/)B-[,J8,P%7kLi<[Y*!OcC,Z`J30c7;V!nKK.>Ob]%2N(p4Jsr<]shXk\G.6*MM!C$<oi2:%68FS5%/&WOZrZ*asJ&4Z)b\V4lTSL]%d108=9P%<Bl)4(IM]A7.-g"@J<@1mUji,E&8'4X$1DKZWK"k(-C5X(5%0=$+!^X%jq[gZN6e5Jljmg<<ZtBDOY0m(c%%e5jaGK]5*YPAr2K%%ff66oh?AL4.l].`Sh[popZ)PC`$O$Co*WB66-+r2Z;Zc:7PAL47:bV.FiRO=*oj,31$"ZV1W9W3:!pI::E'l-EjH]X;TuC`SWZZB%fpuADg1I>cjbmO,9dMfo(Ud(tWl@;>FFh>iXol5MFdV03S7j_O>'3/X\#;aaH!o&o41.\g0PT"eR:b5JpFFWq`6k`PV@&t/3t?hm%%b$S,QZ64"4%<<)`r5_Blg(mXjkIo'V5&J>G]8*QS=^&LkJ?t>E./juT*OQB_>/@qING#O#Nt9dq0?q.*h8i-kNB\WH#S3RS=^&L%k<:g!oWH0hDt)]_4?,P9cHh.7oAKO/3'Rr!cTdN_;s?UB-\0C8b#(!%7.L$tM9,9:-Bk*]U2idW4I<>k>0`unU2r]]F!^&[j$V\:%A'T-D?G<2!muY213Gk3q6o366e<!$i;$'D9UF)#:j-1s/`jmQF],UPL>qP<ra?M)Y1eU]N4jNKHdG<AfDsR&)J^`9%!ufrU*H"<(%@hgUGERfRT\)q)l)ElAhcXp74*_5JY5+b#3ZV`mbE;K(Wo]kt%dtc8H=68C_8]d=HYXCrH89mfl?2c;>`e:<kJZpL*g1KE2V_fN.%94VaJlBn`[`N(hiPubG(*O8WQ@Rha7Cs@=#i)6'G0Jq>m+g__iVk!ESFj@=S/l1ZdVoH-/Pn2rVPWGss#6(;oT1BpG0PrWeg:6,p%aKnr_SO7#c+k(%3GoVhG)"RP7V2@i^rG%<NJ&ln"jJZGUaB(M`r'6R86(e#-1bhu`;p<s#1&S+"M^d,oJ3[J,3FhgjkrDA^/3WUs%*#HqX4;IHP9!VX(-8=1$IG((5jjiNf?A9@h[Dpl[13m$Cb8GG_.QKL^(MD;W9)%IfdPI?QI!8"oW2Ns#alRD$8YK$SW*VfhDE=^k%1+:S+X2.b3@hM'BBqWU":fTF`e@L@k[.Fk]IankfX^>61bm9D-TN[PkIPVV<6%`pS[sJi%2PEH*L2$u5HLVg;d:!"uWZFVD3:XNF%?r\!r<^"FVAaWc4S_V5I42NFID00j$Fc[)'RLOU(<s-_PK$FR@QbcV&$U.c6J2SC#Q5J8a:pf1h[)%:"Wlt%c-,1ADHR1,E7*]4t%A/]2X1KB5k:/(hLD,iP6;s=rA)`oV(fPW1e0u8X7nKL+r0.IRC<6@LOgrVdJ3D,X"oXRS\Y5g/R3lH\lnrFns>B-k74.;`WW-\ch%lK')C>;1)lr"Bir<0JuPLs2Q^juap*AY);S77q_UG'SpC'uo31\5]Cd&c=39!cf::@hST=S!s(@_ma5kcLOTTJAc/*^.#qJp3fR3%9$-lM`Qs<"HDKFu6,6,+T)![ZigG`]+]&#!LE1C,RqG3?P`0oKk,f_@,Z_P-0V`<9Y/CrIiu`%a*TI-eP69`O4)$X$E0e?G:Bh6(%0ON?7>A:O3-@71G9PYEtS)b3<:W:m`dhe%UEcE6DFTeL<3Yi;V$VBl#R!^P\2V3kcZmOW/5dl0Vp*ST(PO=1I\&4Sdh_+"H%dBQ%%$6u(]R"/Zf1S@7W[f2k5S<BpcrRC,"#(AukhHZ;hLhm*^[V-<'nO#.1Z?anbG;1NjN4-)oDGuIP_jmhmR5]Q0rkqM10l8+<J,;h6%\#K"6bY&JIja'?Is6SImB\b6."N@ZR:3-<c>E_C]k%9n/H]q^&.((^rG0LV)dBY8aG,<)%%<gjHNk(htfQn$ed@sRJh+MM.c:n]f%T>ubnT8%,ipiK?rSe'gg?&g>"SC#B%ekHM-%Yg47acCREYfHG4O&m'd@BC>:IC2B2*E7G/8q:/d#38t+Sjt.a?"5Ul3[Wm0#u+L&%`[c5mA3$f=0l>Tk/-]XAL6?e[BLQMp10Kd^QAjDU:lbKqh(0qbH1cCic*3".4l/L]CnRaKDkS%,cr?(8cjZ[`eOe8]QDtu)Z(36K%\FIq'jo@^T,/f9'kYWn4@R.jda/R<ni6%0M(<2.f(Yb246AeuO(LH;sQlZTA4!)*YmB^WF5B]6LJHWVKiMHj>>RGb8[8RW[oYg&E%m)-\c47jiV/Rn(bBb:'H.pF["_uo7`rM8(OE%Hk6%L9idcl`mNVD&[;6"0!#cZR:M$<(bq3+^R$aU0QqB6g)R_;fN22$cA`q(,R=%WcUT:5/[)tean7f;oo8]HB0YL[e%#gn`^AP<#dA6cR_5#IZDluOt@2uoq>.3\S-PmH:E^n)8[\"XfJTfUp.*mQ0`onAAC7^:h,n&%\B']R4&!d99KMp7<,4-@a_)V?TPH1SQP<k6h&ADF3*OJrAA&@E$;5a?G)lRh-#@S)HJse\F(Gkch1qAFQ+9!ti82e^4`VJPmGMaV%c26GE<RlnBg\og0?`TIZ]!>HDGA;W"VHmAJ[]*GG-=#B#CNa?U[V+<a`SQiMBf\>^gm9P'Z7:GUb<<CVV9nLV*8$7ujk1(fSp,?e%ZZ;+'2i>+p6OmqK.db"\13QI3*YP]PG[2Wk3_S'K>A#7D`+g'f=emBq)T?D'VFd$')!-Bj1eQ0CMXUa'q1f.b%IR_Y4*[!"A:m[,%kP:gf6\G9fT^%7sI^\G6Cp4_Mkr>ggIAiDDs,U5[X1b&P4*<g7MHGOKC.1dK'3fkR[;!OSLm(Wd5nDhk[;ElYZVo;*Ar=/=pokot%V'!JC5dX-27V+P#ALPuI_f^@WW&Vtc6q$@Y/$"rfb'mT,5G5;(9N_Kr4rc(1*#8-CG\d_(l3B':UJ`0&9Vk2Cjfg3NUUprrjHn8r%h>&[8\r:)M-b#VtE_]mfWZuWJOle>91?ggYZd^.)DX*s)Z],.k'@!"e*+$U/D`M01*f:K1YG+H0+10U8dU$uM^9Co/il#uR;JfGL%\#P_fWc`5\lW^KH1[)g,f%&LOe^iT][Q]aY2_\l?/JOhV_8dHT#-F;'m?\bd+k6k1LcfJ4qRT.ZC9=UKfZ)URS#k7'X.Hl.CIRJk%;S(GDddifC.e@E%!*U4*$SuJR`ff^?Krq1\A'7JL<mN0DL)2VYLhX53*0kc7Ne(.a/'pFh9PGpBRnCdR_hOR/=\Q0H1`L,6fsGNS%/PS*5X@X3n="F"b2^ref>>b.J./=2HFd#\n_;.)X"fjM-Dll64PA.>fm'$^X$0-u.eUp&=Aj[9->;]2W"5\Zcb`hlho-EZ*n`R*f%omH8So7ma=<FMRPmlR/DS-<7/b4g<S!LbF;."V#C!&fQ4XH*FU,`)CAJ2.78[amupe1jj9Nk]5)5JYt2:[W[Rp7nNM?-'^37\U^J%i:!8YB%,5P?h`5oP&6\LCh&X5DEbAPO@lU#n>+&K_XjhRT>P;#L(rOQLGu5!Zc&;2)]K9'7+,@(E(V>sc8ZXq%h0Qugq(=m2e&pA%dLELKU_rb=KH/6.33:.#WMU><^S)d@g)=JnCsB=F->[BGQ!+m/e^ei8/"Q(]A0W+#j-,FsK=O6(L,us+9NVd.mg%7$#c$i1F0.Y)%Qub3B[bBl21\$ON&c(5r>ikd`IP<t?;KFD'kOBT.-arSK'tnY#=,&obLK(;5KM'P1hTs9g1I4D)P_001h*X.]Y\NZp6$I!i0VWVk%6?dCSY-[+!%]a@CiQ3:aAU\YPs8*JI1Au.;XLVfiUoYdqF%F%'K'f,nL5T#eF,:kaPGf<e?/9Z5U:iCPAJ389Q<RO5+1qiT.P=%*%[c,LG%>NW#eoH,mieC-sVLLZu[IJR)7a]4Hj6484Cj^Gr#0"KsG?6rnZn,bBHZOHtF;WJ]NouXQ9(uGJ#lEjcm7B??f0+8F2g9Pa%DNJbt';m.Ic=``k;bp\.]h5Fh"M7i5Z%ocr)OQe%70g4NZ]jOLl:fU,:iX&OPuJrZH*5<C9(Q%/H?_"/ZukjgB?KS4dk/]$$=T/D%,Md\TiZs!<N3qn_jJY!^=hQ?K,L=I-q1pit.J#95?F*hU.J.Uuqa^dlijtphEK71GT9i,VV(X.nOeb(]?P`#FH,`P7_?F59QW.+$%9`Ga"9VFhNcM_q<33W1H!7<qN`Cd8rE8.bYHuiEnoPP:,dWC0JJ%KHcFcXkBerA-5"[Ut[\p0C'ePobL-`2CaF/rIiB4H*H>o_J^%S_MV>W_?W/7Mo8O[]\^?.e^a,#<J'kVZPZg0\b^?a&\k7<.&'c"FAiBEAm4LH,fLLR$heWFU08@2g4Q+8gSq;&!SmpWs9'tPg+'+%/,r3+`8EX]duC`UB4UUZn^S<5U2$d$)>>/37R$SW6gLUom7ZE<:d'R.fl=F:d`dRO?=#7JFci3dFX:\IFpF0Pa;OUf'1Pt4gl=2]%38utZI?QKM,%P\Wd<_VIGb+AL97(SQNqWDCh4G=F^<Z2R`q*-6_fMEP)`m5.3ou*t^@ru[W:pd[<%Ci2AP1nKH')uRQ2XcOI'U<J%h*tq$aY%2I0smCU.EAY/kF/I4,g'agZ`C#e07#B$5>Rf7^))%e/5<iIX?/csSSU*Af@?>]2!^;OkDPdVDg(p*G<Z[1R0I3s<)*D^%D"%.8<?t%_6p@Z9`&f!6Xi;FUcH`gl(TBNe=),\j;%<@Dep&)o1h51/TW8=8lNU6)%YrZt4GMBOJDJp9L(B'lOnkeVPJFCC$FCab%p_[pm(`?;efgiR"]sm*O5i(V^bBtAi6E:<PENRu3?,EeE$ec&fY)ohXr+$ZX;d7;H<fu7CW13&PdW#4omhU'*4$9?=.Ipf@7+t#Z%j)N%&:"C9--jJ&94h?DqF:\-0*q%E=gnT5+8,$t`mbo5C_`bSdHZ[<]JI_G<DQ3RC4GS9*+-/:7HZVIS.N\$*4kufZ\4?:4O7(sJ%h&"]$7_O/T>OO@3]@#Qq*o4^s\qbWSqj)uS4h?DqF:\-0*q%F(\bG=A_0Z6"]I"bt5@3CG=T<4,LfC2iUaLs,q_fM,64o#d23@'8%.*GDSU*+"]@'MC5#LGm6q\Kk+,Q:1^`])dAe@h,9S+9Sq8"o"8P?E\T,n!"]3gDAWG9RB:KqUgQWd4m718(bV;"o%tYJ!K,>"Qe^%>[AA]h)"E/j%DAPq!ZeGlW2G&<?hTL\sP;g`PUh;XikRg#'Y)sM4?o,K/hBebfR?ioIsn]EB*)8@ua1GAjqM^O#qbs*/bcdW]Nrc%k%sqdOLMNOF'A#Y*]u.4_l8;KeH8m_G4DA\+R;n")O9`jM\%=#8V`B].T@odA/Gp0&WjF\<u-pk.bn1-jJ.V7in.G"2@BYdMG2p?%r4hjF[4MlY4lg?\Vs-B]'6q<B12Q+pCQ';g%Tf]kL^.BL*fAq?>XQ%^]!)uX\3@R0>2<]EPKFY;0T&a@lD6d=1HFlPol?hT2+Va]%nkBJTcUT8AEf'?6mW%>Q9e%&D!<CIuV4nPV+W5'r2:BgNlncSf#/m*JNRW$T:?j9+*Y$Pul9UhNod78o\W46XMcF7e4ik1rX&;_`%k]&+pl_GG`Hb-ZoX^7^s^]d*UMH;tka5\J@F`PiZ#ZRpkJAtke^*<>O)^V+?LKbL?3lk7%a??;<B,Gck!P,+XMd[e'FKoILA?JrY%T.].S0h=ti4jg0c6Ii:pEP-D#7M6UPK8(&[4IfZaO"MG@WI!"=@R0eSkPFNi7Ri;,;N?K#i<Kp''cdWlW7HjA6Y'_\k#AVNjB%Hd%M8+ISgIa/'&`9A,>BkQ,!?NNk4WrT\lQi#5!mW3Fk$]EF]k9Du/Ci*eL^-[AXNE!*SPaO<6Qc4&GWu8q/(IE@]H6CjkI<+"@^S,A%D':45,*a!"$)J0&?"I#2g7lju8I6tkAd_0ZQ2`[4.1Ag@@H^>4I&ZAWjgs,a5EqK\S*s-$Ejg>*mSMR0@dr$"%bgo1Y$)k:,A_A"%EBRHM6m13fSi"H*]'>3&m%pWi?OY_72U.+fF6HZS&VWFU>MHt>l>94hDFRpI],iV+0nXJ@>/ASR6/L%PR^&[W9[1'['B`tg;s4V@%&(hQm-39ElWg2&(h2B(cb!f_:X2'%<CocP(U[Uu=a!^toq7PksSb_>FNAXZ0L:p\mr3Sp'X%'!&3O\.n59W0[SS,D-<9_;$KO?A\%(cpa5G:Ti>6^#R.HtBjV3)j[Z]9J"./bVaZ#cjtHOE]MYDd;M=cIJ@p5#0:k(V.<!L<m)I<k%?FDLYf#+m6gcgj)Zk:R++c0"Gj4%_6\tW\Kh.iq.eKVX'rB6P127OGN:0oj;kM$-]iG'n1$Gr+#6&EjNT*,ER%N]Wb@R6\=:-U-u&4?>7[dQ*S+m#c9F3M`BCUXj`a]!%Wg*<@kPjo4!70!XJVS<"=6[VT2`kgk]%=q;4^^t=rY0(S.EZd$nEOEPeVB2EDipE0F3sOD=gSF+C&karVsC9/h18H.=JpNI*<)$0%>q!Dr7&N9U3@!UPQ)ri(IZ/OT:,jf$:8]l.glR1[Zme[8@Xo^2LuNqE@"L]l.Ll\uGiP2+'N>94;##\H#>o^W,5.K&YTKD?]6`g\%f]u<'=-('))i)JMSRm%Y2o&@gf\>FmShu>q/2O+[G[G#&Bk7eIU]\7sWS17e[$;l7FJLi:6EU"s.d'9I.,A0K&64bd(>.C!$*2fr%Fb^GH)IK<JX)qm;r2c'\JN2.6d?N=S;/F'n%.6*0-ds;)8,NM(oU[,75DJW&TM$.8I>8Q?@T5-HUAiUM8YjuFLTT#=UPRu:8+[Ji%M%W7"`0(Ms?-7pHgkPTuKG+nm-Pn5&Eoq??*:dA>I@"C"Nt(?7iSU]FQk'@NpHlZrJT1VI@/^iC:3bGdDC"dL="%CQ+-4YDo1?KB%WWu>l%HdY`JRqT[42RUApoj.BJ4Bc]>KOoe(&"`ZP^HbF0GNZL[GkRoaFi/&[42TfZUQ6(>jEhrIR>T2r[R3tkd$,l3fDI"3_@pO%mO2i.[[fISg;;IN?+k)->RNfs-f/=Z<Y9]OR*'O@IH*]=^d_a4^aQ>QRbG8Pf1*5DX\Z5spia_:!RT9X\5b@X2T)#Ud%:I?W[$tF%=[,LRKm;LgNF^:&ajlhabZF3U+kjIR;oM*q.NWo961F72:GnNi@c3s=86DeW4Jq`6hUB0ZVW/Z!](m4iBg0*ma.6l"H"QVHn\:jE%'7*H=ON"o@L%06UC$k1adUNg8p$.+(DWM1AgU5S0]TS,)"BCZ!d9'Ic[3cN0bBd^*Vgqnu)ME"9L(bDe0qKqc%8[X:?=UNO]n\!H%!8`*MF8c()`V&'+p!9gJ'a1N6UAFQcI\Z.sn'CFiQFGI2WTNZ9kJ%!k@L,f04p6LEEO@0[69^V8k#+-Ui\9`/FtfZfaF"].T>1CA%s85+Nn\5,"lblK2RJc5teW[HSrq@Mm^L!C2"c/Y=S-#elXtGedT<>VXT^2B]n$'[iBDASV^V]HZ;F./MS$cG!]I8ZkeWNg7M?;u#%A=Y0%,pQ,Iq'GapLQVN%s2P%I:L0?rD$]o_UsSZ11\fS5.9Ed=d/U*G.R<&QW7Wh;VT90";(1Wt&`h3dL<u5/bd7`B6*0<m#D@#O%(AcLRf-9^^iMFJ1)DtO&NfDEVinoW"NK,NjDIF`*k^jf@3uE*#&;2ocF$]WeZ@1sE@>8]%k"I3gjdG9TiA],UWDUCaXoQWTW7o/M%\8p;4Mn7FhYg-Iq3Pl&M*Mu\M.OM,)cnJ3_g\M2:P@>9CTWp=(mDPBJ0,`h*hH^0HaOBB#NLNE-j]#Od$bcZm?7ML^RjmRY%Z_8[%2YbeDrfUNg=h3(l&+gI]aPff,0L8[>)O+B[]L+YBKJ#6Md%\-Pa0>Vk8n7*oqpk2-L`kkA*Q"8\LgnDAUC1>k_['=Q?)q&sa/kq:%Dqc#"N7@W75T\g)E>gQ.H?n%j]...k]:kbd"H5;TI*k_10uG;PMm!/E[L-i_9:"]\$eoBo)r6p+S3;6=m'StGeo_mk0^U6)NQ4"X%Sp;IQ\Gi2dp:^X(cGuqsFZcO,*OsP#ZaeGscBc6ug8PV!FLOZpO))3V_LMr#QPrq5/GIrkeqojtqA`oionJln_l4#GgKboS:us_J%OGcM\XGP/#[Cm"Z?#jh?@L*EUTUR^TE]?BZ,-5W:$l0H0CM[Y5nd=VZA9%rgrnbI-jSMd11*-n_JY5hr/i$#[`!oGF^g`X^l(FKX%[^ubP3Ma7nAXSc42IX'"*K9Zb"?*:/LVuX(:9;++1P%'`TheNS7-IS++ljM-ZD"B]ZtG,Lj:F$dUA/^bnOarl9E[$dq[LcVNg)AD%]V\tn>i0L)+DQJS72rFB-4Y]0H..=%B%jc1A(;HO/1!2kCoRl3&+r5tnr?J[Uq^Cb\mL1ms/H4)_n\HP'm4itoWHn74Bs7J+fln#%%8)*<$6IcDeWB\C#N4?&fV%`Anu<ap0)>2f]G`.%bLDe=UtdgXjOFcl2G#suW[&sKk]Bh,'AT=l49QUb\k:>]P!Klt2TW7\"bon6%DFT1D[ceiW3C>+'kedT.PQ&3$*>'33<PX?Vj<hn"Dm+cs"g>G9L3Z4CV=e4`I&=YUqZ9,67',LS4kPXrd1\c#.MMs><Rp7[FfFNq%q:8*!n=>Zd)@ADkG-;5iMGe-3.*:]b9^82ZZmY><>BN9PN0ES:Co2HA28ms&ZePA<n"lRcV,dN@<BW?oIt.L+\qd1ni>B"A7-hiC%%AX!n%EOlMiKM=*0s1NC($7Oe-2=hPL0;m'M;Y\%2;m!*FmRt/BF%+Z'5;S>fD`1",eHMqLa:uHeQ3C[&\(^-U@'ND%*Qn'bg&#o%Do0&/nI%1;!.Mj>g(575%cA6t7Bf.fahUAP#p#md6a2G6^f9Lp2WI*KTXVJOV,"PMAR-7q/V*Pm#oG6MK=s<Ah,W<8rW6phdTqf<%@W2dXS:IJZgp5BO:CtmI.R?<1Rrlpb(h7e1/]t0m1=JeG&A&0o0W2'2Yh4pD3kk#S^h@"_Y`FbDY]\e0&4XgXZprF23EHGD/9B\#%Q:p@sFOFXemG':qVt"GM`'M0UShY=K)<2!]4pkI;h+S9mc;/^?1e\cr,8Y4Wh!!sYiIVNPO28Q\$q;-&PXhEE0'">tl>d7F?"<\9%JGKipGn'pl$]LOOJT&:KE,2P>[5,*Mj9C4%<fp(H`s+AVI9OcS76T!rhpMRQr]<jq'rkhA#d0_K[:uG<dnY4bUckOnGtF4c7i*7A%MR=UnKpf(Imt9^+)RPaNRuhJ`!t+jWJC,jc^tMEdC1RRi_h;&b_],l^@St>Jn:A"QX9@)u=Bj5i8#&<\`'hk6[Kh=ufa/ck2dBD\%<ltVt)--:JKl(;0^4A59RN&5hFjpGOf-G(`F008^f'6<*h6^mGg<dnF2m#m_YA>FKeYWP&&AY`?%1Y2KH6Gjs'6bDrTr8CC1/J'R%-/*tW,Rn9VB+YH+VW$5YDSgXfRV6hB%"a",JY[H.?<Vk_'4b\lZ*@.;8EF-1XB=B$%_$*kOK"4@>Og4OoI^6U+nH_VCC%:Gl\nXm%A2MedKb^_d>r4n;g*Y8"Ehb3[7r+onlja$-+>[Dr&Ng?%ot:NQY_epnNDf]T1Z2hR*?f(#&IPOPTU$=#e+1pF(6H_\mP((f!cT!%%O\Gs6d:&qhU9@<N6?LsC&Q>7aX7>K]/:p7*%UarXa[:XIJ.n4tVGT6+3b&iBo\Kio0L5t!W4R<Q(GAf&Bnf*qWF["N'S.Z?ej`,Z%8/qpW#k-X$]%_a$(*K(K[-0JQoUND-qg`q_a:Ok"&hjM=R`Ii9!s*i(S%]*d5kSR'38)Ef-+765$sVWDERl8<8-dKY5Rehq/WGh^%1kMFa+V@(/U.L8u()#H_G!T_WH!j=TA%Sk^m3f!.-?@mfGZe^;Z2eusKrPl*Lnl@UJDf-S"3@6Ha$=][5r%EJSp%egM/a[g&<1_(%f^qF.QkoH$=g#t.3_'_elY't`!PrB6ls16*OA.7^#sMa@HEn5uD@5W6/8Lc4bTes#'@MCg]]R$WVT'k_JUmR?VkLR`c7MkZ,dnkk%kNrsud,%H*ZQX5K:e-q4?Y3dQ6F<97ga`R$W'4*tYIUTg4:PuI'G"%1qiQOU0Nt*F;iZ]+"</Z.@?"b_g]BdMY.u^m3oI8*ZT`8]%T[6,nA.$-j//q]c"gIQTgMP@<+qq,3k9eo[AI6<5h;&3U+j!AD]+F=g9T<*#Y(^7[nXYJ53k#KaP9`.UK7K+gn5^\:caeTr'E.%W%?/$h?b1nI]^!Zn8FRo>fhG$P5Bkgck:%Tg[G_CSjVTi9<WD15J@^l]N8pID?XgG)@Z\g)6BctkS(<N=@Q#I=gmfZ><(XNJR)K9":%6.;m_m%s[]=pPIc\s-r50,qPIB/Y;M;`$,OAS[Eq)l-A:;T]$2c8215I[L4+`R>?2_68_c%K_7W_"6>BQPUA]BE]AI3WVB^Uo9=[%:k[c8e]"74iKP*0X,Ie_e*@&(DfcRi"-"eW[2%-CP0])L]+moo)qss56<GCdJ>**%/4JOIqn0TrX/tredB^`N8CPt`9uOh*:),(S%!M'oi:DsWC)^%TocF:2r)&SmF(W\a6A='R&Oq!&[AeUn.Trkk0/Q).2U=+dQ@V_]C5mUX5SE@,[(>9^)Rt4&;Ti4Z4I8*E]7UE7_%>)$Qkc",:X>3Z10ijrfWXfYFPW9T*ud*gCC3+j),>s\S<;Ifn\Tpmd<Kn)mD=j'2YQBYC+W[frWCFnkYZAjNE-`.5K&[g?@=tm83%Sf=niEUkm%!8o3.`HeHcBTNWZNRS3_kM9-jA7<.C$R_*fb00]QP6q@Wl>MoPP#B%D:_75ppH8#W7%g=!M86]!]q")=_5KaLkh7;B%LbXd==M?-P2?XX#W<!c9!,+YWQAO"jHN@5b+mERZPNsQk"sO=D^7Zt803*bOD1uMON"o@R!%VH1G?[Sk3!*k?o@I03c3)9Kb@YH)%UIa@-n\@%6P6>WY#ARM,8_R>b?Y$jJ%+_F22ZWtW#ST$Qc<CL]8Q*pVgo9+cVa6-DQNgV<=K#BMotF8[,>]:lJkS+%Etk\U_31a[%J>*a)dZCC.'LWW!2NtPAW.jeQf/co4:8i(&_]o`VW,33ROTZ!+Cr!;NKMVe!3YpfdRTE_7YuV"##YoO\p_UnR"G5h_CQSCS0r>E6%,h]OI4D_oST&_UE6plipZQKp<@3cck88,G1'R[H$=q".S1p\KeRn2JEED7_W#]iUM-T916WU7Z<k&_b&1Zq$&4`=L:/J2#2e!;^^%MBb+J`5qLPl>Ne4!ErO7UlggcFe+ud`!eJrU!'<2,i,S2@,%PRC!2)jJeM'AQF8@HPmAm["rZV<_BKX?*="%-F<D&%JI[[NBs_EU%!GtAQfgcpj>FitdW6@ZT"ZgMKhJcfB/C;ti=Fl'hR#DUCA\&dVkZN7jP,IMS,aN_g0"MeOh&ocDohVXmBJl!]!=_r7ftp:G!RN^+%'DBu+8sIkBMc@N(]f'Y[YlX,,dcmQ_\"m%CS7nUr@U(X$gCTSQ3mRmd%eDb-Me^E;2Jk`1PpM\7J0=146:)r*P@UgWL`UGAQR4W9%/oB&*6g_f]&Idpu3+juWRVd?T`?:k(.N,Sn$sL>pSJWCJ*">@?-INAXfK#ZGHSISre^5R2XTH"//BOiG5auSqa:/FmOu+,Q#,m(k%b.9u)#k<"%@8XC#=pF@%2BEe`HO@o\C$X<T%,)NG<)e+aSl2oV!qD;,RViMX1hg\1cE_MTX:YGm2Md<;$(NQgKmDLK;CpUfG&Xh\%R.>[/L91+.AQUZA?R;os0Q/neH9/jk5V'hi"P]_3]9)C4=r9Z53tE1=hm%?5P6`0TYU]`%"rMIe"pX=14K%bSg=(kf,*H4g.ghV7%iq>tTcu&Ea.STj6kK2W]^%3]L'MkmhG!(YO*/tPfiRX3ij)H(+Dfd\>;dA/cW(@=e]1&pr/(^NbB7TJ_n7`[Y"U5q!A(epAE,O`_%)fK5&66WafQ=1,k26hK6[KQ1=oRRR4UJV5HJYJ%6rIU3(A9.ff)?i#+&fq)DU/h?(8Cn&Q+-?rr+JX$`3Z,j7!qAC1c`n8r,rYsA%U6APWle!tk%BurLPr'uem0IM_`dtq6;,UF6b@@RlL;e,A#ZET8=r[pk\i&(elinS?/D:OX;"K?kie5-F1,m3o"5$&[S]/cRBIQgQ%63Q`#%KLA+2>8U.mLeZJP0O+PjE;-:A\t20'S0*h,p47F?m)[smK)X<e:;[UJSgn\oK!5\V#`57(o-_R-q].r>t\%ZZl,5Y+hE1K%0QL^h!7&&1&E=J(!SHEh1T2[rVjV-:fbjfX;_s/^`l8ldpPs-:aeRaQg''/?SQ6@L>QRBA2utbLN.JgDrkL@:[s;FR%L&LKqZ/9o%i*KP3^^O`uCP98U!+U6`/VUl7?P2h=IR5ZQX9a]T2+C_;og,;X;P-po#W+O2"@W)\%A88M)Bb5D"GRI)(q!-BJc]joa)_]j_$ser%?<RCF'X%rAD`#3]1oZ=&Sp@\*gSe`+Ce%,W[EBPHqWhp2QR,IC2pd#4o!7nSClo=^>$2d0g*X5^)VNGR>;rNeO0K<c4>;eeJC0BB%9gf!sJ2$q*b:[^D+T^;FgF7cM@3n\f!BlX^5bsg!B[!1\&@E`:lpC-C<F-Rt$#?<tN.A%P.qs7@N<8Af$dgHX\db=GYsFJ67S@W=%)1l^N+W<]l*VHj\E=sr,e(-;78DG*HAI)"71gm[A=VPs%/Fj[1`AiGT`!`F:9gSJ:Jq:uufFuio.3FdO\da2hdKl8hBEY(7/9R)`%N[OB&5YM\2GX03]Ys`[(CeFkTd#ECf9E]o9&78r*<@Z*R^hXEX"#2Wj)Sh^g"JU),S4m`#)C&J)VC>oFH\Y8p&8"k<Mmri*N0\0T%Jjf["W(sH!04fi41.akV"r%Ee)f9*i:c^L0aqA^sd$hmi)PU.1"MqM-H&[q+&_O*QL`[P)V,]%L1;kdWKL)q$!1.)]Fsj0:`:*r`%adPaoK8N"L0226C#XX"hqEtd;o$[*[+L)*$NU3!VYi@rW=^4]H]>!ENOT:c%Yd"9K%p@)S,,L.bdPZmLgaq"-'Q)Xe5.]gJ9rhN6%+NB6,(`I]<Le(7(";qhtd#77D]Qh[L!(@hY*Jfi;"9`;>2ha:26?GL#V#cWS^mWPJfqqMk)iqU-a\[3V(H$^q9j*2(";Xu,F_I'a%0d(`*(oDQj#tq+<?'8<SC^t8_H'&Q'hs2Tqb?6sUkiiLN`1o/s%A!6dr^M5l!&]MQ,l5;TX!ut[VC$.u!(Yof05bR8XD:N\;aZ-Y%2UH,?>`<6e#(U`_`78gVT/%7s`XHa1A1#F@8Gl%s"/&5-a4Vf8Ftki^UOoUP/o+ZWHh*k"+NW8CphJ9R#,4SQ4,-!.]o>r(l6luO%9\2VXJYrn(=PUhM1Tm#>RC0MYQm+Gg'*HKpA!%,@^/7AB@O;=oTGF1ngo"^."G%5D8!hdUK7d)TMdm"pin5_c9HjL;,>0(&FfF&[%iiK^a"(e$Z#4Mtf)8),0KIQ"]"#5[`-BVjI1b<%=8H])\P&A7;5mE2h"5jqX!8IS%F9FM%Q#>,-"RCb876+Zm#U\sDCmW+GNIg)O%Wr]Ge+^jAhjW8)qj<CgfEr]U80$Rs;F;B!l1RW2m4/5mAZu==XB6b):1snf9o*Qlr+uLF+@?h\u&#rWE+StsQ':An,$<="\Z8@A&%A[nO:,/7n/<+rdTARQ\e7GK@^C_.0/:3rS(9+;^i;O>J"BVH]E)U"l:PCP8&,;UjeM8kZ.l)d]D^_D1O!"4&(C/=sg,(OHnY?Ple%%L.Gs3?r!mP8K+%)'pI;Q?7\7%t[B_#gn%C7@eF'[*?C"cQciX;KZT==?VaE-\A,FR(K2n"hYqViNfNmRs<MJ@82rSD+%r'jPne3%n9(17:P@%B1?qg*Ub<XnpBH(n`!0s3>26'uQ4P*gN?E5)-n"_GW,/s?R!+$"?st$LWn&q7B_HR;E9g_G5j,D(C`loD-h/NAOO,Qc%7n1C.QXpa[6piQu]LsBOUhLLR"e-FW,\,jG]On$m?nL-Neg0r,A8JE="TmDbB9Fg':o$!p-R$j`*=mfAXCXZ=&-Rh.e#Ln_80Vp_%o+j4r)*NNkj0>:Hm4O#'3fQ:1-Q[h5g.<mB%C4?6gh^LdTJL;h_Q4<-g3NllP"S&Q14%O"5i-PoPGeL4>#@\++pJ6].KpPUf.qa#%QFERoC$5r/ZGd9B<"'\=Kc!5'9u*^7A1B#;JB03'd+mAV9LZq'_^j,F-cRS$<'LXeM'n2ekd40hGYk#_4p]/A0-hRSD(U[=G`Ok,%".%H+JC2BVX=A'LNo_FkO8_0AU;<CW,i^GELo$p;NCaSp^68bWZPtPe7pK2=BG3'hZXc6cp"?+\UMZiD4C$28RHF_uH`XG4UJh%K%W+;)98`+d8Ku!0:?D3rCj?t;`O?m.p+W"%E;[18m>F8D^$VkKR=A?e7K7'DYag/aYAu!P?=TT`oHFb"<*Dmk(@-rZB`H0k?!F&LX%9A'=RjOX[*FDRtoaA=1P2R?!YLG[dO`6U??-4@\q\nKL)RV8T37V.]]$Q<0TDK;e[j3]>HS1=4t,h*YZR<tS>dZZ*]>=DU@bmUT2%#Y^K>TY43KJ15XEl+Q^iRm[gUmbeX],=K3[R1#RL?Ao(CD$'fK9I(4r(hj:A/[c'-X;6@,_6m%mNj]/oNKtWi.DfiJPo1%<9asMR%4hV8<`@6F,P!#LFK7M5dTm^aX7pqE)Y;s%F)K:9K2)A<LBVAQu-!ANfR7MXcFWcUnpEWTpilA:#?rsZ*!8&VZ=gM:?j(UedTTZ\:%.kC!B2Fm<OUhdb0ASc2G[MJ90dK"$+dVb@6KeZsW=s`0af?uB33C^@hdqe<R9MS9u_ECHfb-5n%H]U.]an7Cg:fhhJQ;5):KO8N6%W$JYS2.5sc"'GmOjB\lGM7)lB>7/=qTG;>X_869_CYkFG_TL`AljUa)%#o6Wa9]G`p#SC!<eHYd?pOdD,TR-k9b"$^oIpsun;.7#%e?)2rFgfNIQ;.hXerf4>,'h@D)(=.e8bUV!V>;Yr&IMG\@,f%c2tEHF8=rVNBusb<81P`'KI/E,d[:6`4I8.adc'Q\'XhI1&2]W<%`@c<?-ua"WPfb!Ifes]/\MRIp4%KX/B^PlEjoC#N8\fS0Srm5f;?XHH]gL_/,th^(M0Lp',e_,O/2X*-b/"ku$[[j]6d9psZQY^3%#4"o"NAVsH`CpjlX5KMK[uJaG_k\&XE5WM0M'E%,PI-;p%K]`<QWTns&;+90b,l,,$I\LmJd=80BM"ZE+@c3(EtkBj/IIEA>$2J)%E0=!JpAfc(lu*5KNPI*o7h6h%TJ5_9Ail*"0F%N40d*^R[V`qnL*^VtVu\G3:ooj_ZLtL6GleTAP'qjJJKq\TF^ec)q8SU<@]^%)%nnKmi=*g;n(IDoddt0YMD'3i.7;XjF02@2J(/qaM-&L:h&?#tV\c?>r3Qk)53i-C47X^BA2DSH+lO'l[qkA4-?8*q!Gbni&Yr*63%OnTUlRuiR`M+"h-V#0ee;hc'TJ_XSIen3Tc*1%6c"GZ#XJAic?/5OIW7^/5R69##0lU4G^nS/1R>qL(7C&fi<ZK3+ueCGD27%D;B%E$n@rF:CkF4tF*s<D.iH,9/"H"JjhYkFH&BY_CW%BXTL'n!;4P!6j(E(AYBRX09TWe:=;bF;fe5UDGRg:h5SU?mnO'4,"S<a/3Mr%^55Eb#TNs()8CuP\*PH:Frf%f5fY(J>pmoXCnMNF^pEj9%<S6nmfmYp[iuuQ25"M:,E!<_d(5[kgX+HUB*g4M6Hq$A+?"c.i6im4%J_/H3'8VGY)?r[1NX:d1bQqfP43o)ND,Od^kpeELOp7Sb#N+'BY3,Ni;E_1'IfS0[g*X5Ie]#gVI*<JD8fX)7-H3eJ>ENAdho1+o%[Xr,G^#L\4@%<riH!QmZFA1/f?1A!$5FJ6;`BB'Ts7uNVGf3pIpHcn6A48\NTB88;kg?(9OL,UTRckV>OT5O+9=C28\UN\?]TF2*%XV]J$FMenP8[_$ZX40(BK.=\G-1Nr<)tk6U,t^rh;iD`98\$/<O(E)]np&`c>\V"_8VDr*^VWrtSJmSJ`E*`a$jm&(hqA1_)\c*/%<U=4>NHh*-?h4U]P[,Mc7Hep9^I40L#bRJ<9QinCa"np,h4>5=;Zk]J-3cSKTU8'2)i/.2GeJBHJI^u16qF,&4Fp6Ja>fiV&>U^5%'EdspAoTJ1*@jIc9,;;uVo;(1C>#3>ZoEd/APtZ\Nb$(ml>;E^X!IfMTYeHT$_X@IN*a/0(f+HT$"ZXsU+@LQ0`\a8^P/51#Vn_K%>)D5>W6Gba+</p92T&sJH]k_q\k-JN<`VYO.HRV:\]\PU5S[=fU,llD,?X8@^]YEaRgSkGXfe\n*[')P.4_(mc6PDU,nGgLn-i3Q%<)VfiR,4)K1C."o^=]Z$$\<,j<f-TREQgqQ0#7R5`1T"^luh<S!0133B_0;/Z,EVemE%*f^j*kgq5(R"?.4[Nbls6"!$$V#GSZ]U%=:-tM83Y[D1<[&H=RYb;\nn!8P7bp1P;8-,jc4??<Z[Zb-ie-5S.A,ERM>jgat1jo9Ip=Hn5j#(X9'NP8HW`9h*e@8nQi^RkIHmR%#A'JYm:JXYiXPtP]du46\RRqM$`V;FY*EuaCm9-g,gfhYE(HY>7[&rnL^rHM6Fo3<kciGGjB[MYnp!9$a?kI9cp0o8Yu!J_#ga2b%)DhC>gh>EsK0j?l`OYFk(-8G(B[IAFLY5,(Ob>Z0)2#tclfJ,c-nVkR-3f)MA;ti=fdu4RW,o7+E_%AS6OM$e:u%b(;Q,&flkkd/%MrZ'7GK4>;dP=^KT<(AuMKoeS!p/-o^ee.a$C!!!jdpl+%Kl'N+=N36Vip$L_gFkH\78Yd1ceedq.8W'`XO,.%jU<Q2inIpZ%5<B%3;`o#2EG!t[)Y2n`@'2&)UM[36;bJX<jS?`K)r5]-CGp<<u9%,0gQ3O=B:9W.2I#Q<O1r6d?Y&MF"1qC_PDg;80cJPYFH5)2AllV%L-!FpRY`nJ]A$jm+l1mmCa:ejQg+g@l3AQ?`R0Vf432dX#nY3%q(#^3&>5sTBR,q'_SeG+,f3`Y&BUDsc*GYdO]h[J_0+MRddj[)%#j1X/85W(G)1.J\q4N/,r+d9P0CRoYgrPk'S$!MB,.\Mtajs/u;`nea1+OtGDL*"Y]0%'?hh4=:iHKW'kX<$ol;I3P8t\BA-lKc^%3sr4>OH^b-nsEZ;-j\dl06>636U#auaG!34+@Vh'3#cuc9%>`DlKeNSVVRC;;ul9J`[H5fX(7r;IZHbd[`G8EA3iSeb.NMB;nes#%nKmW)Qqkea99QT!.&C^7b'R,J:]ak/E3*b``4Vs&!ZON><c%d*Qj(h`,AIE0;OF"!3&A!<:'PXcF@f:DMqSG(:H/S_27^Hk.28;I%N3HAiU/=?b!?guJc_i.d!>Yis!&1V!0EsE9,1&jt6`*4WdEE2)f<S^&/J`BN$6C]l1/nZUO@>!$FGWe>,$G7Gb*An:*jqrB)l>kL%!6=H)]EfeSGtf'r/g>'lRmp(Dp_c=QUQ/Lh!_mC<GJm4g.JQZHJjKRm)bF0I,1*=-j?2m,S]kQA1Pf0B)k[`t"LD;>bGIf^d9.%u%Ou]GCV$A>mF;;%lm]@!_@ZKJ@QLIGR;\,t^Y@P==Mkbq/+AbX#CNT;C#AiO-D#!Ls#Tc\S#2Ogo'MjUF^sk<N9mB41cY)&W"X87s%`99T8KBf4?:BF-OHT?IHHaP)!!AGj&is$,3\EoENd,4@uE"4fP?t1Gdd0_C`-c&_T17K8fIOgmaZu@QfRg"/,A94@ga;@ul35c/b%P:+81=%qK1WQZ'?baTPI<@2Xkf^>slLr,>qd<j#Df!=9XUt$I!/1tZ?[PG"!BolqJJ>s=kc0+Ak>:bqG8L%[.0qj+S@%<0KZ&?K>%;t+8Wd]%eZi`fmu\MPGlS[c-cYTV>+;.-8?_\a^A,d*RR187k`Tee8/kTcG'Tgaf5g=:e/SkiH6YjuLI,]\[/;D%%hD?@\&bKrpL%=X<EUC<NNj\et)jk@JCg_n]hX1#&^nOb":4c=k9B1Mes<\OoD1SC=k-Ck]iC:1>/P"LBr#F?5/#o2[E?;9i[iSK[2::TR(h3C9SY%H5ORR'I1>+\t\GP,)&0o`R98>?$\6V`%YN8VnSmNR=VJ4"m)C!f&m\mT%k-@*B"gf&W"hL"D#h?!]+$jPWak0AqTH4T]Eap[!i:8%b/EEUGmLj!KJC0aVfQ?3*D+)l^rN324hu,8iWYOe$LcC\1J^LfR&9A8_K8u'4%eDnbF!X;B?+T8-k>b@S>_5Gf'?#XjIBU#SX+i/%m+WB!a[D"KCU'\X4YVkK8gjUr\o0V:?o"F_Ed#g+PAcT_R\j1jg)VacS>7Kb-C2H#h(;c*$(*"c.kEY,)du?O;ga#p1rLLCQj"Q'%NQJHHW+qq3#>@W17K&0][?8puXJ>m$:$3CgF&#hV0b:-QJh%0-6=:*:063_K[EbLO*L&217:;\3[D].08_8-;LaMqj:t)dlQI`I4%UCs<$._AR3Fc7od4Ep*h'R)\5)R?N8GFj'2S1eK@\I_p[L^1t++liXJ&@J#G'h9746-*8_"(V-6J0JuXP1l(Ua3,gWYe-+d.iqO\%Gd9A,(^ZYFS.Gf5_*F2*"UE0iMFl-jQUtirg&u2(A<2'l'H4#`PGY)_d53?=.$:q<N->mHOS;:>2qZ9_;Wnd_I+dfFZft)[ZY7G0%fefBORY"`Y[j?>(=R^:*AKh]84_%]a`8iY:@tp"1>EaDq%mP<L#3&YTHudF;;Bf-Kcpqh^)/G'e^a-:U&%s@f$pZC;/t?qVPejGW%i[?e/&m`B2BUK!HdpaL1--[dk)1%Q"c(cQ`Ld46EQR"`d<7eKG*$'JE%lhT^i>=+#@Kc6>>:7]eoZO]qcW;IZ0oVc6YRdNNA&*YY%%eq"J&K6grq4\+.5gIq?nm%bA3"DM"b?fQ!HH$lN$F!f"-gV5E'1P^#:rcU(!p4p+`%BiAK5*$N3*J`X37VY)ZE;*))[0RYAAB$B%a11)l6Qi7ln[r>Qdu?sSFhlB27fk/(m-%=gSesK:f$](.#q_'3N*[r$Lt)R!Zi1TIQ5OUDjia>^]`r58YY41bN%u$IO%t31>1HeW%0ugn(""kTfGDY&.2DLMV*AK1lqi#Pphh^mT]-JKNL.!/U6OBcPR:ljQS(XZk,2UGTIL'PH,P=Z<>&1AZ,AKa`1s4?#2j!#90ef"0%fglNbhj^.m^dUtT?u\'frAeOT,j+GAJ\s!qic\(Q$$n92=<!fM8E_UVK5?R6h-J#n@%ZU\lO7m\af\>cBMp*:+u_UAN=u\;JX[L"%c\EN^:2C9L\$BY@kDt/=aqTY1(kGEfFe&TlY[&cB;ks-c7P!YhYQo2NUkMMr$pR0Hi#Pb(:Jd(uDi"HJ)Q+(dO])[q(V55JL7PRB%FBV,^JHqVr%^Ej627ZeF<uG"SqiHi]aC/UQ#SuJ8&prP!-_cb"E[DjV!YJp2@+31&=O,13TH[TYEs%;9X)VMeU0jg.Jt-;+J9_Up%q::q8W"fpmkEG1qDSYE;4#J<7A7Fh?C4P?U]GL;hT'f4.K#E$%O:mgT$D^d0#Kfr2`J%4pZdU&fE/IfM^<hBuf%3Y`l-!@nV_t%3%NYmTOMU)/)_9FC@]o'k(f`UGDE>AomT@6@["LBHUP7:>&+U[f,_/!#$>Oe'c21Xg<@2![_ZAAfsA1KQ-&gPHu?^EO@7Big+M/+Ar%K?IqA;J$,7b6YE7XFcguZ!Xk"1#YJ2e.S#HJUG,^'h9odE[5)eigZcLX$Y%`(*?HbCE>_N(!#+H[EoOH@Xp^%q.:cW)t8]O-JjH%%6C`iS3[l?\2Dq[ToR@/!eZoZ6:PT)d,Q2I=lqppU*D#`EH<im(D?+R<(kZOo)^B`u_m4&Q85??\#;'[<?85;W&_JGJPY6b`g6.M[%k>msBXcnUWV:^c2U%$;pWhCi#DH`l-,Hq1Oq]n7]L;'+%khdd7&K4:Mj$D.5W[&(so4<q&2##A-gR&D)=q5[`Ia=]CdFtTgc0&d<%kb\q(9m6/D%lddVa&%j3)r8lC/d/WIbQu7f8*b(#:Zef'0Em9ejCH46E[\@5V3CR1jA7H3[Lu>K;i$0(B@`jD[$:hhE"Y)N`2qf7%JIJY06J$&fD['dW'5(#(KMM%Lm,]E6>9T`O>U\iO];PQnQ)6m1Ab(_p9d:erN>3O,6ejcC[06#^(u;P#[+WjGEa9)snPWCspf32n%>OB3goo,.kM+`u&jl6Y"FeVV3^#"%>",%AkQVZY(>=tCoikeZXk9Yk?M#4.FIdS$W)>G=aUIuFAXHZ+geIn\9N(Qqj:4O>)8H)La%fYrnS`+4*Rlp8?g[LfXV?M]r)<>9W`%73fp^ie*"@q'+p]sJE$P.bm=JjA'U$<=(YQ5n)F:]aMho/V:/O%N1IZ;6F"n`6A<3;@Z-%&pijXp`!LdE_*E0iOmQ!E&ub[\#rq,m"JdhJ\#<0FpZ>@:<Z(eim2Yf"?'D;nfTJAgIcn;ihS2fXGS6@[0+'*\s?9;d>%*,D`"(@%-ST2K,d<X-(%Kc;E$M88$/d0Xr6q:"n5!le6ER=>ZeI1=l%$1>@%u,EKcsR$:A9YE:lW)t>X=_HQM"=>,2j_/`5kU,JQH-]k9D:>%XO$GdkU7&,V@Rj?B`#)]%<"9'_!)*a]qB*QKDE'%/r#,@Xm7ZlD!g<4i+S4f0S6>HfVN\$hFQcZ=/Ri7khEF@Zk;4VgWfQl:/Nq!%h$3+^Id_P.&F4BS6YZf^D2HK[Y8#o?e`gCC2@ZHuF_/q_ePC0:EUI:r%[]2&0I/^a=oD5I=uqUbTGZlnOh>_Rk%sHa)q-#Y(E]9s%6YNN*#1G"B[-U>]!rX]`!Tic43>j$$-i)M@CSW*>U/sCq]Um7Wk[Y3q:MBs5dCpTsDa6q*6*:@"MKGrKiH`3j^B*StSgE+kT$bFM%ZJPN4:rI]M+&`l.><31TTKXEOB^:lp0fjpqYCO^iWsd:HQZBJ<L9uC21>&fAq/gk/1bXiKN^#i[jeC/oQf6KY,?23qjUrqGU:=[f%=@)jHL6TDmUY=[d$>LrV[E>e0Na>2J*+6_C#!0VX7VF%'MEDF+&sIVIRtbl8U('skN'iP$O*%N-BVD)YOeXOR^bk-sNH275;BWNp%E(EU5*[.c*6mJ80/Bb>!)\'<q#)?#prXdor@)7/Z.DRfPFZUTbo4]S[/s6!-=_>]q.HXI->p?Nrjjb"5X([PjFO\4jBYt8Fd'*qu%:i=irMJQRW6A'N*c3>s4UFaP+:'0'^2$5p'aP`f%\^b.oX)i5dbqbc%gF,RC5_@Qh+`YFIXCEJ2eCAZr.Ae(cYbXu-W%gL:mQ1EC%.o\sj3MoC-XFUg-bdR_6mS1"7@&>[!$]s^8Q83_STO\^Mph%#AZp5+4r]+"#c"Ju4JkG=:WPnn9)_njt*RF<CCElCW0^fR,<G5$F%!1;B%n)0']/rl79<'$BjP3RBclsQ9XW,"&Ab@.PO%QVh8(kL*0GL!WY9*S?hV;lYm3#":pk-:'(0rT0%$nR@aQ?'J;fVcYl`^tJX%CXQXb$q+_=)W]2E%N#^$8bO&Q)-8NmgQ4c18&McX<?.fm)4S^8U/G*dWTfS;#aC8aGn*Zc7*Ccf@Q_@?_4j3RbYjTXN#`@MD\YC,%lT).0.u$p,ek0[=?<Rd0'an]l!XqY<&fN$K_&.39Z=hZRT/%q5)%2u_]+^lH_H>t7g!.#I<Qq>P%5>0'jX@BCbFko(<jC:^*(F3"%_AF?9LHmBrODH;_;ZJXRM\2+_D0AB8L2?A-5jQK_*#j^]lI"$hK*2om[,6sEJltghVD:CAk.auDFSgpK;Z&2J9!(a!B+T7?Kgh&^%m\iMU+Kh-9?J`nRIMqEEbiKT#^l2"Q2fk)uGp0)fK33OUpfoYg!o3&bl!ja+_bo+c%SVJKH7e'[+VR3bn43rLSrqG6c;8Vc4"VlO%ZqUtD_PhJ:*\?WqSji=*kOkh_[2c8qg',*S,-uURE\8mIV6N+0(gJssJBM"0i,[XTH;1.S\*Ol016+V`\Kn!lbn.#Ec$Y)$jZ4+s%>6cc")4la%YO-LU&%>`TDN,=*%;^k06[?5)W$J?*0KQI"FclQ9*?'Es[Lj_lC(X"4U6l/g<*>g6i8c#Ke@t5A^H:'Vk1ng/8%StJ%<o:qb>91`[m@7Qq01p1r5@_i$o)B/;o<KUq;-Jmn2rEIsIt)fbI<T]0o;bpqNWcliUAFQcI\UZSlLhpjF`DC-buB0a+"(DrJ,/t#%Vr-@D?/iobMt=Q=S*RE8h]DXRX3%"5H$+BA?bM&/h-U#$J%,@NkK3b&rc3+-He']err1pJmHsH_^MbHKq>0q?Ittf,If$@fn,@G$%op_`"&+@j$W'=)Wo!dqCF85;`[!qsp\&(AT0(5dZ`EO`N<!9`AQ@Nj\RK)g,6`Ig;4+r)I>d,'d5G)@(2a@98o)*BKF+=-(\i.1R%d+^[aG7hBYkhX;,"74N_ntE(0r1a.9nb2DLk](V,*Cdp'7ZZZ?*FG6/bDW"Mhi/\;'`T7"]"T\*o'ZMNVu+[!p%`XpUeoU(;^1[U%C1NmdG3jI&3r?Elgb/Wa4\W_;eEte4ne#3c]Y;"f45W:^ngH`BdQ_&C0#s1&:7WaS@5E(?fCrA(S_p":@uHJ7<M"SG\E1_jm<8<q%rc1+)P2]t"d$h,<#J*)M*Yj'Kq-uuk*q&@soDZZ9o(qMJp3c\fgTqFZ0@!'\Mq=_*jl6+SY\[8<njmX^/8rl&DJht*-Wesb]lS2,%JV8-2W-QBg1V^KsE:`VZDTo!R4ZX-Cjc/a.bOP/ZjJs<Qp<5hW)]6X^gY3U:ih5]+lH9#*[(U[mB-?nSIX?/+nV-4SUTJnKF`04h%^!Vf9T^EiM]n<n?;"kIbhB,qWRk=ZF]R9\Wm-W'$0>PR$Wd-%.T/&&o(YWJ<G$H!?@Vu)Eg<aMqoAeZ]j5iKXcEKZ?Lsoq3-XUYP%EhZFtV8tV\?/BL]>4u$\rp/89a,_$Lf/"?*^<"`t\'Wn"Pk"-^ON-em):*ch4pV,DAs;TXL;/$.mc3kUp4BdPGB&:_[,FN1<IDHo%I<TkKI!pHe3So/9Xn;8VdHJDp=J"DWT&%\1Y!:d6?&qLceV_[\'&Rks-ia*`F1lt>.!*?T+6=f+UDV7%IWKdUqrP$M8_kF:mesR'%c;Nm/U&TeN+MrMM^B)0BKZ``jSHYi'I`>.(^IHPg^RdfD[Ta/O\#gUQe2GLUV)@2!A<?7u0!=Y<=keE9HfX`To8?Nog3Y(UD+V9]%SIiP02o;>++^9:,FrU&H9f(MC8[9kb?o2BgAV7Oe=9pIh]8Frgj*/Tuc`p']YK2GAQNL)H]cqe#5kMD1iYUa*5J+V=H[iH9)aC'F%@\6lJ34mHs0/)b-5J,QYd.i7bcMc.U[l4t=9i%?p+hq1:rk-1;g`mtUgWfC(fAcPj^`d7PO_B%4opbd%c/n;8\bt&m9CVAh$e[1>%L-b3fF@ns7\B(U#ie\/-;0sQcWTiWqf=,C20CHl!5q0Mi2Se/"3o=7KSrNJZmZYXNHAN]FRI09iU;Sc!kMAD#1jjBAiVh$_c-O/l%O_XFgakD<5m6!-#rD.q1l@9A_lus2Y?V9\P(.Z#\Rtgkug.Sb2>CF,Y<I:t%pFbJ!V4QAt!k!3!gXkK)b!YlRF^ogUliX$#g@m2r%^e`uJSpb$=UIV[E/86cD./YdQs"JqPG(%':I(d0tSo:C0X]Bgi>h]f_;c(-oNk%:$q3If'`qm`YfkSKY>k&MmDWaB)IN#nbp4a*;%*mq^kU#V&l+"kmbQWMAr]5PtYlk)%b3eO;!]8lVO4/s\!9NF?WcH!2bNh=<aX\sP5pXQFqn'Mo^]qK`+V,uITRQ&:IU#-.OfGAim%rh/g'AhMa<a`a3TN&E3Q%07;/U>LM%m)naC[oEjq]8OkUD'II^T4(l@QVm5k4/B3lD_LN2r\7`8aq^N)ZF<-\.GSI'il=\Vg&85s%`#)4nMm\`"IiE`!G/:btSj'77o%15*7^!en_n380XiMlThq_dImr!'H``%k!p_f+>>VFDmT=HpG]0-,Uk3[C5bS?_ciGh#P(nRAW%?eoW1?7C)";.XrW*HsI&Q/nFt:m"8sLS+(M_XZJ@.fE$jak?@+e_.:*L>CHDFKbTc(hUgQTCWj8$o<?#qdTL`"N0S^\T\G2g@9$0%\9`/F#.JNu0]Q(7mTVZpq25W9)*ajD@7l;oR)(Z5JT."(6M;QBB!NrG0J>r%fRhQ=HoT@GM[P:X5GESb6\fWJJJHk'E#A7<$&@2C%?gToQIW==#j%$I02"(tc1SfpnCH0NR8@Igei5LDfN$$H]&:i*gs4O#XSh8N4g\pe=CUfF."1JOe406<f[L0cV2N^.)K\rs8ch-cE%OgOX<k(S)eSTWnF"e:T3(@=]EU)04#r!>.r4Vp!3-;Vp<U-22tg-7>])a3ru76=>Q"%CsaMKX"JJ:iZ$+DAA^d$BKd#C:QdB4L/Y%5sRNYZNE?Pd'N\KB;JPic#u;:(IltF&,rn[MYG#DGM"f`[Z1//Dk#.,5AZfRppRI#`/]koU[e>f72T?.j6=J#^OGeQ`BT]Uhd;uR%p1Cq3J>:3%'+a7dDr01ib'1J1]%N>3AA</uW/:ANW@,j*ms5'8^4O]#s&\^/jJ>;k^>QpfC4-#5h9TmnOqSh`g2%%II&=8/+$X-c%R'G[4A:iKo9JF5.!gP,Scc,S3jh$H:Mt&Dm?k:Ge]AkKa@o6b!'?'6p%/%!]j0RC'?ducP5AbD(qS#A_D_n7T>-.]U0?&riPth5S%9\u-7n<ND=U$J2K%lYRr4S\>n"3(*Fo^/&[_Hb*j7g*8-^$q?tm[IZ/YisQ:jJ)r8I]ND;*'7a0MJO,M3=rUI/$^=KWuQrP'ABk[%bk(2pipQcqnnpRNffpgpV.-Z)/G/\_n$p\+FFRO8O':#M!PiP5E,[0Hgr]MgFkk*n-1O(,P7R*B?#_74*Jt?gVZ(>2h0O#`:C]#<%K*us?V<N]FO:R\79F`]9K+%M5669BuK+#5f#4/j6n)-Mr\<)29V.2>B\A*Fs_Y`Zdnr\,G4ZT,4[_08cq/u$00/%d'Ig=lG3lfa@%UW;#j[_&+Kg@*du@&M<<%diZ&]6EukQh-\^OLhX9PJEH0]1iZWS6,5s^,1#@jfi(\ID%;[kXI,_X.O<sbNl?>0.t!@`T?+BS$2g2%EHA\'qs&A#p8a\;Zg45RO8<7DRln;?mNl.=]T$$60Zb>/EX.f`_'F4YamG9`:AN;?^9`;p>i":S\1k2C5>qL&Of]WeVWB-%Z'CTZ%W:=]tT&Ya-0qKS5I]eKo@o>uq=[LagP^h)(Vt%6FIf-E4#PN>Q[GbT&i\O-YgQ(jcT-$='Gf2"O`Fi#22Q66EDa8\A-7H]th)Le-%/*-EcfkoA66ZsD,i^EC__/@_c(_:eZKAGZt[lN)X%X+>lOWEdH#J86sDUTKQPM'fEK,q_6TVGdH6G6ujCCdODO&-U9?2o>pBf'/K%$/jVp<W"JViK-E:npEGS`XcV#F(gM.4gF$-1rc`?Np"c6O]R(Glm*M("u5O.qn0SOqu5qkP;DI=4*Qn(m5XPsjIb-`hYCXO:Mib6%%W(_sg#f&'"T-%s%sb':D=2V%m;BV/LR_;tFPrQn^Ag3kNkTu6qYf+%RpQ\mr;>rCOd0X&p8p]*JXmA/Sg:q`1GOqR4cqu*@a2Bs%NK8Vdm29kYr'30edW-K1h!n+ElPoich7J`k45:IXbI:]<Z@1L,ho1`W0bf/YYNed1"En?VT#OF/#7GQKc$!2Hg])r;YE\uplla<+%)UBR@4K"A<eFn8gO']2#0A^RY43==C)@a`Fma!&e.m8>uhCgem<YiT8iqm99BFdRl:D6TK=C9fAX_(@g)ZHQM29$0f@+<g2olo<%%s1tZ(8(F;WAQ940NIt)<Q]2o-B3RbJmArn>i,'NX;9A4Yq;'`c[l5,`".Q:\aI//L4n6&-J%n7?V[bq^N_U5Ze(Me'icb.tm[)Pg%j->.$XX>4Kp!)g7MnAQieu@(cJ>Ib.\D/:Y8>jb^)hUV8&7==%I0]Z>+'T/UXRc#<Cp`GR?SYWB+426'oc>D@HGM%[?;ee8/NDB+%iQh`)q+M*E[ZFSIh;2Cr-QKD\1BdOrne^\%rhAZ@9=jP/`p5B=cS1SNlCoX[)Z=o1qpYKi0V*Wt,An[)m^S:(8@e<dK5](HkM>9J%fYQ&uKH<Wj^WC$Lc%[IPHXLe5+7O<,+PW.eZMLCdOGt@.NlR2tYqgfZpp%G/5'o"ZML&GJD#60gD;--Qc*VDdIGAir2$R_Ie\,f8%jIku_'Y_o+B+>:+k>h:HF8gg/G>S&E$K"/.qa2f[0/YAaSrV+\E7"B';r\h1J-V)&T^a$Z^4XGW?`8UspBT.Arr)!AmE`7Sj3`?h%e\,&LT^_?@_Im5E_RBsmm^UEK`S14j<5-b#p&=*0G[]3P4@tip*?N\Dgi9g$)(uJ64<GK_+lgNh$@u!Fn`!\@psOuOVs!MnC/agP%W.8uDq3O<OSt5oPeV$1H+3r.bmXG%R$_-Y+]AG6]gUOfde"<>hk.:87fhGZ[C0rmJ!YKF5p<n,BYi?_eAXZ"O-0NXXhtls8AVQ7#%U[@t*d^jk>%<-ENd)Z%<GA$*^fB6f$a9S8.:QB5*^>IpHj!ETBrb;QD.#-BXp@Lhgm3onr$eVGb]0kV:;s-*k+7IK5?/&HG\G^^Y%L%c8#ZK:beqnfVH]p8?RAo1Ck1qPaEf>Z;=(=&LNrlLM9*M#9+GmSt:jV'%W4ScK2@sZF*6beP<FaOcModMu'Sg.tMq@EtM.<GK@%['q"&hIpUhmYfn)>Ze-'$rO[lNq28'+)\6JNu2H2GS&X@U>KUuK)'U!nD"b!H]XTf9jTl:9:rs0YF.<8TtL#rS)nj`;SPnt^sds.%mlpI4gSp$X1msEeJ%ogh\eba*7A'RXf][mFh^Q<&a$prKq>IUmA2t4/djq^IRo_T]rG;-$Kghc.h-SmM^KPMpGJubNcu%%_43p)D%0CHP=]@^Zh3:P5L,]Gij43+[t*Ts!R=(K?skP,eFESe5Xh)_dbk@C'C1(bL.k6k[gqdYCFgsW]jZI&&8kP&@9I_QBZ&L+m;<(&D/%g@@Tph;0RS0>#ZU]drQlX`IV5S(tH=8X?O)TW-<V5k]c5X%CR^d&.!a4660Nr#V']Ha(8.SXo]oWd`_Cj0uc+,G$^f7Q02=:lIV(%U66<='gCl-]k?%jH^`sSeS'5Vf5l>PH8.uTT#;35`+/Z3kn!2G'-Z#?oGCd?3P1;e0/J:MnN1FYr@-rK^leTjJeK9q@lT&YJ!KXi%MV=+W]3Qe5jd8N0DVV_7[&:e7MrV1#Ck$rD]NndtmXg:+=4[38m&0Ah]FP4kAhr'h&BFcggK?'hFe16$fDYC<%sp]=?6#8*h5$Y?%1%=P5#<[?&4B$_DE]/9I&<j'Zi8OGQDpPRN^)M'M`9uR\@t^:V(Xucg8`Z#3B_K7\6:9K>\b]\EiK]7^F%;R`40U'D1*quKejHP$%2B@%>QZ%$FdhbM]X8:)_p"OQt'S7l&hL'ZkrB2tLZcTj(n8.pl`HCuFp$E!%,C]=^\#Z-=/uq4]c>NYeeWV6Qp\/$qHhd'A.L4H#%rAXN3s1jEi#10Oe1\kYRTDqnehI>^kW`RJ'c."\`R<[c/<,(GA=$<dW[]ToM"R9^">E-FAC-p`ETUdu12$Iq/%=%39c?`iJ:Eqhm%lX3tq$/a<4j]^Pe=UF/L`HDpIep?Uccg;KU44T<hPO`:nDPsoQISt>?!Tt1,UXcLuHQ'_4Wb^]X:#sF$[@%5)],jdENDkkl?('U!%CA&=6h4O[iN@=@@o(28%gC"Pq-bfQNjAe@F'bkLma^,-Qa(a?d3q.IDn(H#%(;h42VQQh6J@E3i7SU;@G/E.EYuc)5<BCZ@W6*r#%3jkZbX_p)Kf!&<n<dAjpeqVjl/^4(2G;n"/]q3Fho5<Ud<,8?"h<t>^B/<k]g;(XOj6N]<$#^IoVRq"D1Q&3D2:PT2HWifSOn,p\%'&LJ\HW,Ml)4c2+^6VK<lX<DVmC]M#9#ml9!TR^tWg3OE_6CHgmj@/>,(>4mDN`MS"=3o.@3k>V<=ZQQ,#:u(Z4b5!Rh*j6>.c^N%iiP+udjj=Yp;*/>GRN?T%ebC&XfaM)JV)j(<kjc'.0K2G.MR,c[DN]?UY/c(_O)6d$fDM:9M\YmX3J&:T'?<V!r.YjRFW,XZaj*G%I<(cl_-ae$)_9GG#T'R1GAAT1MiC-kiS$O^V_CU)BJ[&UY;]3*@VaHh[X@95.7M,@E'a&<"Ju9o7_u7+@ADGO%C*)-YU/dk#.?8^%"nCCK&I].P8C0VlH/!XIVI43H54*pUWAal2)Hd/;NP(0VfVpS+8Vmt.VOCk\b6rQ31S%"dJ9)t(HEGr$%=2T]!q)%i9jcJ&;^:b2%^K"_5Va!uVrpT@@M`2dPh0#OJ0Ab3B^W^S5/gl,M.7/Lp;W@9@qW&Q30n6mOGY?KE(N2\c.LQ+S!lr?ngZX@hObKP`hDD8:1#q0Y%>qQ1Vc^WFb/-(gr1+^XC^:CfS\==Prr-H%+f1_/_g**6<X_teg%m!GcnkIjs(=;CjrTpo`oBnE?mkDhsobQoK&$^%;beF$0qt?f<%[pHtd_fN,%rFanJYb.;*!spp3!pa#CF$fV;$f%:UKiuUSTGOVJ4diX-frhI2=<$>=)UOptG<Pe6OV_n<r07<Q[b5+X;QF\3ptAOP%jIE3WThVpoCQ7(R$YC9B0$=ptV;GMc6nd..[7<tP,)Zo(/U0?RQI[23Wt>l1`OA*e%5uVnG6cFmqfDIZjlcA^G;iekILej1kQA0_%V?-W-.1L<<7^T97\3p)+6,FZCM*[CN5*E`GC*F87nKZD0V"`-`WB,'BXB)eVn/U&R`]kBj.I08Lf<>K@XVO1d6#7ZpOY2!.D:tqC%YCRGA:(IsK)p#]EbGK7oXU`PUm9Y*fM=[F=f%@2^9aM5Ho-"sB-El^U(,\Vdg@qJ$JMKqoX];:cs(Cdp^a$IKK2Ks>RB\mn04X$b%m+0T_C[(9!0A:d'52,bYdct^A4_f,KHL[0ri<=IU6:)e'MmEuSn0e#T5VNN?8`BmD%(qtC7fk$uR@T"l`*fnh`s+3lS`T9fn*Skm%`gSXIZ/jKHF\^Jd;cT`qc>l3^&D&/i7r;7)W+V<!$p-k6UeBGjN2TjEis]1U$=thu@^WF4\(!lA2uo@7C*i8/:DS<ZNe8lW_+diM%JgB#]jVXW+D]f3K3m"o$Ub)Hf;i7]^KF,k*RY[+L72G#!5Qq49pp/5L0bL3<E!#5'-g/%iJO@C%O'O(J`2IA-3%tITO+VB(Ws-tL%8E3)H:cEreZr#h7Inrp>0q8^rj2"etPe90qcDFJ_m$UHH*dLir$O,JC1DgjC'@BFH\=(e*LP<#S_R*4hE,l#:%@PpQcmhW9/lN75%!&mX8%KAu#YbdsX"u>ouo>P5ARsChiPYU=\.<smUXuMq$^fa-YT'HHm9'A8hm-oKCV/ic4Cj%Y#::A>qTIF=o<^8,''el&+;="DB%(6q1>N'h3?FtL7T_*m9=[qQ9RM_H.M/SLrA!WNF]gPlc"A&VQ^Ml+I^\UeNKgXW3.#kec<%hJ=<KmL/VeTj(Q]&,XMNd&/'9s63$%G19.'F[PCP55=*Os5]r9Id1DbIdksu#$e,%[SZ6Js7aS5j_NcLmWZG;[=A#)T>!#t\.+`_No0`GJ+_Ku5P<7lcTh$Nf0Akn%i!(>%Ye4E2T&9@eJ,7mnT)%'cSpBn-O$<2r_O1U1IVWoofAH2/TDA&eT6TAM?iJ8>hu/;;T%bsU^>uK1oDO19a?T[a,CfZ)DngcR//*+A%e!L!o2nntPDh#s6h6S#rn'Z=%dh*T?*ZbRpNOr]EAWY*N,Chn2P0kon3@If1r/A0cP,^Gc\tZ$.qPF'p:eim.LO01c6AkZF1=lk^%!Vh%>nT8^X_l:kG/=df[_%f=9f_oc,@Vi[g"HfYAPhZWTT`e-V_%9e#&kZa9&@HY_MAR'r<Y(bZPL-+U?V<"@FKksL%LWPEKV@mR%_$/;nUnH6IX_*@j618,;bWd3Li;::LjC^\sm`3?sh%sRnp4N'klH=mSrKZZk.ma&dm)q]A^RtHa8G`(U*sYO;?Me`h2".go#>OMj%qf0t>m^4,A:"t-hj.PYjCEF%TVZ#`!6.<0l4rcC2qpCIWVW4lkQT"fGQ9H;f*<$rW*<$rW*<$rW*<'4,T1e!QHF<P)LOD/WT1_>E%I^S8p0#`:,dJmtG_kkcl48LUaIQ4&$@dZ`DoO!RUfF@cq;a9tBs2E?GrLj05qludc^X@P@:pdtMI<hZ&^CYfR.,(de(CA>VP`IWa%UR,>:"o;JQq9b(b!;)OX*P^aj'B!s!2-1m3nqs2c<?V),'0"]ogDtL05(2T7\%UqDPLged'&^#!^\["cGIkJHd,*0t/hk!df53It%*4MkejQMlLCMpkeKo]!!>t]'OXKO3M%<bZEVf)W:9PPQXr2OO.SSf$pQEm^mc1CCOi.6*dm7je!B4JAWBK:M+g8chbei7^GZ'2XT%nq/I3htVg7r:S)Pq8=X%q=ri0oZ-EF_p6[Qhg"J/@tkml/jFg`S_i9kr\knrb>3TdbMW*GJ,I@%J)`%dr632'HM8A&k(DMPY<T1j%!T?h<"3K0.lRtHpYMXZcq`fQ+-U2nQa$4tB4(!L(PCN,*f-L[Ce%-HJT'K0N_cq&*n,N"3\%_Uss8M9S07_C?5C;gd++EsRO8ZtC%hm>77S\AF,lH%AR:>SPPDu]Nd*rY@;5C3$90>@("oQf]?(Ol)EO.Q.3UEB@"m:#S2P?5l=3dTnq[sA:fIf%$TrT7&)5k(,:&$5B/%B:et^B0Z=K>6E_dYJ&qOgjrC`_;q(Lo\"0]i7SoGE*VS&(S:TA[m'\_2^O*9Vke2M]s?cW^[Si/55NMG4D0=;24j]]2]mJ:YKjCs%T"+=s7W;;Li6Jt6iN#a;qgoD"<I*QVVnV`lhoeEWDEJ,METG7UGOeDAro#O.f/#(mA-2f%b:gQub^]T7T>,i@]'UEgMke=1E(@8'%qSY=BoWp<!A?(+T_lnLT*?3h;PCOuFdEUO)f7)ZL:].[N6("T`^@RaW^1YdpBEApO\W&WHRid(Vq`cqc#Zc3?\aOt:U"<*;?ZYo%%7ughom2\Okr5ZPAj6*NUJ6r0?LL9kH2_?bn>luUI\?gV^SWA0aBhO<`MW]KeNK:h+0&-KI%TGFD\adH_ro5AL'jc.]h]I.,HH2R(%U^EU+o>q=SIe"SQG[R<<F>Xdsq)b'mW)1#83g/pt!*oAE>;#/$%EIFE+1E6q*F%Jn0>6Ug^@HoK=cP<U\0%XOGPTdmnP-^b6XTcJ%ZS,M)dYlG#mu&96h38G-#*@CTRg)OSq=M.G@S,%pTE!$B5Q.2%+B/WF%k$i68tLP-bMRfp!X4\!msk/lo?"/ITm/qE]p4u_Q1oai%gJ:%PWXqCEl1q6lrL*EZas:um2,L95!"EZKCn1Ok07ET09i^VX(]O<D?i'*[)hE__OG[?K(jd2VG41'EI-mmgUOg\0;dXn4_0a4Y%gE\i_m+D!6p8'^\n'g1l^8[Orr\m(?^,IUN]<7JPfo[ef^<%$pJ('0:o*oNWj>rGIqo384oVV;ckGG:+6O'HO'=[cA\)-]=fMoR-%fh04_rqTd,#(<tO:o>%=>R>)&s5C5$IeSWD4SQ2FNQ.@4Qr\%;Y<,H$F8sA&^AaZNIgGDScJ0)2Y<-?d+Kbe[b5BO(hu1pB5P)jt%I,j,a>sG#fGJ%`!_Gf%6c5YX1`t/+XR'Z.W/7h]nqI_bTH2X5hp<H9oU,;8oFLm=o*h6D;9<KWm9Y6H0:ikZ6XsP6\fdfha;O(bD%S@nAL^j!;pZKm%@*'&>aQ,g$shMD?t"BSIu+"-K;;T[Y/;NGM,!uh$r).teH1Ck#:mF1#R7_74Y*[;tY1^fB4"8NQY!hQ.K7(2I+%S<"msFP'ge&b)`ek)9-CFb_,.?Foi]('Vqh3f>6#(\m4G0$ej;.ji'8,o94d=S&k*.L[lFE;4XrZX/m3Z28sDjV@W.^?&W2^'B$,%I+Ok63NVbZpODG,B:j\4`>;m+rn44Kon.2=W*&0:++3UX(U`kbMbcP9_7/1YgN_>brj[=oIIRPLp]G;Rq+#pBmLHo-K27dal4cGV%]LABX?[gu*k-YPg[ruW(<<(YKbj,,4>obUHJ"[jK4W]RJhCA&g>+[J3q=ZJ,lMti#UR(Kjs7h1u3\S8Ge@RQ&rm5D-N1YUC.WmYa%i3:MMcb*J]oX=3MXn;0#P&dB0]N?%TqL%``13HrE>j(53r`lJqQD^6SHMRT)\GiXDX/P[ORrP8hZ52m!ca1BI/%s!VaPtP;&)p4]%b;o0E.(s70Q!W6GV>p4G<I2tD\0j)l_.pt]ApIAh+V4"1X-()n,V_OXY>nPJ9K!P+E6a<4rgBj@DuH9f8l(tD.j^_7pFdu783H[S%_`CTlSnc-NSLXR#[P`g.pRZJ+k6\8q]I`Se-YE1PT1irL?$<ErKI21Tr/?(+J5]1=3\PpLT$*(bqu>=jf1V_lRm;n?(B()U)5f:t%f4U_^XRj;AXeti`7t5&HkPP9tdA"otQYjG%$f<JTp=sllq;&Kn:@bM/HMe"OS+4Ai56#9Y;g)0f-hWK1I.<&kTDe"MJ,8MmTD68.%hVulo].Eb^^]0(=oLFE'LVNjnQ#U&^T1e>q5BQfP#Nt^crAf;[V7U?\E(I_p$mlM&i&uh2png%g"V[OXRWY<^@O[&:\_ie8I2!&C%aT#?11dcJaE/;&TEXLZ<W.r'Rm_'tn/`19Z;"-]u=I@[rH\15GIhcI%P3;UA//EE=b'2p&ZG'CKWU>WoY<%.1psiFf5CVrKQo_R.%4+?k12(,T>m^eT0:L&8>E=:DDQX>%9RM4</E9!pe?ZYh`Vf'0HjGBpu?"oHs4F4tH=.d"j`g^nWmIo<'\E!;;DS>/o)m28Boi5'5%/H\+Y:!F,+hg50jVsh@Sjgt>lds'XY?u)o*AcOu7"j.hAIck">](uX#WNUC!FXKp-?D5]K?3L=I\`5;DI7%M.#CMsY)sU\+DncI+%l;F6EYIqFN!nK7dH<T(9?>j%PMl3hRp9$JpJSE?')ViA/h!gcen#CFf[C5o/:nR["[[&6?HM_Jq32+0<oZCsP]D8na[;Jd@cVIFq%pe[dDgBp2AhfeU6="B9I-?$QY:00e]X,ioeBK]IPV?e7DFkq<NBN1l$aH]h6G;I%jf]"2*L')$Xi-CW^#]E@Gh-IL\3iV2PO'Ztr%%BrE"Ri_\5lR.PkcS;61%5`COCTbG7WhU2bNh*]Mf$g9`+%`fOfFA^0gI7^16)3l%4)\-G"#<ZD]'ZZsVH2=p>eoanm-"uad&=,_%Ts$J*K`ZPkm<@/@!T^IV!!khUUC?7&D5rAE.Zgl%>0-,L"NaPld/(@lf0DB8'@;$:6TT"#]ZmbNVf07Gkr[gd.6dj$*lQB?jl(m1%rYe&#`>IEYo'.aed0/Z/h5VQ@<ZUoR:E3G:0.oJ4mIa$6J1M:i/GWI4DBqjn=baJ6+NSao:p2FB5j7!G5a60e9e)kGQ/aoUs6dIQ%VA:HKhR6H\;a]Bs5ir*4)YH(9`UR^E-r>tNGE\p.Hot-kHCu7eT"=>nS]\dVK+li=d*m3jei1+TVkLiuDP1qKn@2ea&a4A8??7'9%Fk)))lgE5@*<6*Y=$<]KIdP5rTF$1M"aAgCqlR>t\cHPmR:u`)*WtQe#%3^6\b4NXDRgY#!Q/G[_iUk0k/>C-Y.rr8)fN7c\sa:u%`XYga`KeK.N=j3l?$V-\V3=0**!O,Z*Q*'OhC?_G1G5j2-3H?cp9FA<V;oCP<dWSchVFq"k\_Q18Ul:+cT(KTeQ^m!6,4:WMjscc%kVfuINu*@S.o=l,ds0/11!el!J"\[@qFDZ5RgQf&PKQ"$bp@Y0i"KdTdD6.mj.gm[e[;D+PUXDN[os3f8oD5gWZ^4=!Hf*tL"LNK%W7A[u\uW8Cc@bngI8(fEmMlG6-k1b^_Yfid"U5`N3;gC_]?9O(?">nNm08=&j*'6\p?6gh[sN(7G(+m`I'C5bp'0ojP:j"V-BYq/%[D2R=YIuTUR-A,LY#-^X"_K[]rL`8&(PMYRrnY'_htM"`pU85p:O#26g"2ep_tX2M?U+JX8,qSphL5B)1\2d9$2jFUp6k="^Z/,h%ia\VWVpBeZT0DrB+9%J5^FhZ$hLQ_Se']&En')AlpuA"G_S885pm42Ekf4`jn@.hDosGoKgdhon]_:amqu;'7TE";Zht[%L^\#'4%r7.FRrO!T^,jO'B`,P9KhY*jsonh"Ckpp-@g/n:HZ]BLp:Ytdq8a5IsT#bs:2uhfg%tEkcO+$7cO+$FpJ,=e@rC1K]ik\m6SKHV]%+)gtm%t+!k55"-7TDF?CoDUuLX^Bp%j)130eBgCnESh]WGgH7Or/m%fq#,^7c<n=61"KZ\6LO@!m,6=c0E9a1*r*G+Hf2$@G5p-&%5BE16XNPKp&-lk.g!Y<CQa6.LI_J+gBL$i[>PI(.eC7TM7pBj+-s_#LWOj)f)]S3+<FM\oIP.T;_RZeNk-dTRBD+d[PR&NO)%MQE%LuH0fZ66B.4m#%,'77lTTRQ5V(ZJcC=BK\@<G]I@"pS=`;DILSEgHPJbra-[3Cm]4Ot0?I7b8!hr&r0?b#%[.'au?nmd2rB0`LGS%=^%Ud0*LN_Du@>sCjru:Hq@kX?%o(Dp*e(Xh(%0Q8b7+EVd)i*c-+RHe2AFiX#;(G<tV5`"A(H9#@S`R.)n%4j9i7..g'4QT=Oo/%PYCOPgY&K:b'FQ:061DT?@o<Eq4Oug,QQ/$1[nFN],/i\meV1o2o6s\>+hY'eo4X!17j"88^MV['EqH_>@/pX54k!UBEiu3/FoNG%MaZghCA;frQI-Dhq-0;c=WK'+#+d)/;V.qG:o6Ll1*.7l[nP/]9A:ph;Eg[P/uuu+.#$:]Q)W<N.fIf&C;L'#)-i'7qj?<Dh<=m/%MrB50Uu:Pa7%WP`[P?/@#[YR\O:[ZIJ$8bMpI4!H%[4bKRN1bS=RB\$;"-tOcq>M>4u84O0+?ds)[51.M[UiLK3/AmSqe#-'[Q<l%s1Rt*W@%hni2Ma1"N,r\HbIiEnVr6JD[ubZEi$#BJ[4.&qHp'LN<NqoPMR+t;4<B79C3SFV07OY;EV\f9$k6.[(hb\mhb?r61\Ds%5=h5e9D_$(],TH7Ra0a9IaI`SLA$7sCU^Ym1ekTUqk33,/aWd;bAQN-BKCT>ka#pIBGqBF55[G=3W(o83W-G?IkFauI7X)Uh+m4K%e7cVHj./i"mT3%DIjr`^7J!?LpVfaO-(6JVg7?Z>1!s;ZbngKL];><GC#:GcY;GYD7IM`us+R3C6IGg*d(<ZW?N<ua*'"?jN_XU7%^&7ZI;`ENSe#APO.if54r7K+i[l/@<NK/u.FZ&!$b2e^=(&%DOGLu>#k5>)tHK_'sS^5LiGI^Ke0+jC37us3U%&_Ccmj"HLr'-g$%o#^oZr"C/tht^6]n^K;RaZT('r'Xg=ot]HJra/J"pph2JHKh7BTDS.Ws7Q0E4cg$$S[c<PfX#Pri@dFgS8pD)]P6cDVnW)uq#ufk%r:1NGb7?f1V"+GqT>10VPE.l:goLa9_!h*.VbQTjqtZ.Gs4_nmi#)5:(AC5r6k=b=KZ>!5!r&4H3-4._h84fq^^0kSKt:c]n!BXR%SU^!?gP^3GIdDIG'Va^1n]'(r:YK1%n`#`CVqe6@b>1PJq!rLWpD:]mc_#R^I.qdQZG9u<eAG'^](tC*-U'M8$R"QPafb5r=(iLK%rhDulRuST$m-(FBp\eaD919sP>pf[F9k+\s=nrD\(]X)T6`5rNG56!]J+]%Y]76FMd+D&_NuW)\I,`23aG/%P6"icZPbFXj;LuPr%oL%MWE6lL@g9-J(l?EC+r=R*J"sZA!KQ(WVSImKt#p=WmOWRRIji+,CFh%@8aUeAPKr\@*rnNh^L`f\ZH<o-l^L3hSEmp#gdB/_T%C)?p2lT_eP>\tCJ'6!%%Ct0@P0l@opnP*Fr';7,l(!R8rKW=Q>9UhHt":bAF>$8hKfbe8Pn5$dtpLP+F2>.r5B^VL?lq]CuZ\()s%TZKLr]_L9CSp:1lo8DIpb%DbX8V)^':/U6HT8u5-kNC7"@kt*Y)iN[Np5nolhtcZ]DR\kp-H!ISe;?G/I_Fi(lfhE<N,OkCGj`"n%7I\qUYj`%e09\6'7mjj_dU["Xp-l3lp>C-2=5M[^>pi4#/3MSld.9G`+^OSF$qn4FR*FQ=,fbb9O(C9_I&1N%a07CWY1EYe#ncU?%V?rm10nT6jGli:^!'4g(+*ZZLP1*\iWLb%ah<OJ!dQWg;=cq:*WsAn3nT\bp,$U!l=PX!*JB[l2.6c9l+u&iu]+Q!/hIfVNK9&4`%8SmI_:O<Wmb@=&fa$Out`8s4I/P[SOfmEil++.<b[/:TZ=F)4s0\hGD\qL1fI?MrP_':?&Oi[nC5kAOVrcE0L`@hh1mjFt@k>cck%895)S@38KKDp)gtGbAV!6a?Ep<Iq(<;$9TBK@L,@ME[J>:a$Yr:-*.p\'L8l6@="qN3pA<@9Igh6J&)4KTY<+EZ#DW8I(L1jocdD%$`jB:</<-&8u;rrl&aV6=l823j\+iq=eLF3q)"^ZaTW2?R%@;9^nG3?MgngB?AGP"?MUAc_R#m7pnR?U&$_bs6hjsXZ<i4AV;!_s%7.BE/eaNMiY5Rig5BtguWkNT#ZgRD0Y#e`bp>L]&73d)UR6Y,/O?F&f;tIP,rZ=4[2#Q4Eq1eKZqk*%4i-0MC[;UNcs0^"bms"N/%md.%I\8^i$cH___BZ\^0K?_eWPA.m9^5IgL26lJH!nZ;HA:]*3Qg*KE4;2S!iJ%4mOkQG`:?i=_C6,(bJ6tc3T:?H\!ID)f/)oNU%o.kNa_?j5i#B)31c5d2rBNr&Y7,W?4r_@uVqH2@RXr+b7KE++i>R\W.,Y=J7GWnq8E%r8Q8ns$VBF5I^5gDodU,A1n@a[b&Z4CbP%%,>/!oL!A_p5(WFfbAKk&k4LkP#K6fUhE].D+#KIdlGjf=A,:n@u#UW,=SQ:hZl__HorXHqd=Xj6dYrV!5NcLAOK8_YeCrnOWm%9%2QUi8U0)8C>ojlPjGZV5#6/*sWYXo(<u\Cmefq45`)WiY!u^=aj*3no,V9g!:B2mo!FC)nJ5DMA6q/(A:s@A9Gee[L,c_./.2!F(%KOd0\>Y>GM51.ODTIJPIAgqh/"V_VNTNmk<!_l7?nr43R&6M>"aFL-Q5Sf]<!`4d.AT:YYO91EX6I*WV*,R+bI0-6ATG@X?-R`"^%L2OO)3_BJ(V+#)&&\p&)aM8kVa8kjk6.%=dK2"tDp(SZBAY<IW#,&3j!"gM'a>YS'5*BL\CaD&9^p)5qK8:.b;(3d;bt"FgU00s"%5V<i%gGTmV+0`rj^2X9%'`t:g_]7TJSl\5tRNNorOMEl>-8n^H.*P"TA?k"p\4I%]6JMPO?`ZO4?j/7Cd9:)W69)udHE.`4L*i%Y%Uanr$^OXkO;_ZHe%7&SZ789I<"scjjH<<._">A$Y"A.T>%bLoI_P87%SE<j$BmPMJ"It\VMGKF\((g!eTJ,AW<lt$b;SZ"(b"/a#%6KBC2aHNDJ&V,hS;%^T+%]h]l)MX>A(,/<JQXt^X_M\HV>S2\61[I!&YQ2fkL!6mej(7t:@0d&ROW89f"+ihDC1X@YL]B[nK1Zrr%E'Qo=\Y+=4Kl*hhW!FQjC$B%@UB+Pp=dCoZ!b4t-O!S=S@+*\.6a_YYLT[Ba=eKolL14O8^t;4.L9)@CK['%_6no<=[8?9HNKld3%$WW^+.GQC?8TLUB!X^>Z:e[3\9_`:Pjn1`g[u[dl&dmd3G\s.u1P.oVR2/ij(U,D8`Oefh!0[I9e+b75#@UiEZccl7QB,r&-5InG%Z_,MZE0p'rD$3AOc5.$c>2U^+LPAuU9+VN_&:%0I.?^!o@%*=$W?Ni`8qYo0H+[:)B+RrF=qKcRU,dso[6`1nL6co^-n0iR;ui5@%j<Q24@7"(>In5]s?.($?UjVd(lu)n-'LbZKPfS\@\HmL-.6\8Y+"Kr-#8#goNe$*kc,[\XS-W&:Krj^K,GZ8li5iLhg$N%QPY&@l%S$?5H[@L#;2;W[Kc\-Ds<`uM);WBV_3UjNEqr'rGM$2`AV@5.i<>f".9&#(*_odW&d4lZ^nhHKb/sd0LD,Z!@Q+Sk$<LYm/(fh]B%$bM6nPcIU$MV54F$OQC>)p_WZf9PpZ<JZDb\"MN:(dPieR5%D?R2Z`;A"nPlR@+[J^tuIROU$4,joglU@Sl+ndIpsGAG+W.;6`e;%<+/gdA*k.l'fX`CR7&h!ROk:ma_#7KkJm53m-N?",[K(n.bCkuE/JakCZK1L#G5BX35lC?7$a*C=+#FW!.7=pPf!_?Vb8O8+sHcr%'O\=h+Y(Yi/G:%i%`KMD)$#DL`aZtE1aTQPd9,I[UX,.2idCpDS&DHG%GaJ>$))-2YsTm8P!^V=Yo<N?Oe;h+GXi5`edW`,'_ZKk%k`hKW5)tpVA\O8qL+/oX./gD&,om+h^=6/>97S8.&/&7m-/CEd@iVikLJeYaqN_>?TI#;&-q9:X6dRrP_a'=q0P<rC_'+[R7WGXt%E!]K4U7%?'G+>kd#l#k+N$\:]3%eWR<XC9E!GNa:N8V"CA1(J_MG?00PatJM%jV[&s/'Et'FEBEXgenlTO7efT6jk6CZJ<6b=&gY%.(],H>M*<1SZ\)kXgs5>K&+ALl6Z90>*<Wf-m?rSG9?tMBi'Oi7h_#Jk58KmQ0^6l>--f?ruSNSGAU-%Kj?_@Z-uZ=V6(_aP>SmX%4\2R3md=CVjgCO?BId\]Q+.p3)lutr.Qud3K7C-3k5f@37].1Pk'p`+l;aTc)&qDA5gb)qDn_qJAEN@H]HXK0:[5XmI:'%Cgs"c[%&B9)9\c:tP5bVkeSKREs=A!aM?nmsF"t7)/\kjRR.9e:=[::j^`=j4=(Q*7!$73JjD6YA`?rE:pAHeoliFN@@6"p<N"eebX-3tKT%TF!'qAO-\Z"["$K`CR"??]cTO>#R!H9*p,;7Wb'h_",/L*d"kD$)2?.>:7*4d8)KM'Nt%C+]4O8j^MU4-0i9IM@l[i3F\Tsjo=kV%L/KG_s*7eD%BomfVT:N+>?)%W$=nWg/uF0P+QPC5\Q+o/)@Eh[ekiDu<VrV,[>Y?P_90&n-0<(Td%V5[RLE.fZlp;h1k?AZ:%>I#%ad3c2Cr?ID@$0&P.>"4s,pXpA3XJc#&?*T/WATg)QRW,(=lfgsBs]?7(W1Qr&!WcAfc[qd%p:$m1N<:_H9a6uSA'_:A.-hk^F2ne%JsXtf>3uqoT#J\fc"us62apW=Y4IkJg'T9"n01TrC64%6S.+n#[O%_l64W][:92jlH3K[1"IbJ2iV^SJN&2Q2n?QK5he7.(/V`bL%[hor@mTbReLoK$q_/b^mlc9s![Lp"`@&bR$gCAJ@._Ml:(?)D8&PJHoN"uaD]3le7?[@@u!0N@WY`SDfE-JHgL_^CYQo_$79ehf7%((@MlP.DubQGY5i>%DBA65XH=/XF"'Cu2d4\A-klooLBNN*$;A;Io_i8C/Q"IqTW/[o!-`00Pt*T*6IJ\SZ1`d7I=B/kl_V?lTRe%%6[*e.@_OhDM'Dii%NS$q^V)hPn_S'<!=o-OXsY7MR3ePW_f>qcW$nGf7JQ&68cQ_EZC0r$8iqX5RrBGo*m<bMpQq``mljHp3YpQ%Uu1Z,Q%/ab?"j:Z5L"9M4kQ5>i$M.i^nRaEaHKWuWNf>f%D,r^H\#E"JQ'e?pg#NQ63QEm^=%pn&^FDdk!+PY3e:njo5.bf2"rgY%$BdHM`AF/e0P(A=9)Adg7=Kf>)[lme+]`Xr9\jsIOc"o?m2%d7d5:rV*&&eJW'dF6PR,1ob/Ht3L<Y(#pIZH0:"a:@GJ"M3I)d#]%nquWO4sEABK!bpX;TSA4FHn@5*!r$\0U2aHUUQq'?jnFjD>giD9S4K9!=iX0$)a_`V5b$Z$R1(O6_8X)Pt1m)<iC\[1l6ffM%\4-%-2Ta=@8gb?08X$+``0#B:LA++hX3Gc2;G.Ho)rj5]SFM8gt8'65i1[*.#Cs=q+,W*[\7!AQA;g<I0k#u5"UgSMT'*i'?S$'&UgKT%,$?<e-H\Re^`tHGo-bfR\j%Pg=/^/TaF1U8^8QW_m;8cL8[EX@^o._O1)OI:Q89640dm,pT^>=HBU*k:@%pIOFinD0HuN3U=W[l;%CqI?Ii#-@6Q!u.Y+=IjsMJ4K!Gg_,Sg/,r-==f/ik/@ZR_r_(3U\,kq3D]hgC4.piG(&>?/KjnO-<a#>?Jn2f>j?KtBWV"0Anr4`%C>'^e7gUP_Gfg1Xj:\TC`bXX1OuO`jU0$"<[]W`aZ3A)pLC#k*nq%)-YW4"sC6V&8gr3#*YfI7,mBC.cLc4$GAW0S>D::?oL'/)6%_cb1-\uHL,;MmhV5eu^jTNWP)OnP*,ES??j<K"Ad/=3&0GM`M2!*6n*N3(=q?@6NTbJqS#;Ue/eMKKX#1.-T;3j"poB#]@$0*9&Z%okIf]UjZ'\-3p.KprQXL"FcE7SP-t\2:=#fba/[+Y)ug5[ZSeG7e;II^=iLR$U5'=dchJ8%We,=\-+eq9Y91N\T1-2C\428pg+Ha%m.,`T[.(.K]FL/qTW!]\3``<fO./$.786ml562Gn(#)2PnDtD#E/nO<IU<=#g5P.R=ga.n$8kZb3gS".;e_TM278jpfXDcXTdDN4%0K`kl:]s5_RpA3/&jV1n!jU('A\g>K5cT?b5=!R+s)B1DGEFHS:RXW;khHnV=qLslQ3R@Wn4uMG>X5)U5SU:F6(f=E^O=/Gl9!2#%=?5Cf?>-.W^d=hB6KeT=O2`D;?3%XNJ]U%L=!a();tA0I&C;_;+Ghqjmudch$j4:NXPY?(6bXkmY\6qr"U96T*(@cq*'Z?T85&$9%h2eErZ'6Q>[%:BW,t%dIbT-nj"O+.?5cH%cH!tEPD6"tbPY*GO_='^28G]7m7?PlK)os3,F)%5m;RN$PpkaCc7A7^cPf_dO6%8lI%6^&/TT)nS8R)pEMcH&.?)8[JYQF<Qf1^L<n*Ph/D`e=G4.F+jg-'1$k8s@4rI*96%0NL``[5IO.Xe]eK$@P^2js=-VLu#`gILIQG%c/j=W/4spW_o[%&LTAGVd51s#bRPH+lKY<fq8Zt?U.J]YfhA-).U$p]>B*a22IM/"Z*.QU,pc*S/gM\9,Vu2%P]B$Z<`q@r*p["u%.LrV4iMpoU#3D4O^+0mWjE`MNbTqAX#X>>mG1l+hRnBp=J-EpS?S?@_S./\&]r:HO3?n(qe[;V=gnCi1Zo&(tCRhS:>[3$H!\!C]%.0P[^.]X8Kh%+O/R[qrN=\[cM@]:?OH.\I9fD8%hc_F4^:Sis5MFL%n<)KeIV7fag>^;2C$dc"&g=#&.)Rtq$;B`\=%2?Zr?HJH=%THQ&F$@H^"r3R#rV3Cj.d9+&Kc'pRKLME&R(ea#O5iM3"<qgQ&qiHpQpc78=B2c;K"?LRWmHctI^*qHACe7-`>,>T/,&blQPdWs4%>Ul`9&o(r:Pu3E]*!muOnk&cCE8Hm6YWJAa08b&P&t+@5bY)p(F>gSB>]altE^d;Tc=_4$aj!p3HZ,>2L<o?69?XH<mau\m"1+E?%rt7)#1?3G\<*j@Cf$]t>p@!5L+3,-n0nAc=3K#n\B/mQ<_=;1`-G3B5LC6V*&+2mjPN<kJa?i"K8bEBF.G7rW/p.C8XJJR8D#'>K%-XunR",khb5gWPkfb=q@jtF0r`;_H_@p7:4Bs0QSfK/XQZG$fr3D3iu9u`'[O?Lkt*PC$mVe">5Sn6$dNOftJV;OO@G$!b=])4Y[%cqn!nL?_YDaU&#.))P$_#QbLX78A@fqI(edk>3/pE7K[%AanD]S#@qNpQD=d+:clY(J>`s0h`^[UUfCteaNGHqFD5H@GuAd&G:l:%M\^b,r5XWjS:l<U)?mG#j;_TpS?('b&E]t&6[PJK.#EkuR=pEIrV%ZMD&BQe;X+U[,_ri8_#)I9a`*,&M&2;f+K"K*E`QqpC%kc2%M`>?<m8)$mE2GXcBb"[N3V\Gc^(=G*96-=!dfDLZ#/VTmbg;fc]Lr.FLVf^qR3@GumRa:^\YKV#"kRQAT<jbMps>uWU8^s)7>uL=%Q7a><9qM#jo;Q*FW]_t83iU=WkR%r%KZIkO"lQN,l=m\GWfTlom`0hB1ftqgRW*^q/NB-4WToFe)8*s_;cU!]PDlIMLV&6Nc+$4U%R"I?X0O>=#6VDlZiWZbnK".b'\<7YO/q:8]^KjI+%H$(M:T9QQA1<;:co=_Kn&(_W[b>-2=CG!PjplUZ=\NSi5qT)@PJG^l9kN"8%LWc\&\?'F<oHeD!pLR,_9;;(r0JC4-UKJ\Mp4`-94Nh)n/ESIq)9#`6I_R0/GBJ"U]oXe^1PhN3IDsOj,Km7TW]SK3+o?[?;p7+7%6]:>RC)[p:lbhEKK%&ZQOqMC3'B`qg,ZB'`\::2qH3[)YCTrf9$1#ARXC%4&W'\_PMQcA)JW"Q*peV`Fre*J&p"!2OR!Q98=)B;Z%:^2B2ADkhm,(n&NQUnh/?ECpAY4<kf"$W.tBXAA@()aap/\Nn(+I8X,nXW9Y-X2kW$<rdOMs5b_'"[Q'!P;G!]]LI&C8Wt""l7Zt%n&s3mV!9.lh-U&ZN4s]+IM^^QP0F[AMu'6k9p=A"9Prt@8og\qRFLAJ&Jr/``-gR/eU7j","6;$-U=H10^7X^OfhgR_[Ot%#3fT$%W4uG^(!9$e<BD_,_-,/D@cORen.gHVI(KQAmQAL\Ts2";J(73N=ehGf?^kQt<*1N.atM9:Zj996V0$^VJl,U7@`"8nBlO<i8Y8N]%K8qRDN+<RdQ&ugMSK%_q$1R*h\RTD4pc_@!j]U)>gV3m3Bs(9B/?KeJC\m:`h1Y5a7"pX`D(m/A.Zdks:SHcB\"8GjTF4Gj;KMW=%IWRmkDpXb8k*,$d:gXWbJM[i.!LG8\4_1D4f[6aF=VW9*InU%YG]`=3TUq?UAZ-a,'T8Y5:>.7Xh\<!*N5RWiHlS?c8@cJZO7qsk%0,08'f:r!R&fdq&"^b9Wf0tV#?l-`']d7>cLWRA;:kbWh:k]NI'q/(Ra,?18O(/;AG(dX>$%RSFTEAe'j61>"$63lH"MXs[T`EO3%M\?5R-NueeAmq_ccN.][Pf[M_.UcCI:('c^Jn[V-/b;J`Q1uT?P,NF9UP4s5-#Q84@gGVW#TMl=7I2Er-+k7YdLaWshLXCs/tS2\%RhbIYA0dI<A6pGBBj:nNcbM/REYg%TKpS-'p]V#!I'4E8@jJ%U8\cs_nsK"C0cDK42_Zf-.$VR(L(^l<9/Yi)3@H[/bKIa5V%SY'%a^?#u?j7,V6pOV>,3mTVqCG)$TMa12*RM/98AH,uPd\UG1fPih,,uIl#O4(#.L+qL4B:5i5iIa`ECRhS`=g,+L=&pf;a$kX`Bt87%S/<"bOu^O<8mR9U!l*DU&Jnd)1Qmm>KiVQ25g'Q:s+:E2/$T/S"Gmg-YpGMRTELR>;PI'P?V9aRW2bu]P<LBPPX1LI`!)$_m0b5n%$^_%5_BqjFCb\=7TE6$\V(8i^16c<gjcS)_)]"k]P%Kfcag/h,#)AK7:-O\GnHcp"'R#QhZmCfhJl3<nRYY^?Qu)QW7T@6d4FZT"%W%('>8-V**fM<Cq(p5<9ObQWr/fXsAD,=2B7AS<88;KYTDP!07*>oQj1'_BR7+Oc!jLVYR,Fq08Q$a=?7$GX++T%l]).XCY9VmrY%V$!hDN_,1]j,0q5Cif\:d#Lh[U+/JQo`8&-+i1[pEaK]0!o[ib/Hjc'^c=jqE)"h^)JLf>,oeSTN'f/"7&"_3BGE(e^e8P/1X@J!%PBPf!3P7s.%%7W=/%&te6Z!>[&?9Nm[#/S<a%CX8lF@?%WR/:H-&;PSFijCok`:s1CY#nGs".t(?#o&Llc=O-on=I.g2KNr@5ekE%Suf;O><lV&>#aWjpi:Ju1qGS[4@>S5K#@huSb5kTDaFAl`ddUNh[KLRPQ,7bhlQ`7L]:tNq$@!P]0ea_s%UUbM_[Thhf=A5n$/PF%I`l&@2>=cp"%QQ7Ca`M8XHQ=9WA>j6UYFX/(,6r-]=G"Ls"Z4Zb[lmo@PO?dQG9q!ZD@VYg-IFC/A3%T'9)&CDo4s7/h^"MFrUF!%+9N;'pmp!iQ]c\BJ\&i[RuM@?_<A#5+`TQ5NL.'SF5RGRd*((;^Km^TGafWi5*J\d9cnPg4SN]j1Z5MS-tGNL<[u717.UZSE(jSp%-MF-]%9.^2PtpD(dTaZOh21]$poC@+Wm0"[.BM;<b832rBDf-0pW/*s!A#cT=MVc&-3fY^.HpcB7(JN'As*W@PKlLamY!AOAD=ro%CFtfC!('6^I07>@R4OpqSZ(=./bD49ruO0dg2b&-s&8DuM,"2gii!p&U;oo\@WqW8WVWH%`S0d#gc5Z*>a-n3*4?Ym0NAGB4J6.Y%`USQG"eas$,3@@JV1nSh0B1[[JCU<S:;nl/>>4TO&:Q(+67`AodGQ(QmA34j-h*j4WAjRK'#dQm4d#dU[T>;5P:0,A<Tr!3:3q$^%62-+CI5D5k.s5G[RG-;8@a,Y/KC+u1Hu%9+[4I,?[tg15`R0&?`/RO'<aOr5R/E)sS'72hnRN2K/NE7Q+3[Re9u;(Z(e^M\U@4'O%EK>4k-`$*]'C!pFlQeGD5a&:TI'SjXhii.V-1<@q,)K8R[['O`MN[q"2lRs&-05/tSl3ik*6W/_@N.nj=>j6D?70[@79\BUOGbCt%8t22uD0-+T=&d7PMh[s.3[I?\0<8\/Qh')Z<o,Bi`>]Q]$ge1(JPn5gRYV]9ah5",&9)K+,ah2g[TsQg68i,4euBJaR<9+U=LFNL%Dob=o._=+XPL-R3B!H,%"/>1!WT`'WB4[s%lF)MaJERnC(,co]:nC9HOZXBBC5eI93RFRM*=Y</.i6A0U'msf;EC\,E%FYgb(tqX%=MD;2NTCg+^qOXA7CkD('"D6I;?1F4QuoIHr=RJ#9WH?jNM=+Y\JUG$q#-l%<!&0O91chrPp;WMP@>rVRQq4QQ$&`DW2;3_@InMg%U`tRn!\/dONG;Tf\CMC_!b.<fAWj2?:d#6/B\JY\&'F$Z.0`f#2%5\Rj]ZKOAcZa,P8-Ta;[8g_!p.*C$$WD\emdlG->o@:$ru<O%<"AO37YUSf*c:u2.[[9NIZBjjVYajlTO,OhGUs<SW.:J/c"@A7TK/D^#\tTkO/H@c#-lmGS<HZPp7>eY#BRK\]l=GAZai=b)8fYq%b:)q[M^p&8CCEBZSejs?.t&5`mfJE]2oBC?J5IAf[RTP<Jlh?2i\0u$ZX>mBP.=K%T]g;!I&_"&19fQD"%pTFd?VhRrHG(nBFM5$%<&(B8`NBVt3GR4ipf5YZ+5cbmgrYdm+u4f(#4n0lYbuo551aUkbn\A&S!.f^oh<YkNh($1h*V3T:1mIE!%ZfB6Sl9#G!2*cg7j`V%,JJU+QC\O$J6@9pdg@k>Z+]6dlG"+XX$VP2Zj[KOD_dG\?h^C\lUAk0`GEgSCgQe%*C+*f<&/?Wi7kO7<^BNh"(6gt#I#,H*C+D>%2B1fO9[T1tX$UAUDAX^e?dG%k"s[6DZrSU/q@bbrH!ej`d5hhM)"NN2_$@V30IDV`;!XrO>b]+W.>!Rk10IWEb'Al6PY>\_cto]"%\H3UmAJR%$Jq@nm"mpmn81(kZ;m!/*&@>;"o*SYC`uH^17&qXm0PM0.(+Y\2=9c:PAh9(g-Z-d%![Wbd=XpIGR@;#E<M>Y&fH:m>%R2:ut#*mLR4?hh-RR(g.+YDUPhr'N(ec.=%+;GC`'_[XQ<6c7j2Aa\?!%?J.,Q^N$N,_a`.-";4=\kl*EB'6YB2XRsej#<$;,4EK%\cPM7%hSgpWc#RS^C/#f07cunkuF<!.OZXF-Gc``_+C2&!h-H;`\C?$K]C',j-1IZnt4+kphPU)_FW<*a$sT6<<U*OP&CCh=[?cN%5GVZjQ.cFkMIpV'"KBU</C3'<C1\cC0NWH%<]_\F4)0=6SoCgfmgA6/`QR!H!c1:a8X(HW)n9JhUh,uh;d"2C;8pN`@-*C]KL4Xi%29`Vt)A%ioC*TL19?ee%#`,it9hIV&[>4f?rgk]HXK\!?DT?S['ElB/7RL?FK4%.F)*XY;qs9jc#U(/B>h71BJWPab^P92;@s7F?%d.r>JRtplf@eLH;"C)1T>X#EeAm('h."K[QAKj,?l\<_d<$`Aqd??DZRirJ,'e-Ul&ag_;4r3.gFSpTW!!0pS1Bfk&#;F+r>"OBL%pCE3]3gQhj#78\1G3&[(F:o0b5sE(^;0$[?JulP`7S`4KOY=Sh:_G(C4.j\]_1Vf0'7.i5:,iSQ.Ks#OXGm]7O;tLEWQ_r5a+;%s%RY*)Y/0[]I_JhLX_n4E76fi,.jU)FKAIu9F$3V<"\Wr8@>FEk#<X9r6W0HG4;Hu..g!.UjUf2k!YVV.jCcP'%EWkOm)`#lMfYB>L%@H630YejEj#L$Mo-?b/PGn@1?$V?0,-?b0+d,BltP@c!mQsG=`$XMoZ-Jb%_>,C'e'MdZaB5l-JW6;_co>DJLf`;O8o#HSs]2UMf%"Eu3)!dS#Wjn4Uu8-;_aL<Nc1,ZO+M#'8Q]$smfFE36/:-]r?2TKeg,`A0+b)Aj%<E"\U"plO_XD-UoESF((VLs<=:dZ($Y?uNbt%HaA,F;`bhuD=]T<;DDOPJXc(gE:rV3ds^$s9MbQTfqsngHn!?2,LhP--5i\P+:@(KiJfaiTsnObf@&F,Q7MSCL+%P2]=2:[2D5.A%(5!S)j28R$9QDnQlKXCbID2S<1/u/JH%:qd8)<S16=2HpDCNXXGhW;Sg#58*@'[;qg<J07U1'p-2L$k11gAuMY7lP(VN!J&i]9:[%^3DOi(%TUO,LsZ=0D0L+7@/>T$bl#ZE1=HRp%0Q]CYX_KdFFN0;L!V(Q4Kj>drXpB_9HG&P@#GTlr\*5a3!;2hTh^i=kjK0\I_s$%=O)M:NB?*M`'A1d/"CA\9R?"\R"i.RU/^.gcZr^SOZ5Gj$#MFJ*M!3ih:NW.e$dua)eth%L6AC!m[:ofc&R$2[KXFB=sN@NRi!qQ%pg\\8eZdc!=rp??e*`eSDnbm\.53m;\-(u6md1kHUheaja37G"+;8\IDXAA,nFPCI]2Cc[0<EWRI!gH\h.e=&(?=Ai_@0fkhj!27%Bd1rr$Me1>I*%L'O1-\Y9_2cK\-MWCmbZ;UBDlYB9k4W>>QttSqJJK]?#K&"8M%;KC\:?!g$Xe<FJt[EWJ<jHaN\bc)9A`Di)VYs%Psf[?0hd[%ocmmpXKsWbgU`K%=?-(`)7>&]C>?a2h#N)A[rt8'V/Mp2OWb,SC5]1Q`i+/t!/U%_dG!CsBqrO.)dQ?'ZX'+BM0!<q%d7>_iKD%ceXFp`W"U>bDQ;doV:Y,^P8i!?(XUU"d&?E^j64^scE9H53WURILn@F*_-PD=p2$CItl1*'un4In4C,90)N&AOD!`KdB%7R+[Ac.@S/M1s%+C/7E0&XHUkQnE<VN<s<+^0_qcq.t;(16Op#"O4rT>J'2_B(6/CQ>>9<'s_s/aNP)_Hh7'XBr6;h[KheR^o$ZB%(qc0CemMN`2R66<E@p'Z52h'H:"?a8>.[CuBK/]jM*\Qjr9>M)\=IMT/_f#7<NHR%%2MUuX>Gm3L@=]KcfJqNfbCZ#42+\0aJ[I>%R#H>0F3UCQDIOcp7Wc(lPPKSFOW<]P:^Fo(:m`um(K_P#OgK7W=//SjLOA'3F*nD^4s!O/EbB_I0Y/5DM2'Rd6'+49QAC8.g[iL2%RZ'O>0[4abWblgriN@lBs&=E5JVG(%THZB7mb;b0!NPZbBOPR`]mVeC:9>*\%_f=cqf6gpU=e29S2"uYA"\oh&#BU^%U)NoiY^3N%5L?V-W[$3R\.(9?U)Aj?88Hi8_Ouj0j".EE1jJ:,DWr[S,dmf=X+Oi1MQ)Nl#1f:?\\Q]cG,'7nC*4:O#ift`me2cD9%*n_"'2!s%-DJnQk1WP/2R,kB5U;O[L9e.&^8EX"0@ps@7!FJhi?E(:`J201>L+Lj&/s[L2_rY3kMGi%B3Te!/hf05fVY'b87J\8C!)Ad.c[hj%)O[#ZQRA#``pe;):22>pne@%soK9Ds*mD*pQIg"Yib!U+I!C&hc\2Unk9g)]I=hq?4kiWIVcb]tD3UcGpu4>2nAGe:)4_#le"_0q%qU-FPW'^_cO2s1K]PZt.3&o@M;2eIi]0@C:jX6?,+qWbj?LTHZJ\Rju70E*>*^1$U_m3TS=YpDcV7$kg<%<Vh8k&Ah%+S3i.r\AI%=""E*9u(+E)2&e<Q=r[A$3=kp6!2"c9rQ"227gX[2410NC'A)R.c'GlLmjROE+:$pbErTo!`hiR&T9AD@#L^"?0ttn]F1$JWD*L0%i*M+qj#Rr`I\'D?$)i:"%[>er3ZeXF0OQHs5kHML$7TQB$D6tW^qEYG$nC(m)JHogPd*(;`PIY/](fK/O&Y]u_I>,7Q,R37f.0j#%b%)8rZ"+X4G>Q<i9qNf8R&\c\:fN_@Z>Rg-n2I0M"#Wr.9R#fbU@rp'\>\bMQB*NX>tCYD6C=e\ju]ZqV'lM5b,@At\66kRFso#"%jkUcsQr6ElGYO`#\`,6[&BT#Z1\r6upSdY";X"B0rX<s=H8Z-W4RX#?#=a(37JB2XZK/1;:Dd6maVR(p_KKH/G^[@:)Y@r[h&J-d%fa0rCh\(s)6JK<?%W6iS2oTOK$W7,d`DDY3!fgIU\Aftc)D&:2V`ZQd2":?N1"JHZd^i(W$^s(NM13h<K0fPT$FYLWH_FBi+el\p%VTAok9K8.U?AaKj"j2@LmoUEe#2!8^FL^4lW=KE^:M+]E@qW@MGlM;mVjFRp&%:&q\qgk"QdERsHa"VDe1rA\[Ll9C7##hIeMnMM%+<[*+$&f<MT+.uT+Om1f*<%.C\]0UXKCKX[a@l`ADct<[``me%@QUkK/&_/@b<k)ann)<?PJI&4%2C)q$24Y3g=[.Z:'C3f4'+M=%iE\M-&<#P>.h[`N-98GDs4M?Bdl.ZJg9#%A"HhUf-W1)8D'\o$qBXu*a0d>pOYO.,:"?bM`eM$3ZnlaRVg'gXqs_aBE!;`jCY\j[%;K=1u5$jWKVoBL)P1%-Pdo>.tID"bl>+@_\@Ur%WVVPHS&jdZa[,sDMURq-%?\%@1>+h<'Q9/Z5:Wo[*L:=\u$ck<@P77rFc8>Up%Bgq"p!I`@SJUL@g+U!&id6K[jB_R0:)Mk#l?!^M3`3&)s#[3UX6u-meV-=?5LZc-?#_c^0`aZ<#/DYla=,le*#:Zjsd&\-]W6ka.%P5GsH!3mA4#k;J8E%BL8X`h(1_5B\J@QR9aCIo![_e#`I;g`N(d!QjiBf9ald;K7e;VKq_)OTkaS-(OtQ)Ar+CIP<ID%6K`/l.<r%K(,d[*C!AR*Q?*1RjTKH_`hQ=gd1RSX?nJ+R1QVUL'FI76##0r(sN6]K1m^bODWGM7;%s7^htbW#K2WGYOZ'n%SXK9H%)b>8IY=E%FT?=V>!(<h2gL(e`bgHW^G3W/%-*XAd[4R=(:NKqRqHNk>J'c5<ci3UL4WVSXUVDgA*^-![_i\Z%W5-L[H`A_\!$Q[_TCO%1Vn/g%8;:$MMbV!_#04VL_e(#(hqDd4UEQ5PMp^bZHDDu.(`r_^^2G"33<[;))C=]32])Zpd$j/?R5c.9/^rEY?b+)X8/^t<D:4e=mHsWL%/Fjc_6%?jq1qW0DHaSMtYrfaq7/:A#BII_6ENDAfUK'.#0GW;H$irNS7TR^%/WQgagY+g*e09k[6$;X4!s>c)gUkoJ:WgT-<!inH%\IBY65LThu?jap<oAOh!/W9GX24-$.",hSuaoiGn+,m>tYQaFVc4C!+<,7!8=bb@9HE$nM9nB:jk[`=)Omr(QT@li91R9M731npW%5;<Cqil+GmG,,f`rTP**.4GQ/@s?74AdW-@(;-\USm%TfD9")JmZnuJ=WeiNoP/Va.,,>;h$PpQS_uuT"7ar^:c:a7^4:mN/[Vc#%o`Fm3;^Y7^j;&qTIUWD((Mj#(<;W)CN`9P+Wc:PtaDa+;2V$G6)-s4[S;=>,"c>!8]k1%;L3j;eT3)?)TDbFr#THJ/j/p*DX6pFg%Njqh[Dr*"1!oklkoq8cWR55t&-\^81dH:80,4M2FK^rN\[;4u",+R:$gJlCiIi],^Z"TeM(+=/MUO1Ltl/,/eYKBQb2,D'`p!j,G%9J#r+"N_-]Np-=q\(8S;];EApd0GchmH]=s+\Np`1;N;P4/aoroV=R[Z3>>iCiSr\,i7"kL5,tJ-cIh7\S,niE;5rfK9[u]\J0`q%FUak:L@#R<6SR,(PRV>h_S=bcZT]C_6_)VOLJh&Y>l'c]Aq,?u?Q.;gW7&HhWF.9_*2TM7iuPIDN>!iPU?Dmo(</*p[lIff]C5)Y%+O`7iMg"fV*jmH`O"Esjk=bH)RqDh;TZ#fO^r04@Nn3ff..[Q(Fgra5TBupW[a4B;pfX%\#,VIT16J?aXdpThbQ0pgOQg]:M0;AK%"c]a.GB(">/-M:[9_@LNSWraTQjX1$?O(78DY.u&L,kolj6eJ]c*U1omSjuCR%!9mlL!r`SI&!eLH6Yq9roY^%%%<h$ZI^,.-:f@%ZG/RA$7p%E?f%%dG;ME?6BsK,B^<ohVtttmFDMlG_Qp)^U4B\;`UI#\V),u[!Nb_G<6$!2jIrR"-<hGtqc@hj_/mT_Pd]u4/dBN2%'88tm$b*9]cG;/PDC)gJ44@"WWcWg>mi#@]M.;/G9:?>X,>>`0gRQE$-(dA[$uTIY\<mW,2tj-Q2W$6IQ=Dt=b@@"gncE>1:1+1>%jKpa56U@s\\nYl.?PgdR@]PD.m=<3'9Atm,Zh#=7nAHPkY.6>RF:W7.AA9?L9uY#&,L^_LQM,ZV9J?)?Np.7V*@51"M\VjGZOZ3e%.g"UKDDaQ/78o?1dC#h?qGbJ42@Gj<H;JPe-A(qWC%2Ra$EAfEiYTtoWYcSt`cL,WG%D3n8S/%6RZXQL02??IFn$GpK>=rj`PI-8%e8GNS@S8[7OVnHqf%*p6bch'i`ZpLq\V(f\`+OE#UQ,q?[KUPWU*U!`RAN!N)1noIN\nTb#_`M!f*Mg9lp>F9\r#ih-5'^5eq^#l%Tfu<e3SA)G,k`u/42G!]mgI66WiJWT.j!CZ.rXg@!o*i^Lk7QJ0ED%nIkVm<FtVAI$Ss]TE!CPU_%H(1-O.#1F"l>kKbDgCj?d6p%/[pb,KW)%a:t&?;$A.YKi4@Z5=Z(^gb*Zep#&Uhd"K&'OZ^O0LF!Z8hI1A`;/L;5c!`A2F2]Q*Peuu-GP'/-KSR2pD+JrdQ61+Xk%&GM`'RBnV*\HVcH1]Z!GFt:.o4X3GI]E)dYJEtK,J@,OY)Q:.<.44rX-b9K>lQmHdiMN7dOt^=+kl]5,:W4lE^5?,7SYbMB,Y&Rk%gsF]JWcuIS_?hN1-6fSsZC@U@Xke[7;79u]Hib,-fA,I*Dk7K"O7f+7Vs<"ueX.>-6s%fc%_-=[\sK&DL]iCF64pAMH_[/umnAP-%hCba":g2)YF[a]YhKbB6(kW&T/@i%GZ$nC6=e]E>PfucnhhjG>[Y4UJ)N$`:^2Vj;.8GI[Gqp<*h<7Q8)4O5hN8[6=<)IE)Y'9#.%>Dj\=`!<q9e]l?:@%9;K!g@K7^kLESa_7rpeZboA]Mu?Q&A5`gn=Z\I1Q4t>?TOAZ10]S<2`&-(,OdjiIOGeNOprE!mg##gjGa?j%C@c*b?ah@W2eQeh'GCkYo@[5G[0aDJOAd'iQidFKh1goN@5`X529q6t,bKRfZ*gXa].!`lg=Flb+AA=0'2N!o]YQM'Yh1AqU10-n%';ekb4Js[V7NrEL5!N48"N5NP6j$r4\b;.P.BCcgU/@Bca$[,6E(e=qk<%p!1:",J&5c>T\q)/b1!Fhq+nd'f5\kaW$iJLh^HWVh%"lQ-:\T-R(2L33f9OJ"C%aDhlN_Ze=JCobeZdOD99PS[^%esO25DUj'mGX&/Dfi<apO&u)g=qj^;Kt,@R)fc@Enrh%>FP10ic23%%F#_UV'Ek*g8#\k-RFTtk3h$0jleZ=n%'Ro%-\CO,FnbXTYN/aW1Pc4tQ,/U2?pLqX^!V.nQgG*_2t]#-L/?0V;<+6We2%[%jJKs1%IO$XF2sK"G!n;s:5&CfaE/s!kG1Hadm\9,X^>7/E!Xr.!)](CfiUuP8.n\`eB"Fu3Zh9u@5p7p#$;U8ZI(A@ScpG(3NkV6,bJIpW%4XJNnK,r@)[[D;+?^,`2,$A:k^%2Fo;qbB.;c"-4obMWp.h1RL^-Hk>i.np+7`.luH!lgnUP3?YE1mGge2&=as)g?jET!7F7%=&.%d=)YBLLXjK/HDDOC::s6''*6?l!d"*^=JU#1%HmG,F*/u28XoO.8SSLn\#sdh@bXnq%_iU-5s^rmYqCUJRh_+%_"cO!Zerp9@H0j%1GD7PQSt-p]H<M7p\O!kJ4UVO!<#Q5Je%)[qpEEtiLIJ"a]I4Fc>_QHC4i#Hc7`"V>&Vd&R7Y=8`/WG4TXE[P-B<Vj['mns_F0#8%K-ELf2Uk%pDgf5MaNRG`otcTcS"sEGXmBSoi#YA>BFaHn/%EI[('Cq#Nu&,iG!IY/Uj@8,^I2K]*0p5W_Mu<5$te;gWbk&X?!:Yq%W7dcd<+[Xd./MrVP'gk@hNU$^flFoe)tj(_Q*\qo"0B%87R"(XJI9`_5WW1;H\&MKQfd`8I5iPVGm!iN10KQe;9dj3Dh_PNOCPPT%jFHXkAJm6A.hlW[CGVsN]f$hRA`t8l>s2'DBS[.C=?TMk6NmZgfknfq6)X:Qm1FStZSH2"*iKMt#AWW3:ptXA#9bM%P7'-"]`&W%%+H#VI)h9;[!c-J9lpoEuk"mOkW*BT#_Q4BhEg<Z@$Vj]%[,@5JblY=_L(BuoiL!Lq+Yc-\kktF1as&\hn(t6eb!8uHl"q(-CTcU"%3,DueZ!#=#.#5n5N>qBc46V4<5QVdde9XaD5]2$?;oUn^c",k(q<W9&*H0sJAVYA\PD*HQ+-ij>>U4U27qMjK]-Gg_^7Z-F;*ZU]%^GhY>dMN-l"b=K4.jh/P9A=6M==Poe-=)0Xck5[418HK@-VJ6:\88$%!?#8qa,!mIKd7;m.K+f;CSQ^iGtN-d8``Q0$oN4OcH^4F%DCh8Pac5%h4#AK3p!C$[,V#in:jW]/oO+nW,r/)i]fgr]lHPH^SB//IBdQi)`=NlW:b7AT)G2:rYS*u]]FH2c*5`RS5]tGZFa&^K%=f?jmjDmhi#$s*1d\SP('eA.rie4jnGWr_T.h9Vf:KEi-.1Mj;J75-V1omhqM?2>!m*JgUFOuYgYj/,iA)6DU*k&hg_QmLP_A*_>%B-kY>aM`Y:)d)Dk!3EBTWT8t>8KHi)OtnmS'n$_D=r,^>353:fZ'>J`ZF.SNPlW9h-+8Tmm$lPN-/^cnO46)TSPXqnY/Ui,F#2=>%n4[[#3a?&rEtpWt0'P(($]kS;Do$SbAhrBr`9r1>MIg&HYQsa;'e@(/2<pBD!;!b:1^fcU^\*TBT.RTo^]eh2JPBT(O&4m!2W3m,%;`[<`/q?WpRK8V>X-eT8`07><\tgb:9#p@T\#BBI%!2d`9q`9YK]ETXQ,M0A7Vr?>b5h'bD[4@dX6<Ic="1HZhot5(m!-M@WLWBE%-n*,g)c@kDq,piCWP2_6s5F#<GkcsonDKc5X9K-6[`%fK>&-&9h?)[8C,_8gSEr[oG)Q;.kL9`Y:nRu0J_OKr-T073R&4'e8huXW%GK2Iel'ZU._:=\<5bK\JD2lbolK8$CJV>74@R&HXMGEguF1qQ^B*$L'ga;l!a$QmkRmidJ%5j2%S`B*:CX:4nT-0RA"F.!m+'S+p%>8nDbSsk[_7[S8lWP<ScOO$jZ=DdAUB<\hPDl:4uP9>61mTT'icV1HBn.N-GS*-Y`]tnuKn9<-('J/9<JSCU(hh#B3i,$31];S)N%g81Z#e^Rk@2Ls;eIK"iF8+kC+08"kj1go'c=A)de@4$I^/IW5?AeJV)1b84/kNLcBNsAW/1Ra>J9lQTtV,0ggNuf'/E*W6S)jpb-%(dVgI;C4I[RB])iS6oIQS?tQ8[E@pEj9Pic\2"E=/oqD1#d"E]rqc8UJ&*+=BC00%IV+&Q*9h]L;g3S%ENmH"f%8K537DSmPhg.i%k[?s)OYZNL7$M@&0d$X%&DF^/Jns9lRa7?E-)+>E@1/l9]mFQN&?nL49(^Xe9EQhXIBDi,p,3A]q;t@@p$B4+-QsLGC,1_sh,-in%&5jX4CCu46@Za-&5/0JpSq0G%b=C*laE3Dp=ohMJ>:)tcSP`%UCjNIkLid!^<^@YI0/pIT/<E?]>c*@Q9p$1m9=+`!A7:QJ1"jPA%X?"_S3_uH+Dp4[oc'MI&GI+2[EQJW'CM*lWZaApH='r^@>2[Yf1@pDlFJs9)[&8&oD:-Uu$'2,XCYW)jb,,@pOZ&5Y-Msm+-AfJ,%q?:s6Ss^m>h!QcobToHsk6ubj2"dul%%d3>$qT'BXiUm.1idaiW^FAE9ahPg1dp&LOJ4PQ8mhJ)G'G@d_jDSnL:>cuQ:Q^laRYc7%dUaQCUZp/t's/89:t*:Cc^2nG,+T^IGtXsNIEW7t+pBa!7D$VP;Zi6.(._*;al0s&hA#2_;+t+:X`7,_chKFNqRSXObUb\qRj/ph%Rq=djB6m76c?a+A<MX#-oOqk>SrS+IUa]cHX_ZT0l'[+`\_;:d`saC6Q_h+$&^.n+[ATJu/WcRk+dSGsN&f>6f",)o0^]2q>iXH1%Fd8Qi=<al:?Z,D',OMS7c0(j3>7bML!GRP*+H043X`ZsC*2%0+0j:CdR@02!DM]qLUcU+)Frhe1Zb<8Df@/lef(No7!g,fFWD$Bk%r9ht^a94c^>;5b-E[F:I8;fX5L,mdY1ot)]TpCT'K.>:f2`)*+6mON.KkPnrVU/W'Pk=J:!,8fN1kf4amjpr^6OnAN8F*,WVm(HF%ERR)"_o"NZWgKc^6H(oP8sK!jL-Bs%0&5+]O:Kh[fpg;X>3.beCqIp'W27F`FgL9+.30N">!?fjm`MDDSrP\j(!Bt`S;;86g>o/q%A\Ps!DuZR0FN-;@&Ao/[/*bT(8KLX.`iX$;e>>0@Sh^a=Z_nGVLsaZ%3U>C_1SSRSF>FQ:IQB?K*E>+#p,l\uUZ>"KDnb!h:@gR<%e$DM$,A&i#-1tt4a(?:1)Q[`#Eb@Nn:]!)gAkuuu/[1/8f!UjQ4JUJ'QT`Q_c-q[6UrosJk?rW)m^@Seb]mXK:V2#?dl&0jK-J38%f07YXB<@edm^.2jE3-`-QX-kt?/+!M@caL<H/mA.OmXgsl'g#jeP\e[>NH]NShicBd*,2)p1L054mgNPGNOF()TbOI-T2R$^9%n=%.'Z'ff2R!Q$jHT^n1Kn#jPXRYVfd#PnCBL`^ph$4&7IJNU2stB#rR/6:"2*Npr8S;p&7qB=u.#6\d5P'4VKm"Q`m0Q]#MAqa&&S,%l"bK+h1XciA6`Q=1Tq^%s+lbN!hnd^#u2^A][f0hO90dc:)a$b$*E9"Jk3o`.9@&?S0\Q=o4Q=0f!o^,l_6DnXKNHiN-$V5_Dl0q%7bX3[,42IK7S"8DN1"M/13ebS1e8:>NV+c!jS^T"BcU)p'70[m"&]s^8ISqRp/R0\/fO=a,":A'"]>mB!q1V=ouH]QA`d'1OS1PN%ejuM/Da92S,Y=5n:D'p"3an"I3&<C$N>-[Q3XZ&:2SeKmau?Nb0"#fs*Pp,H_@-qJ70cDc[^68Z["t5(eQTc4%AV#PknLTuMI+iO%9XiY5(S[@EL]PR6)Y7"3f\I<We,0Pu>=(rd%Vud60Fl8Q<,D\1AV%S&#.'">QjW=7%.aZ8K\9b%!;bq7n7Nui6^1bb"PE=3&88![%CWsmCPJ+OY*&N#\+R=3O^UeKX`0B=;UNTVU"i,Z8hAm"K,G5a&KDs,+fF<=]pdO.:Mq/lk*<nZ/%$RrNVLF5M>0_>98)2Or[ZRX;%8MC[-M2E'bM5hrXVTCakCJgRBdAI'YbBl@6+Ton6NbOoAI`:HdC0YW,5J!OuBXgt?i%I&L.!&r[Jk^CQ#[361eB_979N0e4Pj9:C%FteLX`fEZ^9?rpHB8tZ'=a#c>[UuQQG&1U2`'$a_Q3r%eOXsY<3d`gQrS]kZDCkTij0"F6lQP.pop,X(0.+[dEjiSKDgETse"]Ld%=#<'TL'7'o^+HNuTL,s@oH_J)NS#[1k?S51dK9\goNJe'C'(hlUeTg=a+ANY&Se9Z*&9J-(0ZPNEohm2n#b>kf6Z/k8#5t"L=N?L%NC\gU#\hI2)J7eUV#*N=dcd0VHfT"q]B9YI/Ftm(Uap2YZS7C.f7`6>&aNu`]HpcsgeJ_s2bOB=P0e<1puROrP`E:"kG[<j34R/O%N*7$ulYApm-YIbApZPrU:.rhM<AKN/iq(?'#nM*aTjNrt7#Ma+@M,YFWN/.OkgtJOcX/">d5!5ND60'p(8q+BFKNs8(A!!VDM5;0%=T<!A[B&'jZPaDB-Rsi^qdY&>]J.C'-dbGm"OBLGdh5i6ETT&l`ck'(g.t?G/h1Xajl6`)?S:`(pXBGQkUgp;ZWa^LY;Jnn3\-AD%j]CYc6Bmm2-^-AJU$/Rtr"STd2hI<"3lg8.C??=&,A>-!)6^_-e5XtcY:@XlS'krOV8iGFCs8\(@QukBmO-&RrT"g/(QM)9Z6X+#%P3(:!XrI=-U+$l2ZZf(Hk7S]FJaJhI-t07``L^8Rm^8<\DY38Xpt]^sZ)=:YN0ORhBKaq24%6W,QrW0s4,m6[a,DsM0?Mkh[)6:f%e1h)S=fJ(72,6]A-H%\dUrEj8WM$gt#Vl+?H9r>'Z4]q_BW<dBN7A[?e-Sb-p%>*0FYtn!X2u\5GuKnSS-KD8(t*_&e5B_M=:G>4%UrKqGZd;nG@EcrNQ%CP%FtDg$;j&DABh$T9)$&SD\/iQc:(4p9dF23']Pl&:\n>Vi`4<jQ8Lg?>Q3s)r1ta:b(7tF(>1/U_bIn5t%Z/2iDB5\Z&oRW&l9Fdl5=CkZ52h'I/#r7Fl2eHb=][C%f`[lb"PCj$=`=XtLK:"/,i[TqAW@"gX4fDG%M[YH48W\!cH9n;Fg-#nR%6)2o%@M&A(%Pf:>;R5&0HN2gR[2NQ</@riGp6+8tg!T1Qj0W'>h?V+f8KUiF3`P,t)_LXkM*&(U(i>o>dE'r_>27qDh?U8r^"p#&%S*Mlm5]dUOSi\k+RW;=,Z063;H=tr=^'9f@d_!pB&1Dn.9ZE`<]![!J]ZUb`di]]uEdF6NK^Ieo%O@dga[?EGf"Q?VaURLt^^=,a%Je0kTfrH%#]qd/(&#h?loc6pV)9@hHdbBHVBHOG.cZZ[\5?<UqS:fcYpp(ff9[=`m05JiR8%pNZWkuB@-a^c#8upQ*Z]7BdghMZ?%G*2A+JRN$S/K^SOE9>;l^4VEQ4('2V\!jiJ)Oh-SlRM>MY09V77>f5Gffg2_8$2&*:U-4?G4^@H/s]1=.uO>J?JfYTZ!42(>H)UD%C8ZIAX+&oh<d9TSKN0n,:Q*,%?B;q[KNX"M8Y<]DE10+G9bCu38^V<RE>NGm`FdN<@ZA^NM1Bq5*O/N.I[XFs=Y&Il;/XcHftLQF%3%foe4g3k!b-k:5m"Ub8Ep1?W`eKJhM$&ZJ3krJM`bP6_dABp%[MRa)UZTptg$:h<BC?TFmMt)q:P#ItO0r'=No$MpQ<qS]<?*f%%5^PBi&"-^d9Xf+WSoMqf<FrSKeLWXC2mZj!Y^Q+'22o!7`[c@IE&^QDUR@7HEE=j#TJ>co;Puub[`P2Ih$/iWAWE9DCDup)[9'9k%4B&\fadH![b1OpE>^Ka,g'nVGKABfpc3%h)lmQVhB'W;?QX&,Vnh0Vf<t5%.4r;)ll20Q!"$>Z&Hc-^%L1JSY!jeI+Fo,RC`glLq%YY?XbVUk&*3S<-ng8p]l?i;M[`cBBS/SXkO@5\8<fZo1GB//&!1]Q=5'dXJ_mHf9[1_,n$5.UOCcs**sR[Z+WL"]PSC1kGL]M2:,%]61,JZZFd)s)Tkkf5EAh>#qX1Bta?Y!bg3P4\Ebd/nf"+hML?<U>;KI/c-N6fj8G5N]BsV]AQSPjH[A&4h"WYKrX&e93nU1TdjrX%du0Q`P*RO5*Z*RfBrt2q0s)1jR[2l:BfRo%I+G8f-TfrPnbu_./.H9i?BmrjINNdgK#S52YAAi(4>'[82m>#WBR#"^,\mQRq./$p%.,T`WN25?Io<$Q3\:ohApCgYUqDsJ[P%;:qJ;A4o&U&M$-)JD+nh=u'=m4/Sn`u,!I!?eq1YM(I#)=H!jfT?k%%[>'3bZS-is_LW%#s*I3b21IkR3>R+cmdY>4eA@R5=$Zh8DWSL3b<ap4[GuX8G74]cMds;H<P9+BB\\XcrlkSXSN?2X6g3SosEZ6cHtgre9I!J^/8OH%BB\\XctQ8-mHG%MM1Z\O?*E&6)*7X.FNEXSh2lH$&u[<^3U##^J[[fL2"0h<L]a02K_-R$+4f'0%(u9'^k1Z#(M-sG_m9Ea9WoJ/%.V*kC`n>gm6T8.L@@r]]5%XC#]u`IEO_g#p_dJ[rlM./n8e\smbE>o<n"4$0TDnbHgd>`Q4)9=><'uiIaiDD;`Q`gk890m(ZJh"b%,BL<jPT1$HjQqEY&K0u]i<fgg.]n8%g^9d#Yk-`*4f=;$Y0@na?`(Hb.WhfhXWV1:+lQk=epTNFW)LB8ApWEE[jm\\XNnN)\)hFR%IV0#uO=eIn(6/G.X2ZVW\M\:%`q3K>>0<Cl=L:t"ma*:Nc,/>;JmL<(N^^!0A862(FH,!/kcrtk<u9TnB%a7sCXXQ_SLSf>6`)tq%^Eqqmh2*U_X?`uOXI&jTScVj9nPsVAS=egtfjUtCpRRoYX)S%A$EclFa`<XodAPmfW1,-74'F&`g['Jm#LD)V.")<KA.Q?5_hH)=%VShp[5K?ji9M?2<J8R["c22j&bjL8qh?35ZYmS,.X5fT7R@,PhCA0:G)olcu6E&*_6fPT-]jo^[6j;b>/%CQmF613R/p<SO._A^;%ZJp-iq^,\Q'lFY8F62$oM1/IOmbll\[<C:XFVn1Kqjdt=k,qh$R<^JuXXc8+nS/aq5gXaO\hbRrO31HBU$dO"3H9JkA$-U:Lg)1]%2e@a&<1;hiY.?E0g3nDG$-p\7JK;&2o#))E)04b`5LO)Mo@uU-;mH0Qdo)>6W_Dk@4!&$\@RqTD>+UP-eF/kk[T%?M37R5$E>/4Z%"')4BXH2&B2OT]'fg4\\:Z8%#oSu3?9J]`PeRi@Y%^X!1N%V8T.$s$@<DmGH/7q7KFVu(?h<DphERjSNT95fd`%AaomZ,+U]D7t.%AE\dA3n#*2<UE]=*o(<rVL/n:d%&,SaiK"8O\L2Z6*rf=1a@Vt$d3$n(%s[hcH$DdqdB0W(g=n;9T>h=H$dfWe@6Z3f]nO\=E)=Y%E/meYSK0S++"J8UU%V0lXnU6l2]bqAQ@Utr^Ir"^=I>dF-ZrtXglN\UA!.dTR+).Bo/Q+UP[ph)BFZugfcM<bm(:on\N2*BJSQa-%X5!6Z@C[Pk#CcFEoi/r`)f+PWD8dbKj:8ptmDZf9@B6!?A0lA=0,'oEAh`=7gjYlN1ZnKRn#<AQ4C!U;a7ea[*7Xr#.UV</E)(VU%md3-,]!"nV,&U2i1=<jBSJJ='4IjsEaSqcd_e7kc-fXjs4IdQ"]5%rGs0(f_f;$EL[BH7k_1jl#fIgedGA([*@%\qeR[n>>j.U1'%('E`IoB0BUVq=AEgL\YmB81`'WK]_I-ku">GdoS'J31A<1`e:"=qA5K*\SRPeET+M?L76W=U?5G8E>RunRD+e6p@'W-aG[!_MLI=%O66"iS@SA9IpP+I*gk=NS=YfugR4G[@X\\<[<%R3-BieO6N$?u\Y,L=F-60.DaOf5S#d0j*DR/)@@ElQb$Ljt0OdQ/L1@VSgN.Ts%bS:^I6(HPce+7Lqa%(/E`_AEE`bL'AB[k$r\<o)_BDBKVD)g%fXDG])cI',[aR,8H=a1lp/!KDLoB3^$G34Yl*u4-43=If(g$CcK%NBG``T>d&1_c6[ZaD3IS\\qb(V]3ssSk)7aIVQ/aa,qTEo2B]6Oj4c*R\)&G^:H^Imu7df3Eei9P7rgEI<$MDWD?8;,5'%a7AN,8%57R69Q.C+sAMaj<iik,k@qfTq%]+a=Y=/$1oE/pTD)`gU%_\Qr(9MY::cP9'G[d7P-lc.OT/gpq/JJONVquI1:q2AVaqG5<Rrn(j%Cabh"SipG>p2NFXHLq!pD@`QUT#(h(1W#25Ogk4GAV<hal(S?BlUC+XS*CZSa=oE_![2l,C*LQja=uBIj/OIsBC]&PY&%:j>SeO^%E6==+<^^l_:<g<n`ZG\bJ[bRc<TD(OB:]4*)#eu0o@'>8Q8]l"]Y;%(V0KP`q0R=63F6+%iEsp0BR'HYbKK4`rSMrPb8]($Do7&j%;9eMFS^9/[?06V_EG('aneGLk09&dX:PJD2pJ=RN^eUGg(@9W0o]mh!kk_LArL`+6M@k%)l-k^-m/K3tf^5kV_/B9JMm3*)*tJu7%:Ds:X-NF%pm\GoXRhgp)on!"=`aWXF^45j8.1V,`?2FE@JW=h3f^7A1O%/\HS/,P"m<%#''0]TlroO,FGW@5*D+937[rU8+3S83/%p#ClNKkdjl9St._:Q;U5)4[8mdDKm`/hKlskjmgORh(]Ch<S1hO8lYF=PNi@h8.I%A"S,Dj5AD1kF`1Rf9b*]hOXIQoae5f4uskN%kkUJe5ub3JWs;#4.?%j$a5e^AF1C#&''pGCdGNQ1F/g3=NWsB/3tp+=hI\KDdB?\q\gDN5f]VPRYRl3K:pHQo=dg/,,WAK1e2rLZ%EcZ!SY0H[6Ss)nccAfGT:%mm77M31&>.AVen!15;aNZr`buo>Mk8rO)=p+A?C2VAGTe6dg'kZ'YS%hTk(Grk3jB-WX3MYhNBR3H&%RViTubR$\dNJjW+IGdmFRVpp-H7L?`9fLdgC[:TF.ut<;GO3DkL!A8;\`H5Sl,Jhh`cAB4FL*`US4kcq4=B^Zd<*qc]/NO9=s#8`%DOd;Pr*W;URVl@]h)O;``M2V:$&2#f_ML\0NJjVPRoa$lBY&2beMtcE7FR7^&tUa()GN.Z;EDX-\oGS9l=!FERVppYc)raCe7cF5%9c`',4"Hb;>Z4S\.utQB2h>Ec*)1Wd'UpNg:8c`97+7,OUQ!:s^L/nS\6-<s2,Y6LVAg=E2a1m+,11MshPODd)=a!4Lo)-C^h!K+%j$qKD'R@)DUea1RBY&1-c,@;FltEt`(i21&-O\1=/']"e`ah&60UcmlG6`5i3lX'O07`$#\$u>.!dMm@J@[7l)bB^;H&cIgS*@Ar%H@=pfpX7#_D%?-t'<P=p9+Q)!p$0Q9@SO(a`_N(1Qqe?X$"ClDHu-e8ph,V5YB+l%DH8IFV;^][F)U5E>tQAmficUtctVpm4?Zan%FD=W95;LDUmm@o+O&l:3TW2/o8+UEVI$qTVHUAgQbT3nJ8L"!!8,#NDaC/Zq\m)\gSZ?*X/!+Y"SD`Be4LNPl_I`.)\`Kmu_rHul%)q$-p06B->R%otXS%=dGEdsOUbh[:1_VH8nNB^10X!jC]:c6OFTe:e@e=<'W<cehFqt>+:i;$i-im?6ld@uehkOpWY%u15N-3b4L%]lMC"FiX+Pok,Shd*34)4#=Ti`9D51NRUN$1_fC?69NY/KrJ&N"Whr4,bF5EWu6h(kb+F3Du&<^qefjOeHpOh`PtZu)sZ:r0i,F?%aN#0Yc1=@fXpkX1NbB0iD!0T9H8@b].DnbJ-S_W\\NIK9[kgfsZFN*0TWo@8G>gZV^8/J^YLh>p:VN_;:G=;,D!XP84RQ:fbiYr_%0p.^hc@j;^E[K=`SJoX)RZ&+.n]johmg\0m-i-Y(rk*2<$!!C]1$\QZ2SXY[b<1ed_=64"\a":]f__!1G_+4m7j^n\<+G.>]R^L?%Xju(L_H?r3U/k^mC=Ut+aecBt_\tU'-j06CA/"Fha0>')*TL9'Oa,X0#ro*m5,iP25[]oto6?=P\[UOf(%14a>J5!04,\J+?fUR1%OcL/dqP.-74&.oc\4V%)Do:N@GDfGCS%lhrFPSo7FoiEHXPW:<)KuPoelq^prAi;9bREj,-KZ9smjOEa4-l6i0(12F[Wl3Io<7<:%Zr#iDjrAr[Zgq@03t#i1Ya%3FMt:<>bu@32hV@Kl0l+uA@S1c8=>"O.pi^S3L9N)YKL9+'k_X,n33'a.:Zc.C_O*e`H%'lW7k_uT%5!'s)&a.+FMOd^]o@T:5gQ/,=9IX#7e@dW_jl:V=W=soO:d9]b'B]^4R^5Z)/&H':NY1;tp$&g-+i/-92.KnBVYO\+hgV'(guCLE%o!=%n4aMB)%eJ`QCXN(A*f#/%->=1WMK-?+o_TW>kdb5kB+(&Q<'OIjoisW!($a1@3qA$#SnH*R`\&:.g`qtsXIkZ4m,223pbq8]%/G_Z"ddjs'(NKr3K<W&pb8[YA4^:2Fn4F/i\qdP=]p7^(gTRVnlflHEO.M9%5Pjf)Ft&EA>+HWDfA>9)4?[$lSjErfXi'kUk:ch5%9Bra`^A[0ma%9k1VH046\XDa'L;NG_eorKhZp+H3VrGRo8O7SSLH\<m=mN:D=-Gjpj2U%6rTJ23hW_6:O6;]ndpDZIVSrK4H.gd]%9LI:[0C1ol'SKQdF7/U_F'n:/E@f46-cc3T!l*&.IPff)EH>$f+[i0/I,'&GG#I\aRjfGmOe&->dDKnkIm7clV7LS/%.F#VqU$Pi%DbM,7XYW=c$<qQb5>T\jRhCDMj5%X$rH!0Yn'1IZWOit5;a(/6-P(^>qRGOF8Jq&Tcm]nm^:UX2FEHO8Bk$J-]D'?VFI6*^i80lS%+`!2(:)C*Cp1:gn`u#9-jS5@jF'&/Uf-SZMG43XK0DG::XiB0^N`VY1hO,8LV*jNQR/KU-3p3[$S&Y\Lk1#qbF^e3^;a%RM(6u=W%,W](,UG]Sk@iHdP55!?mdsH&Vq"f&Rajo=@eu?api90A<>8*n"M2t3*;(jN-=P\B^^='q2]6^pUBp`2NehPKR1Zd<0jM9uiFg0In%//md7ol8U@0c:Ja\,\bJ4E[HnNOA=^5ClM8cSiM)?L-8?0o/VpkMA<GYP%RPcn%Nm@([UUXi<=B@HNRdRsAe#`fd!hUF#_5NM8ne%6FOC'%bY!phLTX52lE6B9ZhFP47^ZVAam3G^iNVk+lI7DceO=#5]T.dd&QG+9SPd8b"d.,:ZM;M"2VSg1UA^X-',iD5.6[@oH#lO%m-jE'j:P`TAc>NA=fE3t&7]jY_BMpio_l8V-i/hKQH%B+-2`3O&?p?]M=P0Nb:u@E7jOq`q+oHInJl!:7dU![2)_54nS+>>Cj'<p%Wp!,mC,d:1`lP-bclcuAnf4@.)4&I@;/B8rSKh!JD_.4l)_O6U3_Wu_q0Y27']?VYJE-6_9PEG<(%kPk4'!'R]J4rWeL)H@U>B#*%Epb?kH"-he<&'jS"ZYrZNK"[D3sorD5qioR3&SijAea1iANq?=q2qBOkD]M4o8YrLqDLJ@OF*aOIJ8NX-`+`f($1oaOmQ\;o$+4h%>HB5[De0u(DUG2+8O^([<g7O6-1RdgnmRQjM&#MTW[Qc/ho3njau?J,f#\`i)cOLlJYINZ>oLl@P"O'MT,F?=6Zr>Q!p`6p6VXZJ%GJm%T'?UcL<qTZJ2jDkc>K#9>rjmPWU[I9GAM^s$hnlptk,R`+1H3g?eFf;;eZ\.JHBGdfdp3a>j)2]EIa\Jo`.M`S\pjLhYuUaW%CHWcKY2=>N-B*F7J\$<ZX84EH\(&!<dml9r!m&#srMC)2^N'BurMEZhRle?)7U<dn*bWAFM2NY)Sm9gl71:bIf?ZsON)oU5AlRJT%?,,Y#Kuk42N`ObMWZ8F+Z[W%!rMJ=IN`(pVnX0&>lh\.m`Z09EX2fG6\shYg7ZLF!Db?AU'm;LES?K*QoW!@=+s6!/')Qlk7YTmZ%&Yd4@eb,D<eSj6U*2fss1l#kF_E8b2E1FLgj*&)GSh(eF2P4F1g%Q;_lSmYHjZ*9,Fo@9Qj5fspeDm#WmU;"8lBl_m`jTmhFfb;"%\pi+4R24&P2cA8rBQ4PMhR4e.f.Yg3,?=\E*]p'43%;K1Oe^?bje"7c@d"YOr?h8S,a7))[NX8q>>,s-\$"W4W94hnlSlMWh\#2E%*V1nS8?ek3rJjp9Dn)d?N&lmKoc&q.9rn,MNI3iX?,,FkZ(ohARkEi"G14FrqJ!^a<qSOXeu$Q3rJhZfHJH)\e#W<s;NGbqX7c+2%I#A6I;cUTh6sIUW@\0Guop[IUqAaYVVH<F0Vh%'-?,,W(rPkF<a/J;_]rKtK4BM-p4ADsCkOQJA<7c%`^#aigr?fhNB]dEH`&pUs%^D$,YS6=H^\mPeklm1lm9c"5/NGkN%INtX^Wqq]W7ZLX'Dn<o".(]-)FoA37!tRiP*kST4(lC1L.!EhGIa_*ahW0dN91PuI2n_j"%`OT)V^Z!'R9gL=;H1C;#7()#cg:4JPR'("qNX\ea7`FfVLnX'npM&:>cB(Y6gZu(MYNueMGmC$;I>E_71D/1X@4kRS4rZY?DP@^>%G-g"054dh2PH.KF,PL&R`E;ME+!+_s="c^_nSE>nj\o)1T08h6/>)h;i6UM(rkY/u$iB+jY$\bbG^988m=3DnfDkVDA38W?bLt1!%(H8Z>)aEb'KBDIVg#2>6G-a9n^@ef;(X?(7K3,g=D#*;P\*pWCB0Z?Y4W`ZkZc?F%s!<$_gY6MsMn:'LB.q!nT4Y9ED19W6T=_k$%^&I]dg>V!4RqE8H?$T9hIf"NTf&;\]huE\!qTIFhoSZ$4K-NJ8J%g-+5.c4*dFFN/oN##MSDCf$qXIo'0E(J+E,4W1-supmp@X(0%mAYlUmr#9mgpqY&d\";Bea"+\GkU:VoBVmji68rU9%J2/ltph>nAC0dQ+J.+gdc@6XJXUiQ`bbhn!;T"b<M1'OAJ`Y>^NpYl`Zf@%`tAc:&Vk][H[TQ"c_6Kp<eeW*IUT^EDeHgjb'"gifu\-%rd=2(>PmJ%7ZqM*kem(O>FS`QneB%g?GHL.f&=+$T.^1fH6fgOm1PVc%/m\D7A7lN&=Pl1']M0`<'59@2m/2CfQqs]/k/Nr>:R>-Ahjiu65`kC%n6[!)W91eTc)icTJS^[Gg?*H)V:e0/N2rNnBkHi2jVI%E%b/*8W[k"q[4F+JdD.D\JcK`YY\)RAXi;([![D-Y#*W<&`)<Man0_*$YqXc+?4tfp^^VS5JB#<*CZhgk*W8P,q\f`E$F7UA?rPnGT%"+G.Wcg?0'IeNHK?esL@^]+#m:$BppijZs8Y&8`6Z^#0-Qc`=qk_nf`lKWZj_teBIL]%"lo=rEi/oTAaipeq:KR\M0G%mlCrq,3j%bKKJ%+L=<-ceg^s"s[FF?bUN*h.YudHt-fq[pjhRM)qA`/NOcXDVWJZ)r,c096]kgrd5EQm;nDnI.+S%He[lUa@?*2k#;2'CK#K"%%glU"fV";>4k0b&Z&-9p%!Zq:s6C^'HqMX!^HMMEVtjQoV8%bO_JJPk/Y'rXQ0nJNJ+VFM5(9?<g(s(0]pEO7g&@o+M)*<*rUt@!%QDB7F;IetYFm.BoS%ZQoY1]L<0j=';bs':Og%s+8o@m=fS[n69qk*$EQR`TMI!UDA.U;rLge1hmCV*A,oN!SO(b?cKL%_atL%a6H%o\4pKRl>>Np(&?j^CS9:J:O4KqU_38O#QT9On]I4dD)j`<SW7%s"$dH07NhFC\S<3&&%a5S7Q+/kE!mgine&>j0."Cj3L1!nDcXN%gYZ8m=SqLE(^;[!5F:!]`Fl6]2WE)dXQ"Pg/c=ObfO))DHj*TiBCQURY?]>\^9>DVIJ&$OHFVGp[KiGe]moc!i8`r<c/aB"I`7rL%^RfjC!lbW2jlI:<)mK&qnG\9?!_MY@pHDl^5AZis8*1[X^[&Xq;i\d&qr9T:')aKY_k[!l-LS97c'i,L["g8>>^*gN7@_1uOge]O%`bA\;PP=9"i<$KsZKggo38&4?;5JPcF8PXN/+85f!A(rH0Qg)p-#HCV]^][C7@F2Sh'"3n]iglq&f31`&KRG/2.31SHm)p-lX,sB%;"2R":/tMAZlleTrc.>Om+og^C[pr4FYA8R'>OP?^bp)sq*mSci1EZ'?Ce]gHC4TeTmZI,,Y\<)F?]'pL,4=5hjmk<-fhITYA45i%N]-BZ)W7($b@b^a\S9J3d"J.\OnD3>muIJ5qr1f7\@E+Ll79<>=IcUT#@Co%*a[b&ppJ;Nec&oN\i?I[ro`(ZYKO+TiF+-EXZ7Ss%`s#AtLk!MCM=?DAC10Bh)C03VdKu1f^@pq[[^G^A\[Nb?Nh]-!RP-soB:P;:&A?h%+()`a8jI-+#u,%$G?RpIMUp1*r]Vmib(.e#%8\_Nng6d="Q)r!X"B[KF?=1^2#Fa9g''o..JJ)fdKqoM3+%<I"m[\1[mbXq*WmC!TqUXuh9%*1OKh]M>l>M0eQnT,=InZJjTkT<m%)4h*f/P-W%I1mD,mV<J3Vp$F>P,JC$pbK&6[#&LTJTB]iYn'4r(X1sJa=pHZ0ga#BQ:]"7D;q/oZP!(rXSq<hL7V>$%5#MFY9kgQ%i>20po2nANT?DCqs*??/,@A%VH$NkWEt.]si@4`TJc!sA43r'`D9o%kcZNe^HgWuWZ^:mFS0pNCHqJkUI8>=[0;i0fpGdHrhQtPM%caS\Oc[V+tmX>#lIm/4EAB]>mp1q7ZT'[h`4o=DHo(-A>p9RP/gP<tocQB(5H26duC&dq:Dj.?:h>8\M'3m$$s0`DMDLJ>H%-3(8%/i5fS3WiESj?iH:Xtrq08M;nbjZ3MCr5jZTVd*j[X+jqoI`cf1[kdpEEAH.6Kl9P(?"]hE=E:,2.G#I0lgko2GFa;kfedCkUQObe%mRhhl"Z9K\pHJ0MH2;Md2VcJ8P93Tn[m$=nG:(TCY*^W1I3VU+X6NV)51BnZTB-ug9og=.$pW(AkOJ7fM7/rBX8']pN-66*+Mj&M%NueT&NL0UY7&r#uL%8i1>"pm9SWQ.l?:A!FhoJ!p()l)-D4b`_YImk/p-'<3@.3"@4#P1#qhn\1IfK(^L3lcN'tJ\P`mq7Mh%q\D%J"4ug&e+^6'mGH.r-t&Z:"/5&C8ifTJ%"eFf\\d'HhcRuLJLP^]aMNU/%>*IdAM2\G7OB@*q'!An(0blr]&R-oR6!%dajZggUD(.%e[<*HcgURn2NlMLA!4+-[J3gOnCOk5YBN/h:Q"M02`p"fimO;l2te?nqtB=@4+CSIZLKAnET+D)EI7*F]-$S>E,GL7F1Qp^Ynl7e%\I`uWpT)pFe(seDoCW!>Dm'$dHZj,uqKqqZ_ln%X]a=Gd(!&$%p[Uf+H*Fr-o331B!70l!,qW?$dtZ'4FOfcTH=cuo[D-nYSmoID%?ei0k[/OS4h5SS%hgbV'o%(9o(O@Snh<C!pY!9I%]Y*aci);b!+$Y1&j^u4(2R`5PCUtrqoC\.RA-72P;O5Ir:V%3Hfk-4[@\:*(%3$duf)q^V7[!<n8m32MP=#'"V1XrEj'uX7he5dAEkdl38l/.V'=5/.KD.a50mBe;t^J`DWo1IX,Rf>bLrJgebh>^of^8lb9oRD,=%m,9&U/%<"cT>#-Vf6;sm_)^3L%XYR_g['t1s+g@148hMg^(ScSa;HUC`//ALm_Bk&O.<ZEc/7s,cTcj4Dr7`#AcJR^S+$@)S7e_4%ET]-G&U$)dk4$G-1@hrkGCR4.,0$81m-^L,YZXLdpZlNUI3>(!X%Lu%9@0(hFG's9^KnRH/,oOurVl\8=75JTB5m83XlTdOd?#\S%gJ0c[:h\;-Y]b*NfBFlICN%]Jm99F/E7&i?p&3`#HT,:/e\8fhi5[JmY5e1_*cThg\ZK3lD`iALLed/B)962R^\1m,Mri&-&hmSf%EuV9s:UW[hH4nt]qZ;Y84NZ[rH%LdIcg\,irfsK`L0\Q?,hlXLjUns"q%n6>Y?l^!p!3#-fCfaD70ZTGN/.<'XT*6]gFHW6n1;MA%0TP8XSqVD%%Qbl+pfWD#+mo6#F;Cl^%p[HpbMJ=4E5YUcA4QRV%[g\,^T>FhX&*e($Em1-nCh_t%k5/WQbT_QdjFLB.(m]D2u;X\%.gMf8qg?[g)CQ#hAo@4#C$*9IpT-nBF7neZQ)hZ)P9tJ!N2ZHQDRfuBSYnDe[?FocVgT*X00WUZ1MQ0mV+9-WKnA1S'!>rb*e+pk%g#:M;]:YgRs6Hkl;><NgCpNcJ!b/5LA=<i,Q(4RlE_7]Y%"\)5oKU\s<=J8A=#;D11J(m7%(]-"qXcGcrO"l0VB3GH3d4a79U%S0%?1tQ%1:H(-ath0mmF5(0l"3LI\[eARo&BBIQ'2pGGgqT>&L60sY/)$O-I1f?8S6U6dR8S+EYJI5qt8_aIH[e,Bd,dL^/uK&YAR_M%O^c@J@_9B80.Gp")r&<+o35^on4@f`g5e#CG`&?@&2#Ed/*h8aLacbF/#f:/QOU@C@nGl@A]<`"^YI!-;`AT#[8-go^:NLeiNOY7%qDU@`FF>'$*O"/;&d@<7oiZ`Zh.NfP[R`#'kW`,oO#IHOV#<]Dge=>);^BD/q4mtR7<1:%s(%8I-a`\p,5JH"rc:JJS<o#mcP+FZ%I&U(&9e"r.cCf#S?G,ldfDOI<F#51X43.!qe[?Y"FHp8:`G\PT^EI+WhO@TF='aq"(`Y?1Gr8%W<k,U6pH!1Kh+aBKG&XpA$e\H"%eW&=!m$JbOhtRbMl;gAC/,nU3(("Y?eLd<Sr?89pNc[g#9:"\G([lho;:9o?qsitNWD>UkP9USQ_>%ncMH3n37,&Xsc\]13a#XP9%-40_0V;?p_$KuqF?2sQBl[=(0.hR'2p\i,KGbBA*Fmo9a:P1V+h)jub9D"i-rWiG7l'Cne/qp<_5:So'DgSP[lr(R+2#,R)H*qeV%nGBU(]AGi#rq,@B^J!_jH?s5nkgm/<o1S`BX8)%8V:F4flrAEorb2h+9s8":?hL_$/+NY3rbq6qr6MnqnG>lVYIj?)Z[N^;d;MAL%Y>?cult+t]q##X%O5Jt^rf,;)/sT(RQMu>q/\Qe6me9')ccUX7#Yi&A7D!Z7865CNfe!YZH.+G4Xr3#9>D&&]#/1'/c9:GUl?,b#%CJ.Hq:k/""rMkku/;eo.jO@pN=7O0?af;pQU^6q3aBSLY.,uE?Iaa$:5[/r=h-Pd"5`HI\MiUh+?6E'V<KR8]>LG$Tj@-g8X!W#?%TX(3O'fL]h`nu%im)/>)N*V@D8EV02ZM:A?*e)`1%iLu>nX[7`G?*UnC&2sY"mei&.ec";.5V4@,>ctb]<!QLp)R-,M^"3MQZe(%%6_rOtF-/+]KC;kbYH7O%#DIVZ',]u"_uI_/'h+G#EA4U)'3/XeOZ\gB"c]:ulOp(t/fK$bF9U'MOP&e[+OT4Bph<"!*%=A%3e58e%5\rp$VpEEa,1)QWDu^PfHZ\'?OW[dP8/XY=[KSi6neP8UdIk,O1M#F+XR$RqNY<$!>m\cA,m%3g+"?7@Tp<g:DQaKI,.+n-VP"IX%8;ahVTP8Wr+[ct16N7u"&jd1DZ_gKK+q206"XZ&h'%_4RW-<M#\#'Di(;Z=OWqpj@<cO3B.bcq<cu?nW'=SbLXt=?L(3Ptma0VpW%<`-fGN5I9+VUD;SP`_d[M&5OI"\`)p?Z#DO"&/^("r-?9%h9#*1Yc$8/3<df4R[J?F<kbo-7]M?c5*)`m[:R:o=Cc!b,dHc^4__[%W/Y<oAR%kLMYo,_fCCoS[YRE(RI&#i#NR9/JHLO6-d"%sSOgUYZlO<GMu,US$3Ec:30Ca;Z:(CK!n`\f=WN;c10D2AUbcL'Hr"r]%9+4I]GM2VX.bHjBrOf8sJWT'N;Alqk/b]OdLL[4s!q$m#fYBeHhf\]p%=`rdD&;@k![U^,J_3Y$.Cd53)$&)a3&Z%4Y3N"pe1A7M%!.PoV+XiMXkQ85g:fY@p7Xu=8S.?bJTSr7P:j5#OHkr@jQ<,>#d:IbU1@<jhN-!qoCDBY9ZHdIdR\k-+0XV)q'+a2M"q/g$g%o\)%Zrq%JP0TN!_QI5Z$+]^2K6!&$J7;gFlm;<C%luWVr4NJ2!84&/d_u/;)f2>9@`NS:!@Xrt=Tls>#1-,:QgPiD[=t\f(m^3"(g--2%()lq'NiA&f&@n#I,gpITFPO15X#Pl'<iErXd&SX+IO#"aUb,6'MW4*%B]u"]C<?ZE#.iR\:u!YX9MR)M::>JJ.f35rRLiFe#2b`<%@9.AFf7fdh<EqA3T;]*!F8uk-i.i<e?u$/jeAa/]J])`t\6s<[LTJXl.oGLZ%%mX^TegAD5]p:2*fAF*qk\lHU0s!]!jTmsM'!NV%2I47bVl8E-nLU[*dT001@+@#2lQYdD>#]XC$j*)d'dc2Eb+Y0E4FMlo`sBUDF[.#$?WPW;$<;5'UNB>g(%`Cu%KMqY8s.]:#iPLa%A"k!+,L_61B2.W6^*=%BLU\2c9\!e8QDlr\2D4(5!1<n9M'62Qq[#Xu1c!ZDR%usZl@hCR%*'Tr7'Y.*#"&J0>#@5pTF,p\5pnUm%6MheT@,3S<'nQlXE(FMJ<RV#'Lo@P_Tm-%U=ke$&lp>XU13k57N1sj[d`($R6\o6rj*A-t3\&h\Fj;al:.">6YD+Q#kF`+EdVRYt%2cUYI6tPZfGD0Q3"poqa;Zn9\XDA+#XpRVbAtWn6]Yq!-hhg)F0-&k`7;A-&Fb&s%J`PT),Z%DSfM7^Z=kD4Y?1MP-E(EMoKlBR.%prcl]LnSZjZOXcH'4h;51(8]M=^VTS:'$6]:,6m3_Rh!9J^56[U1e@Q\XuS]&]l1ERI5D)[ukHhApJ&5^j`4J/EJ)jn"^0g<DC<(%:YWm4ih*6r=EaV5aVC%BG[200`[>/Vo/\;[:"02`dl(2tmgoV,$>r:pC*E;e1BN5o=lak`NW<TH.-d?$/jbS_1o)`SBnVVGM2U%G%MR2Y6b\P,-Vea2C!d+SoP1M^SZYVE!E4\W5c3q3e`p48G>`o5AQcgcd5s$CL)$GJ^[9QQ4BRl!HJ?9M[Q7(!$WTB$&J"n-<mkA9^%Wb>P5&=q0?SL?"1+kRk*!:Kq!KcDB>%qR=(7iUS.[uW?']4e63+B^cTP_86D!d,Ul/'Ht$1:E]c7:cJm&1:g.l=!ikfAcgbQ<&/6%$6]qeAV]Y4W.^)nIKC6-,Dt$REOh3;#$\9fB277e-^7%&2luSi#iq7t,lZ)hX>Sku!To@GFX0*\$j,t2Jp*$mNcN/YRWqM+NFr\0%a;IF74HeeW<T"bBj<g<P)6C"gkM$I$d`V>?!#79N/@(jlSPT;I=!JeC8C&"]+[^rZ28N&Ypq&*Q<__aL'0DHo?DeU%\ohX]r#M2-%m:bY_Tq+O*]n&I'Cet:(+EU?@fP2*u@"12r74=CJps:g64Iib'>)>McpdTol<I@@\,D:i6&2f7b:;j+N\VLV:,#Y).5RA$b:cMq'%hg*n@7L0MY+V_3aejI@Z@_649\-[Q:F&d$'o%B7a`Y!_tDf7'NUg432GB"2OAL#,03gNf^\1qPGBh#'_rpK'Qe)*-sA^a\;^mYia%^4j1,>ZPi^kVHdUo9*u[Vh47;p-hg^CBQVH(Aqh)/hVd'U9YA`S?BV<K>pt,;X)b"Zs5--"qo2^gn`3jTJ=u(e+!=QFFP?@je"i?%rG1C$<LM>82'(MXSG',eAP;!hIk>?$$E*i<@A_b!a_C;i<//V2rr=I)3X)Nqkae_'RcKUBm%!dq"+5AP8@<pg64*gVj\G[Xhp0qD%qq$E#+unss$Z`OO3#H3p&rP1T)\\4"R`&i=ru%Kp5D)r6Vi[kW@^DnI,SUb.&7(bnJrH8dWn[oKEC?p6$rQu$J8*7:;Y?Z;;#T"_%`b_1ADe,ulbmF_G.UQ3U.4"2n(A+Au;ucZeYkelr?lbd6:D^"os(p6N:cu\]52Vte:ndu,JMB%%-=bY;K.+Yg.r@TF<SL!%^I-0l%2JuD'0Io"/?5#TX(`3DP"CN9fc$Cs%03So0WoQj1:h1@@RE,Om<ijaA7ZgO0S'Me&lqHp\Y4EFidF&4?J$\Jegng"i66?'`g4J8K%%bJ-3"-sP9!C@'ClqHp\npY7R#_An+IbG8Hk[.XB[l,'i=hCHM80JF(J.EA*nY$S0S7O5\UW+M[<QU/ap/K9uhX.p%*^G0)`g'Mf%2+pm;[K<`;G'aEBa7g.m0^c*\XhWg0$G3I!'Ps/QnGTHkj&M;trN-HiNKpAmMndGqV$c3c?)0a?RXqSnP>SEA^ul0RqjTo!WOElg%`U<^@+]TE=rN0)E!ajkJ^c+4`nJ0>:GRjV*C!,8PH)4UZFeop#G;tZA*NfK%>$9Ju/lF'4RbZfZ,1L/>h7a(!jk)qT!!l;a!m/Cl%gM)T<OY1SF%d/<3'i#>[;'ACM%i'%d;()Jl03[-?mPf%gL[au]+aA@?7X;`8_g6[YhW^17`9qLQ_/1/nA(K5%?,AYL1:#uVG;o;]%.a7/F#2RHc"@1"NI_<:<JF@@sik(\8nEpKGiE4jU%`<-"jW>0_eR$bA;<U[e>s'UBNas(cC)bN_p*"TLTm/]]6na,0;PNOcGL92*%#KjAXlmn#`b/BJiG8:u^jC@\N@bdl0O)`4BFW&o[i8sTd#NKN!fd@7L-AE=%<$'&sh2d?qJ2lh=Pl#);F$u-,RXnH`^MPe3nR)P2%M?dr"P7ZJ#gY1^h)iMkIcp9Sd1?JdA;nj<h+57hmHk@qSf+uPG4O,E58EFOBD[dU-PiJ$/YT+I'70mpILBM'>]01ou$\2%$Z;!(-%1P,X*AX,@H&d3LKDD/is"t?$L)>.!6kM>V'TH(iA<I'7+-D_t)MCCRPlce12!,1*+0#Q%^>`i=Z75f\%\glNO-0[Il@09V2;93se%5Y\CCgAn6BXc%rR+F5Mk/0@4RGY9_Sh\(l\_R7[qAR44-c8t6&=Wh#n*b'=9+:9u3dObpL?'e]2#Ye;hB<FGK`2d=an%mNl=#RWI%!!8Jj=tXK=5dqj]E*Oo<XTgM^#RM&LDIea3RgpL&q[$57O\48FebJMd]W[D3j`+pa/PfOG!Fhki(G6cTT(o#'\6'e6dq&G1Qbt8B%4p$15llcF3HO$o'_8BK/JJ\l3[t2TX\;;1oRhjU)rOf[B5o3B-i?".j!9M#?MLu?i2&(b^JF>oZ<RfM6hH'aB!k4bT](AMokAeQ2%.99t*/piY5,1)fra)VV]-.iIVk:3AP<\rpEVb#S.&Q4f=n$*T_IP:#+Sk9TO5kmZ4"kJ^?3!SHF6tE'J^rZ_eFA\KW[I4Zu(3iP-%RD+6mK\&lW^n*hH@Qb9Uk=V;Ykc&f,;#_m_M6>#-PdFKl,@;D0N$o!aKM1341V.q5.p9WXK@)MA=>Ss@MX8(S.0_,G><f?C8suYh%9Ar>J;23A2;fg!-(?4-oUqW*+$6?U1$oe<._)]DMJd;`B9^g5\_8WsDCG68ZCO&?Fa?sLk=\.$KJ5p'=USm\.e.V!&#mdU!=E+c!%'$M@i*i&<On&.91",oL2H1bF6[umsbie/3nY?ZV8H!<?.FFjcu'['XW5=i&l`<hK?2kB!EqL&Q]C`1r4)5<h0X-UDq1sqU0P0#=S%%+Op3"]838cIu`,T]-rQNEKdkE3](*;4@-O8foPLC6(:e6gQ_u0YL4/(b`5:Ar<I*.rf5'e#Migo1KgtH)Td.Xd[`B@o]PH=I5J3%>-pL<9*W`dQ)V\>5`#(3Q%3tLN`1?UFGjD`9K@u4eN!d_+q7bn%-^Zd.U[8XQK_=BbO1n=S38(O__>)l-5_meOcn<\W`HA8V(`V3%Xhk?Da+2<45Yu(@j46bt7rkP"['jViIa*=8W*hJJ's%V=JlNskYeno?\TaX`Y8=1<#6oeOj.;,E#dX62(=!Ii9fbtuX9jWU'-O*u%P@ZYX(A4[2l[u@TWbF=a<3:\4Ra/F<)jGB`g+4WLPcS@l\%7jl#3@PiXsX)cLF"G%]E![bR]8(PU1frh(oN<hE[(g^#[Z8Q+MoT;%;a[Kl@L8%l+>/2aff9(Ad7e\dGnJB;Y&4,926h))L;pV;)4`TYN"I2[d%WZ;O:I$i##Rb3,3gjDG!&77%^]QNSh-/J&pit6-u7Pt%gaPkhPEiULFuNE))PEl?8Bmk9M*VdTAH%TW"j7XPOJ'q]X"$=;*`?J5TU(0h;5bPj0M`=:0hHs6SRc\:p8G#Q+\BuIa,VG8gr^OZ%J/;Um.U#U^LF?.*1PL"(U!SORkMEZNHVig\V@ksoKu=K(8!>oA36Gq#%Ui@DK!Ac(WEaNAW$]KOBS>>EZk1kC74ai,WHSV2"-.&h%=Tjp;+D&C,A"+q6NND0<n6uAgS*-&P-sl"mW_,GZNaPTKT'>80"-"D*!!\hPe7!OkH]4jUMC=Hc!Xs,kA?9A?0^8`"*<7`U#Da*h%gDMn7N-lN]![+DqF$ZB?$%c@Bh4DM4$>5GeBGIk^jb@Um?t@l5PVHi$YlD#C(tc!$D**FKBH>%igeTXGNO8'WS5MuDkM9I3HsP`l%J0PbPZG8h>K<n7<7qB(Xk'!67BKp1j\nAATDRX=Mh/7j"B)Xfd6e;(Q%?S7MOB[,CimC<?DSQRLLj4nb\hKf8!&<24WjO88>qKR/%T_q`?Q8T>;asbtcXV7H`&;P[1$P:H$dZX/A?;o'CDT1O-"47V4DIqRsr$1*C6;gt8Om!j$N(LB.gr=KD_FWUuei?GKgAn&.0G$A#%&d5n/pcZGi%6*bn4'TT=]9Yg!crV=d+PKD-hFC+r*;U4he0BP;479d)nL=CHRdQFf<&mR-jAj2GdWdi4&/aH"@QVZJ'TcIk#ptHU%Dr;a=*am0#YbN.k/ekp@BHQUb)2D=,Cp\4;f_%m;/dk:\";,L(]gaec&'6BUk7jnO_ta%M3X_"r*CEm=m(4GmNG^0"AebGo3@DE@%K^]'&GZ9>/)gDjAgg+rgoSDubO)[9M0&HDu>cD,I2f8k%E!@#ahniA_;*;:@415Q.*#%9B%>m\1Nf%cmLID3kPoO[r0b;XMN,:!`%(P*fF6=\Xj`AfWi0F<^=U_`VrM58=SB5hYi%+(4qoMd0;>hq[dKsS?]#K232SH2)G$tbAR/IUS+]t.pHoI7($8s"]n1eJt.3(tO4%8<e_W8c:'KHg@Rt9&K[qi!:T@!*Tdb:c@Pe--R(_"]C<c":Q""2Hh:5Z$6S1fu`;0?Gm"_GBKGeD%F=!g>m%rKWQ1&RXd]Sr[@hL%>t.[)%a_G:"J`I5#BAZ)2Q_FB&/>6<.b'nWTbDrr0VprJ9]:TGF#OkoSerK??;_rJ`&YRP+QE'@d+c\Edtj#!01$nk6^1p`-AqXc%MNQ0n)Qu5$hWac/R4!D>>olDSPYLueH0@Q+Zr8!.nNBN"^MFlZpFKu?&`JIXKW><ITSk;1gde=4A/ZQns3d4KF1]Z0)Uouu30+B@%XlBSlAtG!P(8;H2c6HT$0$HD83A#LTf1kY(!Ab`\6_)^=j0Tj@:2?59g0.c$K[YMtJ#HXH)NQ1_*;^bPR'9c5Ph!e)R_!VbAh_)&%@m6:3f&5d:%a4KD4Hc/W`A'^:].Qa%-=F7VG9G37KIh-b6$7\R*lV%QVj^lgr/oSL@_C9%_J;;(]G?U3p(hH0Vt+".+=k!aeH-%R%CT'qV'1u@Y"MSE<+4i'A(oLBPEE^7rbBStIEQoY-DP8H46TM9n]l@4[2o]Um+PDrUG\mlsK;LA0COkqYO"mgq89c_nh2,&?E`%X/%l'NP#YDp6<b4MZr9X`)YD(rtE7g>on[Xk4]+h9j)fKiLa#,MM>?#Vn.S@%n1?Q_KU4Mrj/-n-L7R"0.I%8fqZXA/A&/9!4[C]@?C%6!u^"pnJn?DM;qs)G;f_`pstO=,7Wj1M<TcB6UXQWZ!BS=ciiFjPXmI4/O!I\%1_CBG!9n=fGfs?L9JYqEipL?:VJ7m=;fM6U/aF%F[Ues1jPA#ab8'm*?mFXO,4W&&m=UH[/&bCA52K^0*,cjO6kjMU,YPf.e)7iGbP2`W2,OBCBsArM]8L9E@2u((q2B43!Z@nKlu4W%>">di9bW@b4)]bKk$WQuXro2:\JS_qO@u-R5\'m!h7FBd0FVi,LaoU%h'>85546PFR(Ft8"kn%>"d%dDBurWAL;2Q9_bA;E(l:7I%MoW75/Fb[>(TEc(F<nV?Q#j_E^Wi=K1BOR0,<<dh,3L@$QE:$!,>/dpH?m]DX^icDCYO)9.r^%2l@QN^B5kTi$>T&A?MH[S74ll:%CJ%V'V^cc%%,g_f#gY!6`XpJp^gilm!#lH3=TC,R[a%Q(cnsgcjIQG@_L@'oO_l<ITIt7mm3>S,f%u!@>2%,Yj8gY&b1lgIb"V-^%4k5iF1l$g_/n.i#g,!gc!JJcPQM`jqH6[`q0^pb'(%N$U8s#u5I'X1HQ\2_cliQFe,1>PnHs>egY:)0U_-""[V*]b7f4(!]LRtqc%>HC$=`VIa!];:(?:BPFf3=+="^d2ppN&T(qNL/LRm8<)A#N)8p(DfVHdme/mS-W0T2Q*`Y*"R]X^-h*@iU7/-+m/YCX&q&k>=iZU%ZT0l&\lE2mo"8o]qS6SEfaa[gS?*t>D*g`i7WrcSKr.V:W`XnnWLEl9]8D$E_5iD>O>0Qn'W<d?i""-n.+X92&nA)>,!5\\i;@DP%)'\DL6n(D&dIt@C*$L-1,a/t87+O):2X(430Okss$kV!!Z52-$O^Nn,o4VXg4PBGKd"C%jJ*UcB)68qJi3LuV*MIBN/foob4_U]-%nGK.[3]!mgGBekB'JVIqf6gY_gDF'<4<h3K_pl-S+gQT"j'j7</spXt\n]5"#bd>Y7c,K.>3c[WCSF+,?1Abm7iU&7%oWl1%\OuU%:IFkL-PnN=]r_;Z%'nUEV`c4jTOLY%oGEF!d^DbgqL'^n8hZ_@#Qr!F1B1ffqnSg,&J7ho-\6Q%a!7_POAe1Pm@)*s>T+M'?H(U[%KOK!L"U18IAVg3L4%u4=%9%1lD-TLUm=FHeXUU_klDOa8Os&%gh_=ZV2b\SU)Q@D#6UXb2*1pbs7W[?d9HEjN'Hq]crFASG]QB6<%W(W_6g#FK"n;o?>%nSMKhKKgKmpkC#j"2$)-KADL1JoMq[H=_c:7[-,"9/WEKRH:G5]4/JS-rIKqFHq1!R[9?TPqouF4C($8$U(H%f]egJ4MB*&k7G&H3D?PrL9Yk2g1GgJ?;B&P>BJ68XK*<?P`/#SF#I>\cNW*!R1"^<V"Nl\"C^n,K!BUH@=3q6&qp[*T#3b!M0TT)%8hq@M6_u`f+]=-m?f!:Z=@#/!.ICZ2-D]Y/*4"Mn,g]K*nWqZe-bmneVhc8S'Of`9[T[nCE-:J7(U<Y[Srus,[EQX*<]7Ed))J9=%86ZM;7eHEcd2_u.Kf1g6,o@Ta&e(s<[W^:_2nG]5(BndMW%)_U$R"CdM7X6_UtTDdJ6Mk3nOuIb53!W[,*QHp:^kG7_WWtSJmTA^%:rj7l6.dJ%<C6t1TtEPAU"D'Js!/H<.06E<(K8,ZLYOs*#N0*T1l]V/lRN,4>&Cg9Lb'SZZ7'<+`<h9cF)7@%jNod=3hWs'lt0OF%mWOU8d0gHqNJXA]4+obS*Msms875;<ULGAhQS.*N$:n/"GFm6iWu+3"Te;au5Nl!]Le65/;rJt;GbN(d[S?lC=i.PK_6]E'I.f!!%Gb$Bj<;drYfVdA1lr+;u`K;W_a=GHJ+T*I>]T'`l"ATeZD:\kT]!b4O1dG,><M:6R_<5f,"J_^?pN"AYVGDo_F.!/>QXY`L96#P,%l*5@?&3u6WIIA)P22/I](b'+>YJ@-?m>T'6egR@BE[3"9f'>*q#FK/j;sY'<.X%2*'cSK;`;rt6<U!SWg@sA@Kh*Tk9ZpR67@@tJ%q;45,SVe'hSVdI,gEWo.dFBXc+;1pD>UJ/,LP](e&=)X;_Yj>!KLNa-oaFaMZ1o$FQ0lTP0TgF(YJt"-:N9WcOl[;6L&d=T&i-d%%i1oA_ZiDqB[im#Q0MB=5Vq<]n.1YQ<>rsFc!8cgSQ6]Q69N+F/6R=O-;9K"RZtX!/Tp4U>lr/iK\Oj)&Yp&7.lnCMH4@U\/I'@BL%=lOh=1ni8m0q8s\TJGigaV,"Y1+4jtU;U#)h22XTDdYi9,S=#^ioTK_R7jWU5*_%]WO;p2+n$m=a;F']i\2\eCr<i("3`aWhpE_h%G-qg*Vh([d2KYqk^]Q'_FD@3$Mn"Q3Y)MaW\pCn__oG^=7I!^5V:j^E+@VR0a>B%!4i/$*"CkXEdT9?NGIS3ZS/[-B<?2.0UPWMD%R*C_4MC!QQ;N\BTV?'3jBIrLI%*Pk)4.#pIGE4_0;F<'RSU@O$gS-k6/n%.>ckYhao-ZH;:43B;@W"_hCs-7CkMW%@n-4"bY5f.U%A9M"==2846`i4Ff@@FEX-p^tsjY0PW,u>^bUlD_?b&p!M?EU?/ncGn-]P7idNjY)%4[LVO#H>ir_.Ys^\;Y]d>"Z[pjlN%D-SkDE%C#Elj0kXYV-d3aVI0=UQc""C*\8BtSnpS!rUmGto'c^b!0*2_2q)5YJ&_UlU\b5,?)NV<Z6QVs8dB9o^R-6(DAjd9FONsRs!te0j%i:AU)n6&(-$;1q#cNKF$9P7dikq!7LF'CBH=[:_1U5dM02us>3=Yu\!8k,O9$QZG"=[]>*AJFZo6;qZVcGCg#Zga@G/..`.Mj+Lo%3_Io%Hmi_b'6rU@7LJr:iNB("C!&2ZYHjtgr&o!8G#>=IWC6/($?JAkVnh\VNH1i&:rMTM$o?.^@A:Aaf#`P0XqeBOm-Z#;[>-6T%jA*8h*O4'ZfSYq5K@8$i7,dc$]@k8(S5[[\:G]84m_WJ.]C6Zn1is1`mUB^:iH>=4s3c/r`na[Q5H"$$W-(os:H8EtZLXoO7tb#j%N;_Sla.+dhgbkbqK_K$c7;'Z(CumQ1?C/8_5k,TZ=$V6oLT%slK!E([_q<iU)Q1^XilMt?NWXX*ZG.?=71>CHn!7AJmq.s^])e(/%LfoSab;f,t&EkY.CW+UAT.7V[`FiK^,`lk6rRMP/ODquH+hNFu$JD?N?65R-+jH7/mVWM3GII]bGII]"R0jkY$C;OHF]7)OE.$l&%P*<X"Os'L5fFpRX;_@TLbt.(Ca3`ei&9E);R%7(qj(04,oHncc]&=*m[n`E?Fa.s87igGo<:'5&(^uqpR*"=3!UB0?@-$h>+Ei!^%[du%kY/GiI_Kskn%=6"8<TP[^KT`VR4l4t-eDkCfKR-iS+[EA/\ON!%qZ[<@KtC\XKbfMI?tqbkR>,,3G*?=0ItP2K&I2<XqL-iZ%BeN2e=&tKl;-p:_+I:i$4MY8^$MfBc&Da_onC$)GKojtS!<t+),]ZSS)s$LTe=0/9V994k#Ud7pPO[8Er*k`&Kffa&HR?'acPE7L%*R_k>!OI1kQ3VH0+*]>c[fDgs)]*]/l[_'M=?#WH;Bh&Z@?-=KW4RsE-n0m;V@nuRZbrFL7>a@e(OhFLG\ms+.]tmgDA96r:8rhn%TTfqTG6Q%9\`>:DUaZ$Tfo*BDFp?*jQQSg_RL-th;XI;i!bY5NO=%M+bk7ONM[>L.["9"p5$!lSmkIdU=Q?%Zc9[^>4V5DQ<3Uqo%G`<sceG*`kf]md:EJmFR9-e"X(2Vp+g0W:CMhmW@)-qb%X6AES5D6kmGHHeWFC]aWV?>H9.Uc=R;#n%n@o[YTD(jD,Md&\PjUkp$%L7)mJ1%EKlU_3h5.=%pQS%/g:X9sQZ%[k6Sd8Nn-.G,<#e>ZFmqp8;.ME+[ua+ulY9ko^jTLh",<Kh$3VfjmE-bWNdj1LPo,=30b%g`=pTFH;*pKe.>te/l+m.eGN:_OteS;W1(%<6&Tf>nOWDH;*rs:gZS"ED]VbM.ethNijM@7I0#t?!K(PL6\@I@"dIW4@Pcg`\9JJ%4N<:2+4B`j/Rho9X\6E%l1k<X-Gh4i!0a3%kV7cEMJer%<f2E"WM#`Ga(i-M%Qr<?=BI84DQs+Od!@95%n<4o8oFY)<$d9c.$$<+%TnT]^'Q173+u/#h1-XRBH^M/B&5ITZb,`md#eG9.H]"Mg`]$:u9O3OF8OM2PGcg,`FW^fEF>/5DGp10,RZ)tpOW,/c[r=lS1aC2,%`uo,.i1Yb*;h/i/a?[`OkQ2LP'SJrn)J=JUZ^bWt%DdRXPkjg75qOV-'WNQ1%fi_ND;rTYBhg($/#)L59j`q;pnhAWj,.NS/Y$!0%E&g"UM/3G*Kr,]a6qndt:Q(2Ki`/ot\$C`=*MI:8:":7GNE9CTA>,e6U*)u<>f>D$_/QXi*/8W<S=5U9@:M((YT8(B%1tphYU>uR%HaC'$/SHY+OG[;M&e#f3pJWVur#^`..MD7A)!(jG7D\Hu>gL&8%m7kGaad>o@M5aS0N'K%Jc2DsS@.eG*oOVC$?cHcn4U7Z_usf\%0>h=EnnK2@(_<Y]+4*=a;V`:Nm,Dtd=eJR$5r0U+84-IJ&^'Gb8(Bj<?5WtX"3VFHa8m_IM?['\IV"=%$b@tr"@#mY.^@W(>g3cK%CtE+<Frcl]TX][+Z]^<HGt?R?,=EOE:?/6oKIo5R-:>f!D3#imhYS2s((<t&*si(4/!T>NMuun*"Kb:r.#2aeb$?15FH;5t^b@VU%G_jlDf!q[RXUA_\YcaF7TFig^HP<b'A`[-?#cj'r1?3o*GWa]iNd7!qG\f<aC91qY"rB;='Pq'V.ak"*IiB(74<gMd@SZRd(^W^d%\8j"bJ`CV$;9.F!O<Lmf!?i_]MHb:\LgGs!Z,^?:U-)/f3'o,>@*@59*!%"M%7`\V)j.QISdkRe6^3+YR7ONKMY%a4_Y-5-ef/6\%LLr#JBD+T)0rH;A2e??d\3u]#aN<u_,#KDUTL<-Z""W%?@Br!p8h+-;aoOhRG2$edgt7i4%T.NXjqj9"GfgC(K$mXB*UrBoZr0#t%Sk=ildPjfL)+SN_TW?0WOlMqRiqc3+D^o0/,,$rYe^2G.EGk"LZ_ptWk!8*b,#4.WbUmL`0h#<LJ>P^V>._;;Td3*34(">aU7j=O%-?sT\<ZVo=/&T<OWn!VH,1Eqc[$#%eJ/T1;R]B5L(@t.Y<c(FYFM5R+@%C8O7#.b-%b27AZ>0.l.S/Wml9sT%edmgtT9WjIBB:i\%10U%A%?2IVbLWS^UCh:-'@I[^foEr"_/Y-+9j=)[l",=@kt&XFRPo8o1;qtL$o9gm`RN->Wk.t`B)I*,$(b[Y6BR@k\-kV?Qb$rU%-W.gm,T133<ZWJE.juDNfHm0FX@<u#8s=*@rc@46V3nhs60XSpR/?f[6oo((9;KR'a[0#u.pL_F<"9T%XRFb#/9S>bEXRoSc,T%P%A@"9i2k+9ffc#%lZ#'X/rbQ8SF].g2T'A)CC!pVZEiHub];Eb'Sr%Vba*H5K@&R<n?sEfb4]P*5BsW(Q2Oe-`ffV`n%1llt$G.GR%VI[#UR@W`Xft\WLBrm:h[b$tXCHK#W+R2T>"DFtV@XH?RgM;]"?>It]V:^>E])m,EdsoP>SZ;obRnXL(/.Jr1jtYS+S^mn-br2jE%FgD)LP=e[W%b&\RAP>MH7W)2:fc%#^D,88?[`t[BgMJj(ai<oM)M\c=[YgU-<"(fQ/;Vu?7&-n!*M7QfG#CU]f0[3+3T8%h,TV$3%n\$G\=![#6THS:*93pDI>)JNYiA[Tbe<AZ4+r_unA0[.tr">,sWn!;hUE+<j;8cA'-B2n66OMi_\JM\;,3"a*\?[d93,h<d"pn:4%V%$brDR+@O<2MG4VeTFVBXRL5(\pcZ0(YQ?A>SsYo1Bj+0.7ob/Z"3r\'D.=]WHAClni(Agq]R8%7ess--ZI2k>Y!US.;5STf"Cq%7f0jS33AZnj+L;_\W=l9K]I)fh'%1+1rsR)*ok(Mj#Z%*8h'^dKlJH3Mq)4p<A)lb;F0n%d2m7_mK(0%*cMt"dUoG2YBI^"!EVH\%[fE=q\+a&\n7gVed2gT&D+LIDO7@JC>kTCa!oh&2WOSB0%s1:b[=ro,O_7-1M4mP5$2IbV0_HE_[nXd$[L&t97^d&$(A2&m5^At%%<bV"HH:gP]q<S/.874F73=RdYRU?;Elf=cBQ2u:m'j2l+Xc+NnV6-IN1,AVcOuPj$,+'s\"QPp`fhe4^l[c/dkd2Cc]V9?fAQegf%Ppk@t6[20K(gf<3N/Ek=8C?mW25e;E@Ig/6m5QLg4"2cK.A2ge$VF\qV$iRGm5[k,Fb2>JX&L/pZ@m4'7h/rk87Xm#@:X'iC[<5Q%;A=$[0BTh:b;7)dQjLcI9S^$A<%s-QLM[$^W1MOcKNT?efr7cTOrTOb7jJVrM=h/S8V1@q.Gl)L>-RZJ6.gLJ?t;`N%C$VoZ?<sa%8'pp(C:gbDLm7NEQdfQaR8MC2l]FQaHB_fJ4`V*<O.^L$M$F=tMUY!bc`BVr<:]Mh(2cS+;DB7R7.!JN`Wd]D<DqDA&]79o,Am4e%B,2aLp.4!U[NH<d1I0t4"urr9A1.2a#Z/uI!];iZ7hD\9#d708BtbYH_gtH$Z/Gt\,$-'K*9"DjMQ7'#L8+l]_i\A:325geS>e<9%+Iia#8AllP30R+A^)7NbLr_;/%UltHK!F,[_9d(QXk0;DV!-`F%Nq)KI#1T>[2V,bm7%fU09J_G8*nHBM=!dB<Q0F0L*KBu+oVe<%[o9aUF#JfPi@)OpE0O`eY"W@%$9:@o>H$M:c9se5jXEFZ9Zj7_6AD74dd/27bp?)U)NG4>_\'.MWNRoi86m-]>GK8g+/ak[-Z>R7%a:QC34XM0#@q[j=eg[Vf9gXm#Wo;$FW__:R>Ks%--$H<U0k::DS9raIpENuLiBR.d7kCN&#8IBhA<\k)0Y#LrC7pC0FTH9L5`Vuk%k@@#55TY?Xr4no/V^*Gg>(Rr-#4Ug>28rC,(jIT.U:qTl(gnFPkZ6U[#i#SQW&=b_!5#.N0EI_\OqHa;[`;4\b);MFl\0fh=0.#g%6eQP=Ys8o?cmIGj6V]Xo>_dCF+qubRfQ0iF4)!PeijjeY7&5G+D&Wd\J@Z@\e0&*u"NWV+%7(,4JoCcAK>>kO&d)Rl#Ad@u:W!MG%)(U.YpoA,9ZiolL!+5,li'eV,<n`+t2)p#gdK<(N*AJOhZrFYtlTkf2;`sOd\;"KfMLm=:5Qihf8k.Ns7k#Z>RZ+VCneBU)+Ys5M%5g<Mo`%F:\10<BG%)"1s*p]Uk<%!OQ4&Vb^,oosN^lZB:I2h(=,j?JI1*M2/%A]9u)+C2["KI'>;?f]IXN3Lp0j"J/36Lq<kIMuO%?%a1."6Gu']+??fUGWS9@Vc=(cA8jcTB?blZJ5W".]S<jY`eQS@mM9fO'qm">PVjSa>Oci_1Wq_;7RPoJn&^soE,(A3dLdSR].Te%E*_4:4AYu)H%ak7Ltr)064fgGJ]r;l\AkK6+b[oP]'_&Lh%ei\#o0a^)bZ=2&I&4?o?+,9.u3#cIG"MtiU`s+L]:X@+/.5Z`%+CV%^SSG*nGh(*[N9f\r:&tLdd#A`=*Ae;*'F"/n'0hFdRJWC6Mu=*SeIH;8L`#3UE$'HenY8=MH`C&2%UL2?ZN]0:3023rucS.ek2>d%469;ENbcESs2\nskJF8;iE`_C9/,-a"-5meTkK;1&Dtf:\okWM&Rs"9o'kpC3l6W7c6Qmhk-."'2O"HKTK8\4fMY78XgUL/B?*jg%.-\-$ZbV<HLU'(-;:5P,ZLkVs=:UJr9-H=!d$te2G7s/lmC7`h@Y-Xf8-Zo.PoHV@<l7;6r.lXF!;'oha5j<W9[9Zj,f]KA+f'Oo%PH)l!pid6?Q#f*f>"F2GC(GMd7BC=*g)X0*.69Z*kc"'.jB>MRN[c/+.M26N!ZIiPlAhl&E4n#N<j`+O@H^htL:*%#$(Y(NfNI;j%3NERPZO4o\PYju3+eTln2`n+pN'i!R+\2]m[q._'%'d.]@rbTf->-?-aW?SN$LF7&0$.6":XrV2c76n_MC*=+Wsl8>b%#HmGmr"K%BH1;-oW2dg:-n6l.`d@%eC1`2)T""nSlLNt=lh@uWsk2u.O#nu!qjLZF_jQJ.o@\^W+mj.]5B8g9e*Z^kZR!Z3NNi%QaR"W\FLIm%-AW66Knl1"^/',_JZ0O9B=maB/En#[k&aq_<gN>lKF.R8o*Xj,W+^/5Q,i+$!gA)!\*gnDK3Wro]E0]PmQ5Su.3Ht/W`@A$3Nijr%o?(Q`?5Y*QQ1B;cM/:)`Gm1mZMH0M;N_n"O5@upZ7VF%E\HZYQYc%gnM['5ZQ4JN(#R(2;rdf,].0'Yn^mM[eo+3I3r<,F3!*'@s%,Kj._pi]NEWJJeaIeH%Ue\tSk<J/leK>7mnI5;FAaa!Oe;uoL'\62Ye<NVK`@9Ilb=1,-2%N3q?0Od<8/oYVD&6V8Vk"^P$d[q$i%"TI_Lhc?IT#W5=7HlPN>6A$&lfM!*B8/.%dBip:&)Tnn.kH9hC!$htY/+a^V'K"7WB7ZEr^8'sf,rjt.J?')P$1?;t1puaqS^fKT%Lt&f!"s1UTo^Eg]gmU(9n6OPV$\45t(cpZKWDO@Q!/VQd&la!,\/he@6A,GuFO1h+O*/_s2?^h+Y<0DBatjo\5K)G:FJ0>,/#9<s%CF4PY<lC%b2crA?m@*-Y89nc3+gJ6U"nLFi3%4L,MH^_IKqfY!Ue#uo#q8GHW&ji5oF>0K!_%2spKJC\0YsImOb*:&:7742R:'+T%4>mSS7'A/s_3hBOA5a!cZJ,d#k/E<7b%'mirr**CokZO(+:S4eXTbcpJEe^bDN:#ua1#<C;L*.j9l/b=?&M_$/*;`e<5i2+clu^;%!+@`h7fcNW?7?VM3m-4g#XqP*?7rL+]HTAaR9jC%;MK'k:"hgJ]FD5N0f]bfU!@=UTejkEQ:*+P(#4-R'c(G9$1CV.Z>F"pN'5^r%3\7_h!?3d$A(ssI%aL`A@LQ.Bk>LFZ!0hdmK"7]Q[>m1K7s1=b`'&l@Zf$!<p)jI3gGZsscl-D1J.n:d=m+\,>iEKqi08Ek;k9kb%9"HDj2;Bj,f1[>7"Cos3Nj$9,4`O$JWC<`'&e)>.+N;^7k?9N@psq&OOS"dBJ]DG<,u@),RiH-ecT2-m`cd#I9R7Tas/&Oo7_Tpu%^^eH?A?%rj#!:CbMIG;5XWpqk=PRCs5GNfPl4S<b1kF>r]cX=aD6;.b+j=C@&-.re!#(,rF]=-(0Z@qU@?a?1i1ZG^*nPR.mQ7QR%N9pCi1.HtZ.9jEtflDg;CL%NH"`FtHF?d`h4PI:RH&,?d^.&npHH[I=iE5Z[_)$hg.RE$'\q3s.Iq%AH3LM9OYt'\+WZcVg661mb%n.+r(kTS>g;'dJdI(;uq_B]:"Vq7;e#qU#nM_0]a=lU"./l5K"_4$&)m&(]&8SoIo^7=>DC)ernCSms9;2k&9CGB=Q^;tE*[LL"^%ClcldjFcu)pQ1hbNPN\ollN;P&=QZTKH2-+0S0e2P_OS;C=;Aio7l\Dh[LlYE!XS%p)=[T4\MAs%'E]8WT@\%9?oT85]!jj,[(6Y%!,>*;/$Ho$;6]sj%6L4/Oieec"t>,d6=<[4.fq3!5nk`eVa>BG0FgGF*'F6)f^1O6H^kJnAE6l)B+&YHqAUF:MNV<1pbKm*bTXJ'%RS9H^Gb%6q(?G]QYe&j#:0V(J-]SZF6&D29Em)W.phai&+R.h"5pa'N70'BfK73ffE@j84J&bS6WG9i[i?Lt<P)>2;]h@p\FAj<q%)'fc><ReFP?]["mP+f]_+aHHr.AZmQ^*]mc8`9[+Bd5^uKQgT@jOWbOClk10Nm3.kXsco_AjNPPF\.kCH:6Dea,nPl5hKoD&9:,4%>ZlEMNUN+9=]cd0kMl7fa=C^Qi&;$%d9GpjS<V$+!NUKYj`E>3JCH=JYCZJ!<*e[q<ZW`+SG-A#LL3t,:Oujt?[:&Ikn(!b!q-HX%=M;b2*J]CB=j""%^DAT-LPo>9<=,i>[3Si&2f#B[U9-M1\"dA_DkmJrQ)l]pHQ[#Kiu$bC%b.4FZ@_Ee:$K<qVkVOpWI`u'TY^hb%1<b9m$F1IB%qhH\NL=1a%VVkp56bOV:rK*'9csU>6CT*SDtHc%cXPTf6r(U]rA/;C(<>(#:cJrCP*cq$3?.NB-UlSt&X>F,Z>S>'%7AVVtL_OQj8s'=7S7c\s/8-%X.FS',;C$3uFC)73U[25d?A^R-V+?54MY%aH7iRd<%oJ4aN3_cK@rJb#gMlM]k)5b72aGa78D0J&%KY;X>fp`5"]d414"+i=_\ggCrG=pLlh6G8H\/Pi;o9(C4-Kh89EJFgD;p;K^O3n$\eo_Ws(YnG0aepEL[X6s)V(`.&;>c9YD$+>;%%+!0iT5@EU0+[=##'(/"Tm)^XW1?a3+/<r4b"]T?AF_m<POAO?r8]#k+8?htL,+Ou;_n0.6o2@+LNq1qPQC<I7<3Dmd\^Xr?m8&1%f`j1*QuQ<U[RNUZo[JKFg7h9e[\aX*N]u!TL=XX.6gSVfbUl)@d3<;W2q6CjeeH?WZ`U2Q9#+J8UH,aT9usiqqFcuAjD7c=SSa,'%fbQ$aQ&S#_+:OR#??Wb7-!1)SV]`HOl-D8Df.H8M3SP6hB:Hs*ChjA,,,?G7,YOi+9qYWbBG7mXT=l[8_eA'Afq0MdkG6E^/f`/g%:`sK2^ge\PXi@[&H.P()<oULL-D3[eXFEj#Z(nV*p4_>aHb6ro@h7@j?fNhff8>(prISmg=9S*n+`d;bR2"p=\7-a,TJB'"N1:Xt%au`00Q=*Z#Zmp`-G@W,<*b<)mXELk`>`'TfOi.REP3eSf),qCS*G`4<Yu8,CbFC^qJl==\>&E4!&:hi=2o.3.kJ1RRj[KBK.r*Br%CatFj`8TdNoFD]/&)*7:it;81]quWMbP"knW]4`c4YSpIFr9IH[(.?c.a#o<6&IO!T@Y4JoRO0+.&.V>(h((mjG*#A-2KNF$N*4?%2I#[<WLt`p-sE]>5IAe7Rj>:%%s+-ag5P>Cg/6ObmEcl<NS<=cS89=QW0`W/^o*u`i/mTGq2@ugJO?N$b%,P<\\@S/f]J^]h2]OA%j$aZ6fOoX9RuP1`/CCU$Or'*>(r9B,k8PI;D%L8i70V2fo%hk$`+FPqFhp3cM56dpOIm8hqf5UE@)Cgh[2_#T]o2N:;N0rh5]&n<%2TsS<J=XQ,)@D3Wr1+7lB*1,:+hf4`S\-"1?4d3Y/=.$ED)j@I:DSa`V%W9DYd@U16f)QK.AP/ADa&(C1%-S\0\&Pr__t7#C)\__%.ImYAG+b;(?7bW79!pnIRKV%3=[OYl9F$R<`\aH8&qGhLj`M#\!L9,RNS.G(3s=6QlleKX+\>!e(N:Ru;OJER7p@?r13dB,Zn!Cn%Y7T"\69TmqMZX3LA8lIXJ3gOKS7fXb05s'/pC('D'0-4S"t;T*ZA-e6l+08?jrkp<c8Kqg<GkQd64A[L:6^Fi%d"(pbXb=a!#A=!%(tMKE9qiW+^2top(rVRDUcKZA'8miij9RWRUa\;P;kGMWVTi"q!@j=YLuf0)T.s.dO[->DMGG%S80A!BfhGTlJa2#b@H*+?9u;\d%-Ajbc"VLN8";=/\Z`+Mae.Q]E1'gG9JN^A;\,_DoV))Q?i2M0_4qf1L'ZhHngVaU5Z1MH9$QgKGbGde-ELe[[T0&<"4k#9,O<kD>%<:KAgb8hWjYlau"paYh;&<AY[.WiJ-dq2UJ_a>\i(r?mjV!6"SFH<.!gtXS*]ZD+s:rR.#Sq3A9-e"-ii?LsJNKH)?6G`rLr=Ea;%)^eHA;&#ES%]38XMH<s+Aa]d)UgW-j`?bUAdNn8S4G6^A"pm]/-tjL)mU3^JE6*aS?HRE8a=d1c-!)gLMA$eq(iNoXaGoRA_pbXf%A-P=o(>+c0*>/T`9*p?5r1<sd[kIBe9G"@Nmic_A9-,Q,5PT0n'\1LK(s1'1#d%$KQ%\qrHq6u#M6b^h/@`oS[9cDS>409\^=QCJ%k_^</nq-?0OM(`%c$k4al,^5>OBkR7dQ$cSaYM"ON%T1U$OdW:!PISL<6c":(?[iuY%J^S$g\S%j,t_AEA_8k[iGWm405*.A-iHo%[$W\(0RiR`LLQm8B[,4K*Q-"P4d;S]3=6N5]F\]nqsT'V"6!J=3$.bZ5e]`uA;+I1+SHA.U8t4'<S%['Ga]2W(uo;m6&M?e#Y5Z*%=oF#Fcd7H!UGFlI&pk_5Z4dFE3i;5A?oL?,oWMCb`D9LnjqD;YE/A`D;]VeZ(i7i^4SVG?gf.#alDA?/EO+V]'qKY3E:35uJEi*^%O/TaB1;c*W)<"jh!>lD?#9G'R;3)hQkTh*e8+g'DdkuK<F"IgA_[o3O"+k!fLt8O1\sba5g_RiVeX\dk]2GrJFm-B5^YoSG(J9<(%2m"jfI0RYZ#I,N+Y.O5iVeo.9pY<llr<FI?0seb*REKT+FY3I;aqM7Y7'n#NEB3"_cFZ,.+S75%=mK`Q@KJ``=l/Lio@h4+XqX3Z%,`\OmK,M+7*.HN3j]6tr\;a[gordF.lM=1#-T+E3(r54O=^m17@Gmf;49V?d49-[L_EOQJpQkMK*be"U8k2(*>6)lm[QV4C-h"K<%E*o^,%;%f?!CH.XhOll`f\'u1+h6D;mhu65q*9gY8:n'm8:pBriXg8F8Y9aZU",[G:>A!;YLH8lcW^%W0g?8cpl*QYgF2$(e9<GS%P9B'695P:'o][DASM@KXH$-]A_4U<3f^7#\L:&)rVN>+a`Z>_Wn]1j(YYD#'j:PkPcq]I3W%k[&8Qlk)j/@;^*I<5fTa$>se.B&f%>-i%hZnJHpe@MPIcjjU/b'DT]5tj2bYQA872+.nH*hkr6]0+4Zb(0-u`m@bC!=Z9O'r_RHgQA\?WqG)+4KVVck5eWLGmFm_s-qPb%aWma6P@B0ETQ?Z4]cITW:=OSD:sA&M&<J*^SDThA=L"ccD%@09!nN*;NQ\eJDnm&s2GMpEYRD.W$RN*eRh'4m[RV_)UeRDA?QM"t%$B`-L>t.[OpkU@n[;NG4;Ut,K.P?F!6:_ce9$/jr2Cfha81g=_Pm"FLF9X?n'#PkJ>[;EV(ji:FX?bDeOCUKULDdeF&D%EE:GFtr%?/oD]YqDD<W3.]&MOu@YjJ/NHh#N,&'3FJG0bjt82E?g1ImmOdmh2"DY"R>BNaW(I3'KUOXu>o]i,fKE0K26+jp]omb+W-1QC>-q%ad?qZ%!`Q99CJnB&bT^S)#5pH5^aOJ6aVMec>@(7bk`T9GpDYHVjJ*"9pM(Y'iS$TAFV=CJhG)a,pB\X6ID#MIB'0+0/Fmm@\uPS%WS,YkCE/Y/&g=i?(9H1%+g`]!=id=CPDSBfPRnmE>G=I0QKU'/,spW$H`rVbZ-FWe`7Ybb:>'Ek6n#g3KUu/Fe7,ioHW<_L4aj?)%BH"9).c>-"*YVbP@:Dm2.VdG#$$@j@(Wn^IP&[0hnoomEd1A)\H;'9S*[>0(/K&0NQj=t'bRSG^XJB[.ZR'pVD2AIR/J6/$OR?5Q%KHM[(4W^ue8rT*#`-#e5P)'-Er0n+O,KoGLP^B7&P':4k-25ThWM6_l(3\L%34jaI.?CFf^;J$3hZ<#PmiNb2qMoj!E%0ZlEOp]>%K^Fjg.?lI/$h&0NO\4uje2SSE8C(/K1mJ5)h*fO(C1a'uFAisFYZR6(=^'jkJ4iaHfMf1H$^9&!+m*mAR(FVgN"2;4,R,+da;*8H%@\lPZfcaC:eM-_E6q/!/2sq7I\P^THg__A%2c//18Gl'&;VZ\[:IbIqI(4MqNa)1e.Fj)e4u\A0oA*nu^>hm7*j\\OZ5rK`Kqb]+%[<-p9EGTu#X#qeI*$RoNaR2(IK+aId8(q?#i.E)PGm\J$BOHp8E)R$h*s$C)P6".'1;Oi>8lkj->tV'"g:2JU'ZcML%B)Ja!,IW1%Z5u=8%&kjA`%E#<5m.U-/Wa?K#BViGGm88#]0QKqFrY?YSh6?!?U)iOY*#!3!?eeK+:p"q3B8!?pAAk,1q(74GAoct0Y#!Rj^AYF%-sZ\mDTJe):3.XkQ5D*f?b6o:T#cBr#b8^`G"A<]C?uEC#Sg!D7Iks<[-!gaN][jXRTBfD)D4p]YCRo`h&>*4:fC4aK=HgA#A"T6%)1e6omZ@]G$NYEtPpD5#W6-YP(eY)NTX6CDC#L527?qj].N&r12IT`;UBS/8j]t32#j%mr!:[Ar:(a&E_?3I>K=Hj:#0E+HkHj+=%\K_JL;\;Kj?aSnmJA.re%]\`U=A(W%`E>5PgOr[)3:<]E01q'*7CBES_2\(Z.4,i8i[[I4EXrkSBKShM9u,TE_Is\+BUoTYKuUrA%I*\ZJ+_a%-jjIs0#fJWo\ctqi4]>MW1^]CrE1N$-BtX"S"$p&gbc-nY;(1V-)[Z^?P-dAE=:t1`R^5&lAANhV'^&s"*L"(/.KVY:%3Y\&J(jlU,@mf7S2OICWJ99aZ$/cfC\Q"RQfIKDuLl:rA""\^H"A74-P!V28K2f?`;,lhY!Itlm3.'`Z#)Zqn<RQ;Pk-iskODc7/%?2/&IdOsO'iT(,N<Y^$#Y=%iV`hFa"S$?D"!Y?\5T<85AYpXpUTg389^4UJ"_Gp8AaLkO21.Z%uQa/>0l?,b#CJ.HqoEJBD.p$Ug%YHEA$2gFrO]u/+>hTF!S2t-J^*kqHS^N\=Ws6\)2ln,pHoEbZc]eAn/9CEDc^4$$/\@;+tT?mNF8:3iI?WjpgGGk38!G@=PcN~>%AI9_PrivateDataEnd