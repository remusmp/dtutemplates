%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: DTU Byg B UK.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: PeopleGroup%%CreationDate: 27/02/08%%BoundingBox: 0 0 181 26%%HiResBoundingBox: 0 0 180.8550 25.3169%%CropBox: 0 0 180.8550 25.3169%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 20 8%%BeginData: 5072 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C459A6FA1FD06FFA827F8277DFF275227277D52A8FF7D7DFD04FF5227%F8A8A852FD06FF27A82752FD04FF5227F87DFD0CFF27FD15FF27FD28FF68%699AFD06FFA827A87D27A8FF5252A8A8F8A8FF7D27FFFFFF7D277DA8A87D%7DAFA8FFA8A87D7DFFA827FFFFFFA827A8FFA8A87DA87DFFFFFFA8A87DA8%7D7DFD04A87DFFFFFF7DA8FFFFA87DA8FF7DA8A8A87D7DFD04A87DFFFFFF%7DA87DFD1DFF9368A0FD06FFA852FFFF277DFF7D52FFFF27A8FF7D52FFFF%FF7D27FFFFFF27527D52FF7D527D27FFA827FFFFFFA8F8FFFFFF7DFD0427%FF7D4C27277D7D27A8522727277DFF525227A8FF522727A87D00277D7D27%A8FD0427A8FF2852F852FD1DFF686975FD06FFA827FFFF2E52FF5252FFFF%F8A8FF7D52FFFFFF5252FFFFFFA827A800FF277DFF27A8A827FFFFFFA827%27277DFF277DA827A8527DFFF8A8FF27A8A8F8FF5252A827A85227A8F8A8%2752FF277DFFA827FF7DF8FF52527D27FF7D27FD1DFF9369A0FD06FFA852%FFFF277DFF7D52FFFF27A8FF7D52FFFFFF7D52FFFFFF7D52FF527D52A8FF%27FFA827FFFFFFAF00A8A8FFFF52A8FF27FF52525227A8FF27FFA828FFA8%52A82752277D7D27522852FF27FFFFFF27FF7D52FF7D52FF277D277DFD1D%FF696999FD06FFA827FFA8277DFF5252FFFF217DFF5252FFFFFF7D27A8FF%FFA827FF525227FFAF27A8A827FFFFFFA827A8FFFFFF27A8FF27A87DF852%A8FFA827A8A827FF7D52A827A8FFFF7D27FFA8FFA827A8FFA827FF7D27FF%5252A827277DFD1EFF93699AFD06FFA827272752FFFF7D52FFFF7D275221%A8FD04FF272727A8A827FFA8F852FFFF27FF8428FD04FF2727277DFF527D%FF27FF524C527DFFFF27FF8428FF7D52FF275227A8FF5227527EFF27A8FF%A821FF7D52FF7D52FF275252A8FD1DFF686999FD07FF7D7D7DFFFFFFA8A8%FFFFFFA853A8FD06FF7D7DA8FFA8FFFFA8A8FFA8A8FFFFA8FD04FFAF7D7D%7EFFA8FFFFA8FF2752A8F87DFFA8FFFFA8FFA8A8FFFF7D7DA8FFA87D59FF%FFA8A8FFA8A8FFFFA8FFA8FF7D27A85227FD1DFF93699AFD38FFFD0452A8%FD1EFFA82752277DFD1DFF68699AFD39FF84A8A8FD21FF7DA8FD1EFF9368%A0FD08FFA8FD33FFA8FD04FFAFA8FFA8FD05FFA8FD07FFA8A8A8FD1DFFA8%FD0AFF686975FD07FF527D7DA8FD12FFA8FD13FFA8FD09FF52A8FFFFA87D%7D7DA8A8A8FD04FFA8A8A87DFFFFFF7D7D7DA8FD0AFF7DFD12FFA8A8FD09%FF9369A0FD06FFA8A8FFFF7DFFFFA8A8FFFFFFA8FFFFFFA8A8FFFFA8FFFF%7D7DFFFFFFA8FFA8FFFFFFA8FFFFFFA8A8A8FFA87DA8FFFFFFA8A8FFFFA8%7DA8FFFFA87DFFFFFFA8FFA8FFFFFFA8FFA8A8FFFFFF7DFD04FFA8A8A8FF%FFFFA8FD05FFA8A8FFFFFFA8A8FFFFFFA8FFFFFFA8FFA8FFFFFFA8FFFFFF%A8FFA8696999FD06FFAF7DFFFF7DA8A87D7D7DFF59A859FFA8A87DA8A87D%7DAF7D7DA8FD067DFF7DA87DFFFD047DA8A852A8FFFFA87D7D7DA8A852A8%FFFF7DA8FFFFFFA8A87DFFFF7DA87DFF7DFFFFFF7DA8A8FFA87D7D7DA8A8%7DA852A87DFFFD047DFF7D7D7DA8FF7DA87DFF7D7DFD04A87D7D7DFFFD04%7D93699AFD06FFA87DFFFF7DA87DFFA87DA8A8FFA87DFFFFA87DFF7DFFFF%A8A8FF7DFF84A8FF7DA87DFFA87DA87EFF7DFFA8A8FFFFFFA87EFF7DA8FF%7EFFFFFFA8A8FFFFFF7DFF7DFFFD06A8FFFFFF7D7D7DA8FF7DFF7DA87EA8%FFFD06A8FF7DFF7DFFA8A8A884FF7DA8A8A8FF7DA87DAFFF7DA87DFFFF7D%686999FD07FF7DFFFF7E7D7D7DA87DA87DFFA884A87D7D7DA87DFFFF7DA8%FF7DFFA87DFF7DA87DA87DA87DA8FFA8A8FF7DFFFFFF7DA8FFA87DFF7DFF%FFFF7DA8FFFFFF7DFD06A87DA87DFFFFFF7DFFFFFFA8A8FFA87DA87DA87D%FF7DA87DFFFF7DA87D7DA8A8A87DA87DAF7DFFFFFD04A8FF7DFF7DA87D7D%93699AFD06FFA87DFFFF7DFF7DFFFFFFA8A8FFA87DA8A8FF7DFF7DFFFFA8%A8FF7DFF84A8FF84A87DFFFFFFA8A8FF7DAFA87DFFFFFFA87DFF7DFFFF7D%FFFFFFA87DFFFFFF7DFFA87D7DFFFD04A8FFFFFF7DFD04FF7DFF7DA8A87D%7DFFFF7EA8A8A8FF7DFF7DFFFFFFA8A8FFFFFF7DA8FF7DFF7DFFFF7DFFA8%7DA8FF6F939AFD07FF7D7D7DA8FFA87D7D84FF52847DFFA87D7D7DA8A8FF%FF7E7DA87DFFA8A8FF7DFF7D7D7DFFA8A8FFA8A8FF52A8FFFFA87D7D7DFF%FF7DFD04FF7D7D7DA8A8A8FF7D7DFFA8A8A87DFFFFFF7D7D7DA8A8A8FFA8%A8A87DA87DFF7DFF7DFFFF7DA8A87D7DA8FF7D7D7DFF7DFFFFFD04A8FF7D%FF7DA87DA8CAA8FD09FFA8FD05FFA8FFA87DA8FFFFFFA8FFFFFFAFFFFFFF%A8FD09FFA8A8FD08FFA8FFFFFFA8FD0BFFA8FD0FFFA8A8A8FD05FF7DA8FF%7DA8FD09FFA8FFFFFFA8FD0CFF7DFFFF52FD14FF7DFD48FFA8527D7DFD1B%FF7D7D7DA8%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2008-01-14T10:13:14+01:00</xap:CreateDate>
         <xap:ModifyDate>2008-02-27T17:50+01:00</xap:ModifyDate>
         <xap:MetadataDate>2008-02-27T17:50+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>36</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAJAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AGf8AOOdzcyfmC6ySu6/U&#xA;ZzRmJH24/HMHAPU9r2/EDT/5w/S+nczninj35r+WtG80/mz5H0DXIWu9IurTVHntBLLErNFHG6Em&#xA;Jkb4WAPXCqU+VvJGkQfmJ5m/LC7lu9Q8nCxtNWs7G4upw1vMHClY5Ynjk4kvWlewrXriqn+R/wCX&#xA;vlO48w+bb6e2mkuvLnme8tNGc3d3SGC2cekhX1eMnH/iwMT3xVFfk7c3En/OM95NJK7zfU9XPqsx&#xA;LVBmp8R3xV6F+UDvJ+VvlV3Yu7aZbFmY1JJjG5JwK818seR9F/M/zn531bzi1zfx6LrU+kaRYLcz&#xA;QwW8dp8IkQRMh5t169a9a4VTDUhf6L+cXlzR4tMsrj6rot5F5WuhNdm4jjt7cqsVyHcxycmSnLc7&#xA;1rXFUdb/AJ1ajfeR/JerWNjA+ueadTj0uWxYuI4Ssjx3UlK8wE9Ou/So64qkdnZWet+bfzX0nzPo&#xA;2nzalb2dlNdXduZ3im4WjPat6c7MI3jj47oBvXrirM/+ceyT+Tflmv8AviX/AKiJMCvJvMlz5A1D&#xA;84/O0f5hWOpa1BYPYRaJDZi8dLdfQLS7Wrx8eR4kV67++FWfeYPO/m3yzH5PsfJuk2VzoOvRx2ej&#xA;2WoPdQ3sTCHmgmeUv8KrSvKrbU98VVtL/OLzBY23ni2826TbprXkuCG6lj02V2guI7mL1YwrSDkt&#xA;NuRPj02wKgY/zQ/NaLzD5Ps9R03QrbT/ADg3K0eKa5uJYo1jWV1cqFXmUb4SoK1O5wqhdC1jzTa+&#xA;evzMeHT9Jj83adb6dPd3oe9NrcxLbF0Uxs5KMsPEfCPtda9cVa0X86vzIm0ryx5m1XQNNj8r+YL6&#xA;DTS1vcSm7V55Gi9YI3wBOSH4SSffviqL84fnh5hsvMXmCw0C00k2XldV+vNqt59WuLuT0/UeOzjF&#xA;KlRtv1P0DFUTr/553Dw+VYPLNvYx6h5msjqRn1q5+rWlpCooVkdaF3LhlHHw712VQU/53ebJ/wAt&#xA;tV806fYaauoeWb17LXrWSWSeCXiyKsllNCaMreqD8R+nxVQn5xa552k/KWfVPNWhaSdLkuYmutHW&#xA;6unl9BpITbEXEPoj1BJz59uNKb1GKp95o/MD80dP/MiPybo+maRfnUbR77TJppLiExxI5Um4+0GI&#xA;4nZBv+GKoaL89NUt/IOq6vqOjRHzJpGtN5duLCCUi1N2HVRKZWDFIviO57j3xVHaF56/M7/laFt5&#xA;N8x2WjW8U1g+qNLYyXMzmFWMYRWcKA4fryQKR0OBXqeKuxV2KuxV2KuxV2Kvl7/nG/8A8mG//MBP&#xA;/wATjzBwfU9t7Qf4v/nD9L6hzOeJeb/mP5U8+XfnLy35q8oLp01zosN7BLb6lJLGjfW1VQw9JTWg&#xA;U/tDFV35b+QvNth5k1jzl50vbW58x6vFFarb6eri1traLcIpkAZixAr4U6muKph+WvkfVfK955tm&#xA;v5oJU1/XbvVrMQM7FYLggqsvNEo47haj3xVgcH5X/m/ofl3VfInly80ZvKepPcpbahdfWFvbW1vC&#xA;fVjCIpQsAx4nxNduxV695V0CDy95a0vQoJGmi0y1itVlfZn9JAvIgeNK4FecHyP+aflPzbr2p+Rp&#xA;tJvtG8x3Rv7rTtVM8TwXT/3jxtCKEOfH2FNq4qntz5I8yX/5i+UvN97LZp+iNNnttWghaXe5uI6H&#xA;6uGTeMOTu7A07Yqx7y1+TGtaT+ZqavNeW83lLTbrUdU0WzXmJorrVVRJImQgp6cQQlG5VqfuKp7Z&#xA;/l3rMPnjz9rzz25tPNVnaW2nxhn9SN7e09BzMOAUDluOJbbAqcflZ5U1Dyl5A0fy7qMkU17p8TpN&#xA;JblmiJaV5PhLqjdH7qMVYhd+TfzT8vfmB5l8x+ThpF/ZeZ/qj3EGpvcRSwvZxGMBfSHEhubGtf1b&#xA;qp95h8oeaNfvvI2p3bWUF5oN39d1mKN5fTLNCUZbaqEt8R258dsVYl5/8mato8X5tebJmFxYeY9J&#xA;t4bO2s2f60v1e1+rymUFOISu54lvgr0wqwL8pLry/wCXPOHlSCzh8veYr3Wk9H67pfrjUrFmh5yt&#xA;LG7SQqo5EMVVDTlt2xV7HZ/l3rMPnjz9rzz25tPNVnaW2nxhn9SN7e09BzMOAUDluOJbbAqTRflH&#xA;5jT8r/J3lQ3NmdQ8vapa397Lzl9F4oLiSV1ib0+RbjIKclA98VQHmP8AKPzPB521vXNG0by15jsd&#xA;ekjuHi8xQGSa1mRODiJxG/wP16/R3JVE+c/yi1zUZvLOuaZpfl2fVNGsmsb/AMv3kDNpDpJ8X+jJ&#xA;wqvpSMxSqj+BVRl5+W3mXVPyl17yw2l+X/L+s6s6mGHR0kgseKtEwaciLl6n7thUKduOBU5/NjyD&#xA;q/nD8tJ/K+mzW8N/L9V4y3DOsP7iRHepRHbopp8OKq2o+SNUufzd0nzkk0A0yw0uawlgZn9cyySM&#xA;ysqheHGjb1avtiryr8zvJWp+V/y486HUZ42h8y+a01K3mgLyQ29tcXKOGvUaMVVePxKtRy47nCqJ&#xA;/I++0PSPP8vlrTLXQtVa6sGuG8x6CbhmSOJwohuRM0ypyNNo3A+ztir6CwK7FXYq7FXYq7FXYq+X&#xA;v+cb/wDyYb/8wE//ABOPMHB9T23tB/i/+cP0vqHM54lINf1zWLXVrDS9KtYJ7m8jllL3EjIirFxq&#xA;PhVj+1iq/Q/MNxdXV5p2qWosdSsVWSVVf1InicGkiPRdtt69MVR9hrmjag8iWN9b3TxbyLDIjlR4&#xA;kKTt74qstPMWgXlz9VtNStri57RRTI7GgqaAE1pirj5i0EX31A6jbC95cPq/qpz51px41ry9uuKr&#xA;5tc0WCZoJtQtopkrzieVFZeKeo3IE1FE+LftiqB0vzl5e1GO8kjvIYkspXjlMksQBRGCiYUY/u3J&#xA;HFu+Koh/NHlpFd21W0Cxtxc+vHs3h9rriqIutY0m0tEu7q8hhtZKelO8iqj1FRxYmjVHhirTa1o6&#xA;Wcd699brZynjFctKgjZt9lcniT8JxVSTzHoD2Ut9HqNs9pAeMsyypwVj0UtWgJ7eOKtaB5h03XbB&#xA;LyxlVgwBkh5IZIya0WRVLcTtiqpca7otteJZXF/bw3j0427yormvT4Sa79vHFWN6rrek6P5is9N0&#xA;iDS4Ly6L/Xp5GjhMYHEqjcBy5ycvhBxVPvMeuLo2nrcCFrm4mlS3tLZSFMk0poi8j0xVAHVfN1tY&#xA;Xd1qFlYwCGIyQn6yQvOoosjOqKooT8XLFU8t721nMiRzRvLBxFxGjqxjLDkA1Om24riqWy69W7f6&#xA;q9tc2IsZLyOWOZWd3R+NFRSax/5Y2rtiqK0HUn1PRbLUHQRvdQpKyKagFhWgriqR6Z5h81auq3un&#xA;6darpUkrpG887iZkjkMbNxVCAfhO2Kp1ceY/L9tP6FxqdrFOG9MxPNGGDeBUmo698VVdR1LR7SML&#xA;qV1b28cwIC3MiIrjuPjIriqV217pFvLZJ5eTTmtby4MV1JbyQpukZf4BH/eOB+z1piqO/wAS+Xfr&#xA;CWw1O1NxIxRIhNGWLA040B612piqrf65o2nypFfX0FrLJvGk0iISPGjEbYquv9W0vT4lmvruG1ic&#xA;0R5XVAx/yanfFXS6xpEUEVxLfW8dvPvBM0qKj0FfgYmjbb7YqhItcRr+cPLarpcdrHdR3QnTkVev&#xA;xMtfhSgqG6HFURZa7ot9cPb2V/b3M8Yq8UUqOwHjRScVU5/Mvly3maG41WzhmQ0eOS4iVlI7EFqj&#xA;FXzh/wA43/8Akw3/AOYCf/iceYOD6ntvaD/F/wDOH6X1Dmc8SxPX76ysvO+iT3lxHbQC1uwZZnWN&#xA;Kn06DkxAxVjnmSb9Lz+aNS0lzcWkOmxWZni3R3EollCMNmCx9aYVR+m22n3eqWN7b6tpDNaW86pZ&#xA;6dH6UskckJHF1M0jfBQN9nbFUssbjRpfK3lW3spIH1pb22KpCUM6kPWUuF+IDh9rliqn5n1r9Iab&#xA;qTy3On2skOoCGDTliH11jDcIpk9QyBlam5+DptihlnluztJPNPmaeSCN50uYkWVlUuFNutVDEVoc&#xA;CWLXjaevk/znBGYlu49RueUS8RIIvrKcdhvx8O2FWRppGkj8wpLcWUAgGjoREI0Cgm5dagAUrx2w&#xA;KxPS5GS18pTXE9rBbiyukhn1FDJbLL6u4+3GFbgNiWwoTGXS7GOz01VvLPU7W98xwyyR2ig2yF4W&#xA;5Rheco96V74pTyGytYvOetW0MCJBNpkLyQqoCMwd1BKgUrTAqv8AlrNp8nlGwFq0bTJGFuglOQcE&#xA;j46b1+eKsYu5/L0Wj+cLfVDANXkvLw28U3H6wwcD6qYw3xlelOPTCqeG1r5q8sC8iV7r9HTfWC6g&#xA;sZEWLdqjqDXFUZ5/YwWWl6gylrbTtTtrq7YAkrCvJGegB+zzGBVHzjruiah5Q1eKw1C2upRbFzHD&#xA;KjuF5KKlVJIFSMVSfzNfPoN9eyxVB17Skit6dWvIiIUC+/pzA/RhVFHT003X0sE+za+WZYqjuVlU&#xA;E/Sd8VZD5J/5RDR/+YSL/iIwKw3yda6CNOt/rfmO5sb+O4mWTTBfiBFdbh6L6BI+1tUd64VRb2Fj&#xA;Np3nyeW3iknSS54SsilxxtQy0Yioo24xVL77U103V9Ku5oLe5E2iW4JvuZRSrblWSObh1+IsAPfF&#xA;UZpljHZt5TWO4t7hZr+7n5WhrAvqRO3CM+C9N8VQc1hYj8sNVvBbxi7FzMwuAi+pyW7op505VA2x&#xA;VE3wiHmzzFDfXemWhuBAI21WMsWgMPEeixliUAGtad8VUZLcabrWixTajYPaRaR6VnqF+nq2rusp&#xA;5emRIihvTK0PLpiqtBpFhHN5etjc2mqWdxql3MBbqrWy84S/pIpaUURugriqI80qqan5mRAFVdBQ&#xA;KoFAAHkoAMVRRsrO113yUbaCOAvFchzGipyH1OtDxArvvirFNKkhvdOh8vSfo+xkW6Nb65Li7/d3&#xA;BbYmP03lNONVkIptih6Zpf8AhT6yf0V9Q+s8TX6r6Pqcdq/3e9MqjwXtTk5PFr18VedptljjoHVf&#xA;0HwT9K/VeG/p/WvTp2rT1MVRFr9T+rJ9U9P6tT4PS48Ke3HbFUui/wAN0ufqH1P6zwf1Pq/pep0N&#xA;a8N8VSr8u/0L/h3TPR+r/pH6uPV4+n69Kn7VPixVPn/Qf1ibn9W+s/D9Yr6fOlfh51369K4qio/q&#xA;3qy+lw9Wo9bjTlWm3Km/TxxVCH9A+vc1+q/WKD65X0+dK/D6nfr05Yqi/wDRvrP7H1nh7c+Ffv41&#xA;xVDXP6F+oD6z9W/R/wCz6np+jXfpy+HFXW36F+rxfVfq31bmPQ9L0+HqU24cduVPDFUSPq31huPD&#xA;6xxHOlOfGppXvTFVDT/0TWb9H/V68/8ASPq/D7f+Xw/a+eKrbj9C/X4frH1b9If8e/qen63+wr8X&#xA;3YqiW+r+unLh69G9OtOfHblx706VxVe/Dg3OnCh5V6U71riqWWn+F+M/1T6jxofrPpejSlRXnx96&#xA;dcVR8v1WsXrcK8v3HOledDThXvSvTFXP9U9U8/T9X0zXlTl6dd+u/GuKrofR9FPQ4+jxHp8KceNN&#xA;uNNqYqlt1/hb6+Prf1H9IVXj6vo+ty/Zpy+KvhiqPH1LhPT0+FT9Z+zStPi9T/Y9a4qwjzF+mf8A&#xA;Fq/4V4/pD9Hp9Z9b0/q31b1G9PhX4q1r9namFUx/L/8AR/6FPL/ez67cfWPV9Ov1qv7z0uHwcadO&#xA;HbArJD+jvqr19H6pU+p9n061+Ll+z9rriqjqf6DrF+lPqta/ufrXp9f8nn/DFW7z9C/UU+ufVvqG&#xA;3p+t6fo0p8NOXw9OmKrrf9EenB9W+r+lyP1b0+HHlTfhTvTwxVUl+ocpfW9LlwHr8+NfT3pzr+z1&#xA;64qub6p6kPL0/U3+r1pX7O/D/Y+HbFXkT/pT/DKetX/AfrfB/c/XPT+sGn08+tPiwof/2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:84DF78841BC4DC11B0F7C948713094C1</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:BB79A405E6EE11DCA9DBE848ED1657C8</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:83DF78841BC4DC11B0F7C948713094C1</stRef:instanceID>
            <stRef:documentID>uuid:82DF78841BC4DC11B0F7C948713094C1</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5080.000000</stDim:w>
            <stDim:h>5080.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.609375</xapG:cyan>
                           <xapG:magenta>67.578125</xapG:magenta>
                           <xapG:yellow>66.796875</xapG:yellow>
                           <xapG:black>89.843750</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>6.250000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>96.093750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>62.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>51.562500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.890625</xapG:cyan>
                           <xapG:magenta>76.562500</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>26.953125</xapG:cyan>
                           <xapG:magenta>81.250000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>16.796875</xapG:cyan>
                           <xapG:magenta>97.656250</xapG:magenta>
                           <xapG:yellow>92.187500</xapG:yellow>
                           <xapG:black>6.640625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.390625</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>79.296875</xapG:magenta>
                           <xapG:yellow>96.484375</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>98.046875</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>34.765625</xapG:magenta>
                           <xapG:yellow>86.718750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>4.687500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>92.968750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>18.750000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>97.656250</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>98.828125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>99.218750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>85.937500</xapG:cyan>
                           <xapG:magenta>17.578125</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>3.906250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>89.843750</xapG:cyan>
                           <xapG:magenta>33.203125</xapG:magenta>
                           <xapG:yellow>98.437500</xapG:yellow>
                           <xapG:black>25.781250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.781250</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>74.609375</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984375</xapG:magenta>
                           <xapG:yellow>45.703125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.531250</xapG:cyan>
                           <xapG:magenta>14.843750</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.109375</xapG:cyan>
                           <xapG:magenta>52.343750</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>98.828125</xapG:cyan>
                           <xapG:magenta>96.093750</xapG:magenta>
                           <xapG:yellow>3.515625</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>26.171875</xapG:yellow>
                           <xapG:black>24.609375</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>98.046875</xapG:magenta>
                           <xapG:yellow>0.781250</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>49.218750</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>1.171875</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>34.765625</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>37.109375</xapG:yellow>
                           <xapG:black>10.937500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>11.718750</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>49.218750</xapG:yellow>
                           <xapG:black>0.781250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>96.484375</xapG:magenta>
                           <xapG:yellow>20.312500</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656250</xapG:cyan>
                           <xapG:magenta>27.343750</xapG:magenta>
                           <xapG:yellow>39.843750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.843750</xapG:cyan>
                           <xapG:magenta>42.578125</xapG:magenta>
                           <xapG:yellow>52.343750</xapG:yellow>
                           <xapG:black>6.640625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.390625</xapG:cyan>
                           <xapG:magenta>52.734375</xapG:magenta>
                           <xapG:yellow>60.546875</xapG:yellow>
                           <xapG:black>23.437500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>57.421875</xapG:cyan>
                           <xapG:magenta>60.156250</xapG:magenta>
                           <xapG:yellow>63.671875</xapG:yellow>
                           <xapG:black>41.796875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656250</xapG:cyan>
                           <xapG:magenta>38.281250</xapG:magenta>
                           <xapG:yellow>63.281250</xapG:yellow>
                           <xapG:black>1.171875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>31.640625</xapG:cyan>
                           <xapG:magenta>48.828125</xapG:magenta>
                           <xapG:yellow>73.828125</xapG:yellow>
                           <xapG:black>9.765625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.937500</xapG:cyan>
                           <xapG:magenta>57.031250</xapG:magenta>
                           <xapG:yellow>83.593750</xapG:yellow>
                           <xapG:black>22.656250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.062500</xapG:cyan>
                           <xapG:magenta>63.671875</xapG:magenta>
                           <xapG:yellow>92.968750</xapG:yellow>
                           <xapG:black>35.546875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>41.406250</xapG:cyan>
                           <xapG:magenta>69.531250</xapG:magenta>
                           <xapG:yellow>96.484375</xapG:yellow>
                           <xapG:black>48.828125</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>47.656250</xapG:cyan>
                           <xapG:magenta>73.046875</xapG:magenta>
                           <xapG:yellow>83.203125</xapG:yellow>
                           <xapG:black>67.968750</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Web Color Group</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.781250</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984375</xapG:magenta>
                           <xapG:yellow>45.703125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>98.046875</xapG:magenta>
                           <xapG:yellow>0.781250</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>48.437500</xapG:cyan>
                           <xapG:magenta>36.328125</xapG:magenta>
                           <xapG:yellow>33.593750</xapG:yellow>
                           <xapG:black>1.562500</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Grayscale</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -25.3169 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 25.3169 li180.855 25.3169 li180.855 0 licpclp[1 0 0 1 0 0 ] concat3.57178 0.234375 mo3.57178 22.9116 li0 22.9116 li0 0.234375 li3.57178 0.234375 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0 0.91 0.72 0.23 cmykf19.3057 8.34326 mo18.667 8.97266 17.7046 9.2583 16.5366 9.2583 cv15.6528 9.2583 14.6128 9.18604 14.2578 9.12646 cv14.0776 9.09619 13.9751 9 13.9751 8.78955 cv13.9751 0.613281 li13.9751 0.408691 14.0776 0.306152 14.2578 0.276855 cv14.6128 0.216309 15.6528 0.144043 16.5366 0.144043 cv17.6938 0.144043 18.6494 0.42041 19.2876 1.03711 cv20.0464 1.77002 20.2456 2.77637 20.2456 4.1377 cv20.2456 5.26465 li20.2456 6.61084 20.0537 7.60547 19.3057 8.34326 cvcp18.8691 4.19434 mo18.8691 3.03467 18.7163 2.31787 18.2012 1.84082 cv17.7832 1.4541 17.1992 1.31641 16.5366 1.31641 cv16.0317 1.31641 15.6885 1.33447 15.3643 1.35254 cv15.3643 8.05615 li15.6826 8.07422 16.0317 8.08594 16.5366 8.08594 cv17.2261 8.08594 17.8306 7.93555 18.2515 7.51025 cv18.7358 7.021 18.8691 6.33252 18.8691 5.20801 cv18.8691 4.19434 licp31.5923 9.2583 mo29.6504 9.2583 28.3994 8.3208 28.3994 5.8916 cv28.3994 0.462891 li28.3994 0.336426 28.502 0.234375 28.6343 0.234375 cv29.5542 0.234375 li29.6802 0.234375 29.7886 0.330566 29.7886 0.462891 cv29.7886 5.8916 li29.7886 7.35254 30.1973 8.09814 31.5923 8.09814 cv32.9868 8.09814 33.3955 7.35889 33.3955 5.8916 cv33.3955 0.462891 li33.3955 0.336426 33.4976 0.234375 33.6299 0.234375 cv34.5498 0.234375 li34.6763 0.234375 34.7842 0.330566 34.7842 0.462891 cv34.7842 5.8916 li34.7842 8.3208 33.5337 9.2583 31.5923 9.2583 cvcp27.0327 1.40088 mo24.8086 1.40088 li24.8086 8.92773 li24.8086 9.05371 24.7124 9.16797 24.5801 9.16797 cv23.6543 9.16797 li23.5278 9.16797 23.4258 9.06006 23.4258 8.92773 cv23.4258 1.40088 li21.2012 1.40088 li21.0693 1.40088 20.9609 1.32861 20.9609 1.19629 cv20.9609 0.456543 li20.9609 0.330566 21.0693 0.234375 21.2012 0.234375 cv27.0327 0.234375 li27.1655 0.234375 27.2676 0.324707 27.2676 0.456543 cv27.2676 1.19629 li27.2676 1.32227 27.1655 1.40088 27.0327 1.40088 cvcp47.7905 8.92139 mo47.7905 9.05371 47.8984 9.16797 48.0308 9.16797 cv48.8726 9.16797 li49.0044 9.16797 49.1128 9.05371 49.1128 8.92139 cv49.1128 2.71094 li49.1128 2.57861 49.0044 2.4707 48.8726 2.4707 cv46.5347 2.4707 li46.4019 2.4707 46.2998 2.57861 46.2998 2.71143 cv46.2998 2.71143 46.2998 2.65771 46.2998 2.78906 cv46.2998 2.92041 46.3887 3.03027 46.5347 3.07324 cv47.7905 3.43896 li47.7905 8.92139 licp49.1431 1.25049 mo49.1431 0.240234 li49.1431 0.10791 49.0347 0 48.9023 0 cv48.0127 0 li47.8804 0 47.7661 0.10791 47.7661 0.240234 cv47.7661 1.25049 li47.7661 1.38232 47.8804 1.49072 48.0127 1.49072 cv48.9023 1.49072 li49.0347 1.49072 49.1431 1.38232 49.1431 1.25049 cvcp51.7397 2.70508 mo51.7026 2.55127 51.6079 2.4707 51.5054 2.4707 cv50.5737 2.4707 li50.4253 2.4707 50.3511 2.60254 50.3931 2.75342 cv51.9624 8.35059 li52.1479 9.01318 52.6128 9.2583 53.249 9.2583 cv53.814 9.2583 54.3403 9.06787 54.5415 8.35059 cv56.1108 2.75342 li56.1528 2.59229 56.0713 2.4707 55.9302 2.4707 cv54.9985 2.4707 li54.8921 2.4707 54.7915 2.56885 54.7583 2.70508 cv53.4897 7.8457 li53.4248 8.10596 53.3472 8.16992 53.249 8.16992 cv53.1406 8.16992 53.0723 8.104 53.0083 7.8457 cv51.7397 2.70508 licp95.8872 8.92139 mo95.8872 9.05371 95.9956 9.16797 96.1216 9.16797 cv96.9692 9.16797 li97.1011 9.16797 97.2104 9.04785 97.2104 8.92139 cv97.2104 3.96729 li97.7388 3.69678 98.2437 3.5166 98.7007 3.5166 cv99.6206 3.5166 99.8726 3.85303 99.8726 4.9834 cv99.8726 8.92139 li99.8726 9.05371 99.9819 9.16797 100.113 9.16797 cv100.956 9.16797 li101.087 9.16797 101.196 9.05371 101.196 8.92139 cv101.196 4.8418 li101.196 3.50635 100.734 2.38672 99.1089 2.38672 cv98.3579 2.38672 97.854 2.54053 97.1226 2.99121 cv97.1128 2.71094 li97.1089 2.57861 97.0024 2.4707 96.8706 2.4707 cv94.6372 2.4707 li94.5054 2.4707 94.4028 2.57861 94.4028 2.71143 cv94.4028 2.71143 94.4028 2.65771 94.4028 2.78906 cv94.4028 2.92041 94.4917 3.03027 94.6372 3.07324 cv95.8872 3.43896 li95.8872 8.92139 licp114.839 7.99072 mo114.298 8.03418 113.462 8.10986 112.674 8.10986 cv111.544 8.10986 111.117 7.43066 111.117 6.3667 cv111.117 6.26416 li115.091 6.26416 li115.248 6.26416 115.326 6.15576 115.326 5.98193 cv115.326 5.60449 li115.326 3.85498 114.679 2.38672 112.572 2.38672 cv110.49 2.38672 109.794 3.80664 109.794 5.60449 cv109.794 6.02246 li109.794 8.3252 110.943 9.2583 112.615 9.2583 cv113.558 9.2583 114.123 9.1875 114.857 9.05371 cv115.06 9.0166 115.103 8.93359 115.103 8.75928 cv115.103 8.15771 li115.103 8.0376 114.996 7.97803 114.887 7.98682 cv114.839 7.99072 licp113.992 5.29639 mo111.123 5.29639 li111.123 5.21729 li111.123 4.08154 111.682 3.51709 112.572 3.51709 cv113.474 3.51709 113.992 4.05762 113.992 5.21729 cv113.992 5.29639 licp116.299 2.4707 mo116.167 2.4707 116.065 2.57861 116.065 2.71143 cv116.065 2.71143 116.065 2.65771 116.065 2.78906 cv116.065 2.92041 116.154 3.03027 116.299 3.07324 cv117.506 3.43896 li117.506 8.92139 li117.506 9.05371 117.615 9.16797 117.741 9.16797 cv118.588 9.16797 li118.72 9.16797 118.83 9.04785 118.83 8.92139 cv118.83 3.98535 li119.382 3.67334 119.887 3.5166 120.488 3.5166 cv120.638 3.5166 120.735 3.42676 120.735 3.29443 cv120.735 2.61475 li120.735 2.47656 120.638 2.38672 120.488 2.38672 cv119.977 2.38672 119.4 2.51123 118.724 3.00342 cv118.714 2.71094 li118.709 2.57861 118.603 2.4707 118.471 2.4707 cv116.299 2.4707 licp107.875 7.99072 mo107.334 8.03418 106.498 8.10986 105.71 8.10986 cv104.58 8.10986 104.154 7.43066 104.154 6.3667 cv104.154 6.26416 li108.126 6.26416 li108.283 6.26416 108.361 6.15576 108.361 5.98193 cv108.361 5.60449 li108.361 3.85498 107.714 2.38672 105.608 2.38672 cv103.526 2.38672 102.831 3.80664 102.831 5.60449 cv102.831 6.02246 li102.831 8.3252 103.979 9.2583 105.65 9.2583 cv106.593 9.2583 107.158 9.1875 107.892 9.05371 cv108.097 9.0166 108.138 8.93359 108.138 8.75928 cv108.138 8.15771 li108.138 8.0376 108.031 7.97803 107.923 7.98682 cv107.875 7.99072 licp107.027 5.29639 mo104.16 5.29639 li104.16 5.21729 li104.16 4.08154 104.718 3.51709 105.608 3.51709 cv106.509 3.51709 107.027 4.05762 107.027 5.21729 cv107.027 5.29639 licp126.804 8.92139 mo126.804 9.05371 126.912 9.16797 127.039 9.16797 cv127.886 9.16797 li128.018 9.16797 128.126 9.04785 128.126 8.92139 cv128.126 3.96729 li128.656 3.69678 129.16 3.5166 129.617 3.5166 cv130.537 3.5166 130.79 3.85303 130.79 4.9834 cv130.79 8.92139 li130.79 9.05371 130.898 9.16797 131.03 9.16797 cv131.872 9.16797 li132.003 9.16797 132.113 9.05371 132.113 8.92139 cv132.113 4.8418 li132.113 3.50635 131.651 2.38672 130.026 2.38672 cv129.275 2.38672 128.771 2.54053 128.04 2.99121 cv128.03 2.71094 li128.025 2.57861 127.919 2.4707 127.787 2.4707 cv125.554 2.4707 li125.421 2.4707 125.32 2.57861 125.32 2.71143 cv125.32 2.71143 125.32 2.65771 125.32 2.78906 cv125.32 2.92041 125.408 3.03027 125.554 3.07324 cv126.804 3.43896 li126.804 8.92139 licp122.882 8.92139 mo122.882 9.05371 122.991 9.16797 123.123 9.16797 cv123.964 9.16797 li124.097 9.16797 124.205 9.05371 124.205 8.92139 cv124.205 2.71094 li124.205 2.57861 124.097 2.4707 123.964 2.4707 cv121.626 2.4707 li121.495 2.4707 121.392 2.57861 121.392 2.71143 cv121.392 2.71143 121.392 2.65771 121.392 2.78906 cv121.392 2.92041 121.481 3.03027 121.626 3.07324 cv122.882 3.43896 li122.882 8.92139 licp124.236 1.25049 mo124.236 0.240234 li124.236 0.10791 124.126 0 123.995 0 cv123.105 0 li122.972 0 122.859 0.10791 122.859 0.240234 cv122.859 1.25049 li122.859 1.38232 122.972 1.49072 123.105 1.49072 cv123.995 1.49072 li124.126 1.49072 124.236 1.38232 124.236 1.25049 cvcp76.7168 8.92139 mo76.7168 9.05371 76.8252 9.16797 76.9512 9.16797 cv77.7988 9.16797 li77.9312 9.16797 78.0396 9.04785 78.0396 8.92139 cv78.0396 3.96729 li78.5684 3.69678 79.0732 3.5166 79.5303 3.5166 cv80.4502 3.5166 80.7026 3.85303 80.7026 4.9834 cv80.7026 8.92139 li80.7026 9.05371 80.811 9.16797 80.9434 9.16797 cv81.7847 9.16797 li81.917 9.16797 82.0254 9.05371 82.0254 8.92139 cv82.0254 4.8418 li82.0254 3.50635 81.564 2.38672 79.939 2.38672 cv79.1875 2.38672 78.6841 2.54053 77.9526 2.99121 cv77.9429 2.71094 li77.938 2.57861 77.832 2.4707 77.6997 2.4707 cv75.4668 2.4707 li75.3345 2.4707 75.2324 2.57861 75.2324 2.71143 cv75.2324 2.71143 75.2324 2.65771 75.2324 2.78906 cv75.2324 2.92041 75.3213 3.03027 75.4668 3.07324 cv76.7168 3.43896 li76.7168 8.92139 licp91.9663 8.92139 mo91.9663 9.05371 92.0737 9.16797 92.2065 9.16797 cv93.0483 9.16797 li93.1802 9.16797 93.2886 9.05371 93.2886 8.92139 cv93.2886 2.71094 li93.2886 2.57861 93.1802 2.4707 93.0483 2.4707 cv90.7104 2.4707 li90.5776 2.4707 90.4761 2.57861 90.4761 2.71143 cv90.4761 2.71143 90.4761 2.65771 90.4761 2.78906 cv90.4761 2.92041 90.564 3.03027 90.7104 3.07324 cv91.9663 3.43896 li91.9663 8.92139 licp93.3188 1.25049 mo93.3188 0.240234 li93.3188 0.10791 93.2104 0 93.0786 0 cv92.189 0 li92.0562 0 91.9419 0.10791 91.9419 0.240234 cv91.9419 1.25049 li91.9419 1.38232 92.0562 1.49072 92.189 1.49072 cv93.0786 1.49072 li93.2104 1.49072 93.3188 1.38232 93.3188 1.25049 cvcp74.2788 8.93359 mo74.2788 8.24219 li74.2788 8.13428 74.2002 8.0498 74.0918 8.0498 cv71.7051 8.0498 li70.7192 8.0498 70.4912 7.76123 70.4912 6.90723 cv70.4912 5.12207 li73.9658 5.12207 li74.0981 5.12207 74.2061 5.01367 74.2061 4.88135 cv74.2061 4.22021 li74.2061 4.0874 74.0981 3.97949 73.9658 3.97949 cv70.4912 3.97949 li70.4912 2.49463 li70.4912 1.64111 70.7192 1.35254 71.7051 1.35254 cv74.0918 1.35254 li74.2002 1.35254 74.2788 1.26855 74.2788 1.16016 cv74.2788 0.474609 li74.2788 0.354492 74.2246 0.280762 74.0981 0.264648 cv73.6538 0.205566 72.8535 0.144043 71.7837 0.144043 cv70.8555 0.144043 70.1265 0.267578 69.647 0.753906 cv69.2705 1.13477 69.1143 1.68262 69.1143 2.49463 cv69.1143 6.90723 li69.1143 7.70947 69.2656 8.25195 69.6328 8.63379 cv70.1108 9.13086 70.8462 9.2583 71.7837 9.2583 cv72.8535 9.2583 73.6777 9.20068 74.0981 9.14404 cv74.2246 9.12646 74.2788 9.05371 74.2788 8.93359 cvcp138.163 9.71533 mo138.163 10.2622 137.904 10.5806 136.642 10.5806 cv135.41 10.5806 135.06 10.2202 135.06 9.63721 cv135.06 9.52881 li135.06 9 135.241 8.771 135.505 8.49463 cv136.72 8.79492 li137.892 9.08398 138.163 9.2583 138.163 9.625 cv138.163 9.71533 licp138.888 3.42529 mo139.789 3.15869 li139.934 3.11523 140.023 3.00537 140.023 2.87402 cv140.023 2.74268 140.023 2.71143 140.023 2.71143 cv140.023 2.57861 139.92 2.4707 139.789 2.4707 cv136.593 2.4707 li134.519 2.4707 133.828 3.50488 133.828 4.64111 cv133.828 4.73096 li133.828 5.33838 133.984 5.771 134.351 6.13184 cv134.02 6.34277 133.864 6.70313 133.864 7.05176 cv133.864 7.06396 li133.864 7.4668 134.051 7.89307 134.453 8.104 cv134.062 8.42871 133.767 8.94531 133.767 9.52881 cv133.767 9.63721 li133.767 10.8574 134.718 11.5908 136.642 11.5908 cv138.65 11.5908 139.486 10.9058 139.486 9.71533 cv139.486 9.625 li139.486 8.4165 138.391 8.12207 136.984 7.7793 cv135.379 7.38232 li135.103 7.31641 134.988 7.21436 134.988 6.9917 cv134.988 6.84766 135.066 6.72705 135.241 6.63086 cv135.535 6.75098 135.957 6.85352 136.593 6.85352 cv138.427 6.85352 139.353 6.14404 139.353 4.73096 cv139.353 4.64111 li139.353 4.1333 139.198 3.73047 138.888 3.42529 cvcp138.048 4.74902 mo138.048 5.41064 137.742 5.8374 136.593 5.8374 cv135.343 5.8374 135.132 5.23584 135.132 4.74902 cv135.132 4.65283 li135.132 4.03369 135.41 3.49854 136.593 3.49854 cv137.759 3.49854 138.048 4.00342 138.048 4.65283 cv138.048 4.74902 licp88.061 9.71533 mo88.061 10.2622 87.8022 10.5806 86.54 10.5806 cv85.3076 10.5806 84.9585 10.2202 84.9585 9.63721 cv84.9585 9.52881 li84.9585 9 85.1392 8.771 85.4038 8.49463 cv86.6177 8.79492 li87.79 9.08398 88.061 9.2583 88.061 9.625 cv88.061 9.71533 licp88.7871 3.42529 mo89.6865 3.15869 li89.8325 3.11523 89.9214 3.00537 89.9214 2.87402 cv89.9214 2.74268 89.9214 2.71143 89.9214 2.71143 cv89.9214 2.57861 89.8193 2.4707 89.6865 2.4707 cv86.4917 2.4707 li84.4175 2.4707 83.7261 3.50488 83.7261 4.64111 cv83.7261 4.73096 li83.7261 5.33838 83.8823 5.771 84.249 6.13184 cv83.9189 6.34277 83.7622 6.70313 83.7622 7.05176 cv83.7622 7.06396 li83.7622 7.4668 83.9497 7.89307 84.3511 8.104 cv83.9604 8.42871 83.666 8.94531 83.666 9.52881 cv83.666 9.63721 li83.666 10.8574 84.6157 11.5908 86.54 11.5908 cv88.5479 11.5908 89.3833 10.9058 89.3833 9.71533 cv89.3833 9.625 li89.3833 8.4165 88.2891 8.12207 86.8823 7.7793 cv85.2773 7.38232 li85.0005 7.31641 84.8867 7.21436 84.8867 6.9917 cv84.8867 6.84766 84.9648 6.72705 85.1392 6.63086 cv85.4336 6.75098 85.8545 6.85352 86.4917 6.85352 cv88.3257 6.85352 89.2515 6.14404 89.2515 4.73096 cv89.2515 4.64111 li89.2515 4.1333 89.0957 3.73047 88.7871 3.42529 cvcp87.9468 4.74902 mo87.9468 5.41064 87.6401 5.8374 86.4917 5.8374 cv85.2412 5.8374 85.0308 5.23584 85.0308 4.74902 cv85.0308 4.65283 li85.0308 4.03369 85.3076 3.49854 86.4917 3.49854 cv87.6582 3.49854 87.9468 4.00342 87.9468 4.65283 cv87.9468 4.74902 licp61.916 8.92139 mo61.916 9.05371 62.0181 9.16797 62.1445 9.16797 cv63.0161 9.16797 li63.1484 9.16797 63.2388 9.04785 63.2388 8.92139 cv63.2388 0.306152 li63.2388 0.173828 63.1426 0.0717773 63.0161 0.0717773 cv60.6782 0.0717773 li60.5459 0.0717773 60.4434 0.180176 60.4434 0.3125 cv60.4434 0.3125 60.4434 0.258789 60.4434 0.390137 cv60.4434 0.521484 60.5322 0.631348 60.6782 0.674316 cv61.916 1.04004 li61.916 8.92139 licp58.0449 8.92139 mo58.0449 9.05371 58.1528 9.16797 58.2856 9.16797 cv59.1274 9.16797 li59.2593 9.16797 59.3677 9.05371 59.3677 8.92139 cv59.3677 2.71094 li59.3677 2.57861 59.2593 2.4707 59.1274 2.4707 cv56.8906 2.4707 li56.769 2.4707 56.6748 2.57861 56.6748 2.71143 cv56.6748 2.71143 56.6748 2.65771 56.6748 2.78906 cv56.6748 2.92041 56.7563 3.03027 56.8906 3.07324 cv58.0449 3.43896 li58.0449 8.92139 licp59.3979 1.25049 mo59.3979 0.240234 li59.3979 0.10791 59.2896 0 59.1572 0 cv58.2676 0 li58.1353 0 58.021 0.10791 58.021 0.240234 cv58.021 1.25049 li58.021 1.38232 58.1353 1.49072 58.2676 1.49072 cv59.1572 1.49072 li59.2896 1.49072 59.3979 1.38232 59.3979 1.25049 cvcp45.6411 7.9541 mo45.7944 7.94092 45.8735 8.02686 45.8735 8.17578 cv45.8735 8.8252 li45.8735 8.98193 45.7661 9.05029 45.6211 9.08398 cv45.2798 9.16211 44.6475 9.2583 43.6733 9.2583 cv42.8823 9.2583 41.9556 9.06641 41.2974 8.396 cv40.6191 7.70557 40.3848 6.75098 40.3848 5.27637 cv40.3848 4.12549 li40.3848 2.6001 40.6304 1.63721 41.3384 0.950684 cv41.9922 0.316895 42.8984 0.144043 43.6733 0.144043 cv44.5151 0.144043 45.2798 0.263184 45.6333 0.336426 cv45.7661 0.36377 45.8618 0.414551 45.8618 0.552734 cv45.8618 1.26221 li45.8618 1.37061 45.8198 1.45459 45.6694 1.45459 cv45.6636 1.45459 45.6514 1.45508 45.6392 1.45459 cv45.2114 1.43652 44.3584 1.35254 43.6914 1.35254 cv43.1841 1.35254 42.7349 1.48389 42.3989 1.8125 cv41.874 2.32617 41.7739 3.07129 41.7739 4.21094 cv41.7739 5.19092 li41.7739 6.30615 41.8672 7.03662 42.3823 7.56201 cv42.7197 7.90674 43.1753 8.0498 43.6914 8.0498 cv44.3525 8.0498 45.1782 7.99219 45.605 7.95654 cv45.6411 7.9541 licp0 0 0 1 cmykf179.569 18.4263 mo179.569 17.7046 179.244 17.1392 177.945 17.1392 cv176.599 17.1392 176.322 17.7524 176.322 18.4263 cv176.322 18.522 li176.322 19.0513 176.562 19.7485 177.945 19.7485 cv179.244 19.7485 179.569 19.2446 179.569 18.522 cv179.569 18.4263 licp179.666 23.3569 mo179.666 22.8872 179.281 22.6958 178.198 22.4185 cv176.839 22.0708 li176.49 22.3706 176.25 22.6714 176.25 23.2974 cv176.25 23.4048 li176.25 24.0786 176.646 24.4985 177.982 24.4985 cv179.353 24.4985 179.666 24.1138 179.666 23.4536 cv179.666 23.3569 licp180.639 17.104 mo180.207 17.188 li180.422 17.4165 180.615 17.7769 180.615 18.4263 cv180.615 18.522 li180.615 19.8452 179.797 20.5786 177.945 20.5786 cv177.308 20.5786 176.9 20.4829 176.55 20.3384 cv176.346 20.4351 176.25 20.5669 176.25 20.7466 cv176.25 20.9517 176.346 21.0601 176.623 21.1323 cv178.414 21.5894 li179.593 21.8892 180.723 22.2271 180.723 23.3569 cv180.723 23.4536 li180.723 24.6079 179.954 25.3169 177.982 25.3169 cv176.082 25.3169 175.216 24.5835 175.216 23.4048 cv175.216 23.2974 li175.216 22.6235 175.577 22.0708 175.973 21.77 cv175.888 21.7339 li175.503 21.5649 175.335 21.1685 175.335 20.7954 cv175.335 20.7837 li175.335 20.4585 175.492 20.1099 175.83 19.9175 cv175.457 19.5688 175.275 19.1353 175.275 18.522 cv175.275 18.4263 li175.275 17.356 175.876 16.2974 177.945 16.2974 cv180.579 16.2974 li180.723 16.2974 180.855 16.4185 180.855 16.562 cv180.855 16.8755 li180.855 17.0317 180.771 17.0796 180.639 17.104 cvcp173.507 22.9126 mo172.931 22.9126 li172.798 22.9126 172.691 22.8032 172.691 22.6714 cv172.691 18.7153 li172.691 17.5005 172.281 17.1274 171.367 17.1274 cv170.863 17.1274 170.297 17.3198 169.744 17.5962 cv169.744 22.6714 li169.744 22.7915 169.636 22.9126 169.503 22.9126 cv168.915 22.9126 li168.794 22.9126 168.686 22.8032 168.686 22.6714 cv168.686 16.5386 li168.686 16.4067 168.783 16.2974 168.915 16.2974 cv169.515 16.2974 li169.648 16.2974 169.744 16.4067 169.744 16.5386 cv169.744 16.7671 li170.406 16.394 170.947 16.2134 171.656 16.2134 cv173.099 16.2134 173.749 17.1157 173.749 18.7153 cv173.749 22.6714 li173.749 22.8032 173.64 22.9126 173.507 22.9126 cvcp166.666 22.9126 mo166.088 22.9126 li165.957 22.9126 165.847 22.8032 165.847 22.6714 cv165.847 16.5386 li165.847 16.4067 165.957 16.2974 166.088 16.2974 cv166.666 16.2974 li166.798 16.2974 166.906 16.4067 166.906 16.5386 cv166.906 22.6714 li166.906 22.8032 166.798 22.9126 166.666 22.9126 cvcp166.69 15.2397 mo166.077 15.2397 li165.944 15.2397 165.835 15.1313 165.835 14.9985 cv165.835 14.0376 li165.835 13.9048 165.944 13.7964 166.077 13.7964 cv166.69 13.7964 li166.822 13.7964 166.93 13.9048 166.93 14.0376 cv166.93 14.9985 li166.93 15.1313 166.822 15.2397 166.69 15.2397 cvcp164.321 17.1274 mo163.767 17.1274 163.263 17.272 162.661 17.6333 cv162.661 22.6714 li162.661 22.7915 162.553 22.9126 162.421 22.9126 cv161.832 22.9126 li161.71 22.9126 161.603 22.8032 161.603 22.6714 cv161.603 16.5386 li161.603 16.4067 161.699 16.2974 161.832 16.2974 cv162.396 16.2974 li162.529 16.2974 162.625 16.4067 162.625 16.5386 cv162.625 16.7915 li163.226 16.3696 163.78 16.2134 164.321 16.2134 cv164.489 16.2134 164.574 16.2856 164.574 16.4302 cv164.574 16.9233 li164.574 17.0552 164.489 17.1274 164.321 17.1274 cvcp159.089 19.0278 mo159.089 17.6685 158.573 17.1392 157.515 17.1392 cv156.48 17.1392 155.904 17.729 155.904 19.0278 cv155.904 19.1353 li159.089 19.1353 li159.089 19.0278 licp159.931 19.9419 mo155.904 19.9419 li155.904 20.1099 li155.904 21.5415 156.468 22.0708 157.575 22.0708 cv158.272 22.0708 159.162 22.022 159.715 21.938 cv159.74 21.938 159.751 21.938 159.775 21.938 cv159.872 21.938 159.968 21.9858 159.968 22.106 cv159.968 22.5151 li159.968 22.6714 159.919 22.7554 159.727 22.7915 cv159.042 22.9243 158.38 22.9966 157.575 22.9966 cv156.191 22.9966 154.845 22.3462 154.845 20.1099 cv154.845 19.0278 li154.845 17.3081 155.794 16.2134 157.515 16.2134 cv159.27 16.2134 160.16 17.3198 160.16 19.0278 cv160.16 19.6772 li160.16 19.8335 160.076 19.9419 159.931 19.9419 cvcp152.548 19.0278 mo152.548 17.6685 152.031 17.1392 150.972 17.1392 cv149.939 17.1392 149.361 17.729 149.361 19.0278 cv149.361 19.1353 li152.548 19.1353 li152.548 19.0278 licp153.39 19.9419 mo149.361 19.9419 li149.361 20.1099 li149.361 21.5415 149.926 22.0708 151.033 22.0708 cv151.73 22.0708 152.621 22.022 153.173 21.938 cv153.197 21.938 153.209 21.938 153.234 21.938 cv153.33 21.938 153.425 21.9858 153.425 22.106 cv153.425 22.5151 li153.425 22.6714 153.378 22.7554 153.185 22.7915 cv152.5 22.9243 151.838 22.9966 151.033 22.9966 cv149.65 22.9966 148.302 22.3462 148.302 20.1099 cv148.302 19.0278 li148.302 17.3081 149.253 16.2134 150.972 16.2134 cv152.728 16.2134 153.619 17.3198 153.619 19.0278 cv153.619 19.6772 li153.619 19.8335 153.535 19.9419 153.39 19.9419 cvcp146.644 22.9126 mo146.066 22.9126 li145.934 22.9126 145.826 22.8032 145.826 22.6714 cv145.826 18.7153 li145.826 17.5005 145.417 17.1274 144.503 17.1274 cv143.998 17.1274 143.433 17.3198 142.879 17.5962 cv142.879 22.6714 li142.879 22.7915 142.771 22.9126 142.64 22.9126 cv142.05 22.9126 li141.93 22.9126 141.822 22.8032 141.822 22.6714 cv141.822 16.5386 li141.822 16.4067 141.917 16.2974 142.05 16.2974 cv142.651 16.2974 li142.783 16.2974 142.879 16.4067 142.879 16.5386 cv142.879 16.7671 li143.542 16.394 144.083 16.2134 144.792 16.2134 cv146.234 16.2134 146.884 17.1157 146.884 18.7153 cv146.884 22.6714 li146.884 22.8032 146.776 22.9126 146.644 22.9126 cvcp139.801 22.9126 mo139.224 22.9126 li139.091 22.9126 138.984 22.8032 138.984 22.6714 cv138.984 16.5386 li138.984 16.4067 139.091 16.2974 139.224 16.2974 cv139.801 16.2974 li139.933 16.2974 140.042 16.4067 140.042 16.5386 cv140.042 22.6714 li140.042 22.8032 139.933 22.9126 139.801 22.9126 cvcp139.826 15.2397 mo139.212 15.2397 li139.08 15.2397 138.972 15.1313 138.972 14.9985 cv138.972 14.0376 li138.972 13.9048 139.08 13.7964 139.212 13.7964 cv139.826 13.7964 li139.958 13.7964 140.066 13.9048 140.066 14.0376 cv140.066 14.9985 li140.066 15.1313 139.958 15.2397 139.826 15.2397 cvcp136.314 18.4263 mo136.314 17.7046 135.99 17.1392 134.691 17.1392 cv133.343 17.1392 133.068 17.7524 133.068 18.4263 cv133.068 18.522 li133.068 19.0513 133.308 19.7485 134.691 19.7485 cv135.99 19.7485 136.314 19.2446 136.314 18.522 cv136.314 18.4263 licp136.41 23.3569 mo136.41 22.8872 136.025 22.6958 134.943 22.4185 cv133.584 22.0708 li133.236 22.3706 132.996 22.6714 132.996 23.2974 cv132.996 23.4048 li132.996 24.0786 133.392 24.4985 134.726 24.4985 cv136.097 24.4985 136.41 24.1138 136.41 23.4536 cv136.41 23.3569 licp137.384 17.104 mo136.952 17.188 li137.167 17.4165 137.36 17.7769 137.36 18.4263 cv137.36 18.522 li137.36 19.8452 136.542 20.5786 134.691 20.5786 cv134.053 20.5786 133.644 20.4829 133.296 20.3384 cv133.091 20.4351 132.996 20.5669 132.996 20.7466 cv132.996 20.9517 133.091 21.0601 133.368 21.1323 cv135.16 21.5894 li136.337 21.8892 137.468 22.2271 137.468 23.3569 cv137.468 23.4536 li137.468 24.6079 136.699 25.3169 134.726 25.3169 cv132.827 25.3169 131.96 24.5835 131.96 23.4048 cv131.96 23.2974 li131.96 22.6235 132.322 22.0708 132.718 21.77 cv132.634 21.7339 li132.25 21.5649 132.082 21.1685 132.082 20.7954 cv132.082 20.7837 li132.082 20.4585 132.238 20.1099 132.574 19.9175 cv132.202 19.5688 132.021 19.1353 132.021 18.522 cv132.021 18.4263 li132.021 17.356 132.623 16.2974 134.691 16.2974 cv137.324 16.2974 li137.468 16.2974 137.601 16.4185 137.601 16.562 cv137.601 16.8755 li137.601 17.0317 137.517 17.0796 137.384 17.104 cvcp130.253 22.9126 mo129.676 22.9126 li129.544 22.9126 129.435 22.8032 129.435 22.6714 cv129.435 18.7153 li129.435 17.5005 129.027 17.1274 128.113 17.1274 cv127.607 17.1274 127.042 17.3198 126.49 17.5962 cv126.49 22.6714 li126.49 22.7915 126.381 22.9126 126.25 22.9126 cv125.66 22.9126 li125.54 22.9126 125.431 22.8032 125.431 22.6714 cv125.431 16.5386 li125.431 16.4067 125.527 16.2974 125.66 16.2974 cv126.261 16.2974 li126.393 16.2974 126.49 16.4067 126.49 16.5386 cv126.49 16.7671 li127.151 16.394 127.691 16.2134 128.402 16.2134 cv129.844 16.2134 130.494 17.1157 130.494 18.7153 cv130.494 22.6714 li130.494 22.8032 130.386 22.9126 130.253 22.9126 cvcp123.832 22.936 mo123.375 22.9839 122.197 22.9966 121.487 22.9966 cv119.803 22.9966 118.925 22.3589 118.925 20.7593 cv118.925 16.1294 li118.925 14.5298 119.803 13.8931 121.487 13.8931 cv122.197 13.8931 123.327 13.9165 123.832 13.9653 cv123.904 13.9771 123.952 14.061 123.952 14.1333 cv123.952 14.7349 li123.952 14.8188 123.904 14.8794 123.82 14.8794 cv121.499 14.8794 li120.224 14.8794 120.019 15.2153 120.019 16.1294 cv120.019 17.8013 li123.711 17.8013 li123.844 17.8013 123.952 17.9087 123.952 18.0415 cv123.952 18.4985 li123.952 18.6313 123.844 18.7388 123.711 18.7388 cv120.019 18.7388 li120.019 20.7593 li120.019 21.6733 120.224 22.0103 121.499 22.0103 cv123.82 22.0103 li123.904 22.0103 123.952 22.0708 123.952 22.1548 cv123.952 22.7681 li123.952 22.8403 123.904 22.9243 123.832 22.936 cvcp113.579 22.9126 mo112.953 22.9126 li112.833 22.9126 112.737 22.8032 112.737 22.6714 cv112.737 14.0972 li112.737 13.9771 112.821 13.8687 112.953 13.8687 cv113.579 13.8687 li113.699 13.8687 113.795 13.9653 113.795 14.0972 cv113.795 22.6714 li113.795 22.7915 113.71 22.9126 113.579 22.9126 cvcp89.8599 14.6021 mo89.2827 14.6021 li88.7173 14.6021 88.5493 14.77 88.5493 15.4321 cv88.5493 16.2974 li89.812 16.2974 li89.9438 16.2974 90.0405 16.3931 90.0405 16.5142 cv90.0405 16.9829 li90.0405 17.104 89.9438 17.188 89.812 17.188 cv88.5493 17.188 li88.5493 22.6714 li88.5493 22.7915 88.4409 22.9116 88.3203 22.9116 cv87.7314 22.9116 li87.5991 22.9116 87.4907 22.7915 87.4907 22.6714 cv87.4907 17.188 li86.3242 17.0552 li86.1919 17.0435 86.0957 16.9595 86.0957 16.8384 cv86.0957 16.5142 li86.0957 16.3931 86.1919 16.2974 86.3242 16.2974 cv87.4907 16.2974 li87.4907 15.4321 li87.4907 14.145 88.1162 13.7603 89.1743 13.7603 cv89.499 13.7603 89.6914 13.7964 89.8477 13.8325 cv89.98 13.8687 90.0762 13.9165 90.0762 14.0249 cv90.0762 14.4224 li90.0762 14.5542 89.9922 14.6021 89.8599 14.6021 cvcp84.1357 19.147 mo84.1357 17.9204 83.6431 17.1392 82.5127 17.1392 cv81.394 17.1392 80.9009 17.9087 80.9009 19.147 cv80.9009 20.061 li80.9009 21.2886 81.3823 22.0698 82.5127 22.0698 cv83.6309 22.0698 84.1357 21.3003 84.1357 20.061 cv84.1357 19.147 licp82.5127 22.9966 mo80.7446 22.9966 79.8428 21.8296 79.8428 20.061 cv79.8428 19.147 li79.8428 17.3804 80.7446 16.2134 82.5127 16.2134 cv84.2803 16.2134 85.1938 17.3804 85.1938 19.147 cv85.1938 20.061 li85.1938 21.8296 84.2803 22.9966 82.5127 22.9966 cvcp75.811 22.936 mo75.5708 22.9712 75.2578 22.9966 75.0293 22.9966 cv73.9229 22.9966 73.394 22.7075 73.394 21.3853 cv73.394 17.188 li72.2271 17.0552 li72.0952 17.0435 71.9985 16.9712 71.9985 16.8384 cv71.9985 16.5142 li71.9985 16.3813 72.0952 16.2974 72.2271 16.2974 cv73.394 16.2974 li73.394 15.1196 li73.394 14.9985 73.478 14.9028 73.6104 14.8784 cv74.2354 14.7817 li74.2476 14.7817 74.2598 14.7817 74.2715 14.7817 cv74.3677 14.7817 74.4521 14.8667 74.4521 14.9868 cv74.4521 16.2974 li75.7505 16.2974 li75.8828 16.2974 75.9912 16.4058 75.9912 16.5376 cv75.9912 16.9478 li75.9912 17.0786 75.8828 17.188 75.7505 17.188 cv74.4521 17.188 li74.4521 21.3853 li74.4521 22.0464 74.6201 22.1421 75.1011 22.1421 cv75.7749 22.1421 li75.9434 22.1421 76.0273 22.1899 76.0273 22.311 cv76.0273 22.731 li76.0273 22.8394 75.9673 22.9116 75.811 22.936 cvcp70.6401 22.9116 mo70.063 22.9116 li69.9307 22.9116 69.8223 22.8032 69.8223 22.6714 cv69.8223 18.7153 li69.8223 17.5005 69.4136 17.1274 68.4995 17.1274 cv67.9946 17.1274 67.4292 17.3198 66.876 17.5962 cv66.876 22.6714 li66.876 22.7915 66.7681 22.9116 66.6357 22.9116 cv66.0464 22.9116 li65.9263 22.9116 65.8179 22.8032 65.8179 22.6714 cv65.8179 16.5376 li65.8179 16.4058 65.9141 16.2974 66.0464 16.2974 cv66.6475 16.2974 li66.7798 16.2974 66.876 16.4058 66.876 16.5376 cv66.876 16.7661 li67.5376 16.3931 68.0786 16.2134 68.7881 16.2134 cv70.231 16.2134 70.8809 17.1157 70.8809 18.7153 cv70.8809 22.6714 li70.8809 22.8032 70.7725 22.9116 70.6401 22.9116 cvcp63.3047 19.0278 mo63.3047 17.6685 62.7876 17.1392 61.7295 17.1392 cv60.6948 17.1392 60.1177 17.729 60.1177 19.0278 cv60.1177 19.1353 li63.3047 19.1353 li63.3047 19.0278 licp64.1465 19.9419 mo60.1177 19.9419 li60.1177 20.1099 li60.1177 21.5405 60.6831 22.0698 61.7896 22.0698 cv62.4868 22.0698 63.377 22.022 63.9302 21.938 cv63.9541 21.938 63.9658 21.938 63.9902 21.938 cv64.0864 21.938 64.1826 21.9858 64.1826 22.106 cv64.1826 22.5151 li64.1826 22.6714 64.1343 22.7554 63.9419 22.7915 cv63.2563 22.9243 62.5952 22.9966 61.7896 22.9966 cv60.4067 22.9966 59.0596 22.3462 59.0596 20.1099 cv59.0596 19.0278 li59.0596 17.3071 60.0098 16.2134 61.7295 16.2134 cv63.4849 16.2134 64.375 17.3198 64.375 19.0278 cv64.375 19.6763 li64.375 19.8325 64.291 19.9419 64.1465 19.9419 cvcp57.4004 22.9116 mo56.8228 22.9116 li56.6904 22.9116 56.5825 22.8032 56.5825 22.6714 cv56.5825 18.4146 li56.5825 17.4038 56.1138 17.1274 55.4883 17.1274 cv55.0552 17.1274 54.5503 17.272 54.0815 17.4517 cv54.1538 17.7173 54.1895 18.0298 54.1895 18.3901 cv54.1895 22.6714 li54.1895 22.7915 54.1055 22.9116 53.9731 22.9116 cv53.3354 22.9116 li53.2153 22.9116 53.1313 22.8032 53.1313 22.6714 cv53.1313 18.3901 li53.1313 17.3442 52.8306 17.1274 52.2051 17.1274 cv51.7725 17.1274 51.2432 17.3442 50.7383 17.5962 cv50.7383 22.6714 li50.7383 22.7915 50.6538 22.9116 50.522 22.9116 cv49.8843 22.9116 li49.7642 22.9116 49.6802 22.8032 49.6802 22.6714 cv49.6802 16.5376 li49.6802 16.4058 49.7759 16.2974 49.9087 16.2974 cv50.5098 16.2974 li50.6421 16.2974 50.7383 16.4058 50.7383 16.5376 cv50.7383 16.7661 li51.2192 16.4663 51.8325 16.2017 52.4941 16.2017 cv53.0112 16.2017 53.396 16.3462 53.6968 16.6938 cv54.3579 16.3813 55.0674 16.2017 55.6929 16.2017 cv56.7749 16.2017 57.6411 16.7427 57.6411 18.4146 cv57.6411 22.6714 li57.6411 22.8032 57.5327 22.9116 57.4004 22.9116 cvcp48.3452 22.936 mo48.105 22.9712 47.792 22.9966 47.5635 22.9966 cv46.457 22.9966 45.9282 22.7075 45.9282 21.3853 cv45.9282 17.188 li44.7612 17.0552 li44.6294 17.0435 44.5332 16.9712 44.5332 16.8384 cv44.5332 16.5142 li44.5332 16.3813 44.6294 16.2974 44.7612 16.2974 cv45.9282 16.2974 li45.9282 15.1196 li45.9282 14.9985 46.0122 14.9028 46.1445 14.8784 cv46.77 14.7817 li46.7817 14.7817 46.7939 14.7817 46.8062 14.7817 cv46.9023 14.7817 46.9863 14.8667 46.9863 14.9868 cv46.9863 16.2974 li48.2852 16.2974 li48.4175 16.2974 48.5254 16.4058 48.5254 16.5376 cv48.5254 16.9478 li48.5254 17.0786 48.4175 17.188 48.2852 17.188 cv46.9863 17.188 li46.9863 21.3853 li46.9863 22.0464 47.1548 22.1421 47.6357 22.1421 cv48.3091 22.1421 li48.4775 22.1421 48.5615 22.1899 48.5615 22.311 cv48.5615 22.731 li48.5615 22.8394 48.5015 22.9116 48.3452 22.936 cvcp43.6553 17.1274 mo43.1025 17.1274 42.5972 17.272 41.9956 17.6323 cv41.9956 22.6714 li41.9956 22.7915 41.8877 22.9116 41.7554 22.9116 cv41.166 22.9116 li41.0459 22.9116 40.9375 22.8032 40.9375 22.6714 cv40.9375 16.5376 li40.9375 16.4058 41.0337 16.2974 41.166 16.2974 cv41.7314 16.2974 li41.8638 16.2974 41.96 16.4058 41.96 16.5376 cv41.96 16.7905 li42.561 16.3696 43.1143 16.2134 43.6553 16.2134 cv43.8237 16.2134 43.9077 16.2856 43.9077 16.4302 cv43.9077 16.9224 li43.9077 17.0552 43.8237 17.1274 43.6553 17.1274 cvcp38.2441 19.7134 mo37.354 19.7134 li35.8989 19.7134 35.5142 20.0376 35.5142 20.8911 cv35.5142 21.0356 li35.5142 21.9019 35.9229 22.1304 36.6206 22.1304 cv37.1738 22.1304 37.6665 21.9614 38.2441 21.6489 cv38.2441 19.7134 licp39.0615 22.9116 mo38.5083 22.9116 li38.3765 22.9116 38.2681 22.8032 38.2681 22.6714 cv38.2681 22.4067 li37.6909 22.7437 37.0898 22.9966 36.416 22.9966 cv35.394 22.9966 34.4561 22.5513 34.4561 21.0474 cv34.4561 20.9038 li34.4561 19.605 35.2139 18.9556 37.354 18.9556 cv38.2441 18.9556 li38.2441 18.4741 li38.2441 17.4644 37.8955 17.1157 36.9575 17.1157 cv36.1758 17.1157 35.5981 17.1636 35.1172 17.2114 cv35.0933 17.2114 35.0815 17.2114 35.0571 17.2114 cv34.9492 17.2114 34.8408 17.1753 34.8408 17.019 cv34.8408 16.5981 li34.8408 16.4663 34.9248 16.3931 35.0933 16.3696 cv35.5864 16.2856 36.1392 16.2134 36.9575 16.2134 cv38.6284 16.2134 39.3022 17.0552 39.3022 18.4741 cv39.3022 22.6714 li39.3022 22.8032 39.1938 22.9116 39.0615 22.9116 cvcp32.2192 19.1841 mo32.2192 17.9204 31.8467 17.104 30.6563 17.104 cv30.1509 17.104 29.5854 17.1636 29.249 17.2231 cv29.249 21.9858 li29.646 22.0571 30.2715 22.106 30.6563 22.106 cv31.8345 22.106 32.2192 21.3364 32.2192 20.0493 cv32.2192 19.1841 licp30.6563 22.9966 mo30.2832 22.9966 29.7183 22.9478 29.249 22.8638 cv29.249 25.0405 li29.249 25.1606 29.1528 25.269 29.0205 25.269 cv28.4072 25.269 li28.2871 25.269 28.1909 25.1724 28.1909 25.0405 cv28.1909 16.7661 li28.1909 16.6099 28.2271 16.5376 28.4438 16.4907 cv29.0806 16.3345 29.9229 16.2134 30.6563 16.2134 cv32.4478 16.2134 33.2778 17.3804 33.2778 19.1841 cv33.2778 20.0493 li33.2778 21.938 32.4116 22.9966 30.6563 22.9966 cvcp25.6777 19.0278 mo25.6777 17.6685 25.1606 17.1392 24.1021 17.1392 cv23.0679 17.1392 22.4907 17.729 22.4907 19.0278 cv22.4907 19.1353 li25.6777 19.1353 li25.6777 19.0278 licp26.5195 19.9419 mo22.4907 19.9419 li22.4907 20.1099 li22.4907 21.5405 23.0562 22.0698 24.1626 22.0698 cv24.8599 22.0698 25.75 22.022 26.3032 21.938 cv26.3267 21.938 26.3389 21.938 26.3633 21.938 cv26.4595 21.938 26.5557 21.9858 26.5557 22.106 cv26.5557 22.5151 li26.5557 22.6714 26.5073 22.7554 26.3149 22.7915 cv25.6294 22.9243 24.9683 22.9966 24.1626 22.9966 cv22.7798 22.9966 21.4326 22.3462 21.4326 20.1099 cv21.4326 19.0278 li21.4326 17.3071 22.3828 16.2134 24.1021 16.2134 cv25.8579 16.2134 26.748 17.3198 26.748 19.0278 cv26.748 19.6763 li26.748 19.8325 26.6641 19.9419 26.5195 19.9419 cvcp19.0518 17.6323 mo19.0518 15.4556 17.9453 14.8306 16.5024 14.8306 cv15.937 14.8306 15.5645 14.8423 15.1675 14.8667 cv15.1675 22.0337 li15.5522 22.0571 15.937 22.0571 16.5024 22.0571 cv17.9453 22.0571 19.0518 21.4204 19.0518 19.2563 cv19.0518 17.6323 licp16.5024 22.9966 mo15.5884 22.9966 14.6626 22.936 14.3135 22.8755 cv14.1577 22.8521 14.061 22.7554 14.061 22.5747 cv14.061 14.313 li14.061 14.145 14.1577 14.0366 14.3135 14.0122 cv14.6626 13.9526 15.5884 13.8931 16.5024 13.8931 cv18.7271 13.8931 20.146 15.0356 20.146 17.6323 cv20.146 19.2563 li20.146 21.8296 18.7271 22.9966 16.5024 22.9966 cvcp110.596 22.9116 mo110.019 22.9116 li109.886 22.9116 109.779 22.8032 109.779 22.6714 cv109.779 16.5386 li109.779 16.4067 109.886 16.2974 110.019 16.2974 cv110.596 16.2974 li110.728 16.2974 110.836 16.4067 110.836 16.5386 cv110.836 22.6714 li110.836 22.8032 110.728 22.9116 110.596 22.9116 cvcp110.621 15.2397 mo110.007 15.2397 li109.875 15.2397 109.767 15.1313 109.767 14.9985 cv109.767 14.0376 li109.767 13.9048 109.875 13.7964 110.007 13.7964 cv110.621 13.7964 li110.752 13.7964 110.861 13.9048 110.861 14.0376 cv110.861 14.9985 li110.861 15.1313 110.752 15.2397 110.621 15.2397 cvcp108.49 16.5864 mo106.866 22.311 li106.709 22.8521 106.3 22.9966 105.784 22.9966 cv105.267 22.9966 104.857 22.8521 104.702 22.311 cv103.078 16.5864 li103.066 16.5503 103.066 16.5259 103.066 16.5024 cv103.066 16.3813 103.138 16.2974 103.258 16.2974 cv103.919 16.2974 li104.016 16.2974 104.1 16.3696 104.148 16.5259 cv105.531 21.77 li105.603 22.0581 105.664 22.1177 105.784 22.1177 cv105.892 22.1177 105.964 22.0581 106.037 21.77 cv107.419 16.5259 li107.467 16.3696 107.551 16.2974 107.648 16.2974 cv108.309 16.2974 li108.429 16.2974 108.501 16.3813 108.501 16.5024 cv108.501 16.5259 108.501 16.5503 108.49 16.5864 cvcp101.537 22.9116 mo100.959 22.9116 li100.828 22.9116 100.718 22.8032 100.718 22.6714 cv100.718 16.5386 li100.718 16.4067 100.828 16.2974 100.959 16.2974 cv101.537 16.2974 li101.669 16.2974 101.777 16.4067 101.777 16.5386 cv101.777 22.6714 li101.777 22.8032 101.669 22.9116 101.537 22.9116 cvcp101.56 15.2397 mo100.947 15.2397 li100.815 15.2397 100.707 15.1313 100.707 14.9985 cv100.707 14.0376 li100.707 13.9048 100.815 13.7964 100.947 13.7964 cv101.56 13.7964 li101.693 13.7964 101.801 13.9048 101.801 14.0376 cv101.801 14.9985 li101.801 15.1313 101.693 15.2397 101.56 15.2397 cvcp99.2397 22.8403 mo98.7339 22.936 98.2651 22.9966 97.2437 22.9966 cv95.7642 22.9966 94.0688 22.2017 94.0688 19.2798 cv94.0688 17.6079 li94.0688 14.6626 95.7642 13.8931 97.2437 13.8931 cv98.0015 13.8931 98.7339 14.0005 99.2632 14.0845 cv99.3716 14.0972 99.4565 14.1333 99.4565 14.2417 cv99.4565 14.855 li99.4565 14.9263 99.4321 14.9868 99.312 14.9868 cv99.3003 14.9868 99.2876 14.9868 99.2759 14.9868 cv98.8423 14.9507 97.9526 14.8794 97.2554 14.8794 cv96.0767 14.8794 95.1636 15.564 95.1636 17.6079 cv95.1636 19.2798 li95.1636 21.3003 96.0767 22.0103 97.2554 22.0103 cv97.9409 22.0103 98.8062 21.9497 99.2397 21.9136 cv99.2515 21.9136 99.2759 21.9136 99.2876 21.9136 cv99.4194 21.9136 99.48 21.9741 99.48 22.106 cv99.48 22.5991 li99.48 22.7437 99.3716 22.8159 99.2397 22.8403 cvcp0 0 0 0.56 cmykf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (PeopleGroup) (PeopleGroup)%%Title: (DTU Byg B UK.eps)%%CreationDate: 27/02/08 17:50%AI9_DataStream%Gb",KCMt.P[brg;s.D"SbQ&SVZ1tEb`<)3=c-EKhJP"2$Zaa*?DF`sd[NAYmR@_.-IX,6FX&QAs:>2#hEZpHj7'anO_o)**iE'C2%Da3'j]tF/TIf$<5:UI,L9lLcpWqa-(^A@,E?N+g7Z!V*Hq^+SEWGWY'>u04pqtQGFqRX)>hT>0(VsDmXrV(NF(TWT=(UmJTG9?iI%q<%UQ#X"aWT@MKBm4X\!ebR21eQ9)lg,I3uX4?e7meZj1&uIP%<:a`$l14-,\"BgQ>i#@(daT&Jq@,@VpQ)SY5>Uc)JcC%;EV8S`%lMK5rlKqr^j4>C3$i^Dq^L#aRa!&AbW7\f&2ui&j00Xfs^V.Vk,*8E]r5[\q5@&`N^H93F]Y4-UJ#&rk=C$Ed3ko#F!_clqFSs2Z%F,AOtr)U4(4)*1ie4ojK"+Qs5Z23YFl5.7S`T>ACmDnrXSF8*a#S48Rqq%27'h>,0]E!H12h1^H[CZ84c/h*J@J8<=Wd]$dG'+PI%PNjg)c=*5#4t?T0!^E44rNs.sZ[-uk$-)c'fN%o#@f#Hhf@=/U_06u%2a?*s)ts&,)rcZYXl=7V%=4b=F-AN];ZU7b-XQE!'Y[FA%Zd8t7+`7*9!T1pHq<m\AVotPo#ONbhR&6:adZ"]Up3!ELk5KCFq6lYM5HS_Y:."a_?8ue*HK3LXpcs7gBXkfah=+Mj2(cPaD:S=O%S(I:q+5TKh]/dWb3)i/ood%Hcc6F4^S=JK/s*8&u\PN4fl<fbNYP1:\Fo9W*IQIeLgD55k('<#)rmr(&eJc0PR_E&[Tf1GA%SB/(%3qs/\S:a_b/XOmtgHq=:KedNCJ_FrKV:l\W_'f!eV%sFe[9,]=`<*bV/>14-$/[A%c9^jZ'#%^*W=JTgqFgd\2q#03;ngkpq?h[=%.2W`rL/K]P)(Bt=,D+fL#"Aa1@GHG@WXE<ghs_G@#_#-6KI:LP7KgJ7h!dNn@8-/c_Bur<9#8$q2j@Gt!@IC?4XV3_((!Y'RqgBm%WV=ndl5RDWH7j7a-0PS+_>)qIZpZ]@USdKn`o)=p"lkda-EL$L(a&[1^L2.?s6uM(%M8CEV-n]?Rq@e]K^_V&LGoPL5gP.5ABq-'%KQS\3GS@a:aJnp\F6XRTQWf^NU([#!ARKUHR4p\#9r"S(@=7P`8eHKhp]r6H(Oe^h(gZg":q!GG_Ap7?W*<q;BLSj/H;9\kZln[$%k*5@1]d'W-HO4W;F.!UX)tb4DakNe;W__O$&+uGn-;cSD3T5]r=Q0k=DdMg1Vts"dCL1.qVbHtUh*Uk(rh+G3+^+&TQ3GHW*hZ#T%8Z82b+aoXTb'U*nWi8sW5O^mW7E%Jc6f6u)km'+&prWQb:\C!\"Ng\mO8&9jrh"X+TYEjUG6e,8c01Yp5Q/ghoQU;,I]BSH:'d$_%Vk;F:qE+^Q5BZfGIL^E(^M.$=Du#=jO5k$"_Us%oQ8>p2W?WHsU%->$c^ubTNOMXBiNmB5@Cc"X&UI?EjV$KkB#6)_[\9.LLV!6s%QWOGC^OYd=-d'm;9l.qj]e#>d/AH6AbJJ1r$#b`o!kgD@_&rI5:Z*1A;LK9E/`D'Q)g[E*`uf%l^4Un:Vn\o`N?iuYE%45IkY9iU%V^/tq8#@K+eLo'\)+P\F&k31=!Gh<D[7>]I4m+O#^??O2:%30Cb94KN4s8/2B="76+cOegd5qAQJjk2U59l_?fdKr*C'R?fcs*#'%(l&L%osULokhR][%,0d6LN4[9)o4M\Pu%tKY+1R</*S;',4upqMQKd9AX\)d):8K7L3HK&e8kK*V$V)8>NV_5k6/$_n>r^@U3V;F%nF"T'`:\b271<#MW?6_=/rp\PCQ-hubX24ABIlIPnkT#jjfkq./BBnWf[S'3R>!cXfRbUQ,"thZV$?T%qS#-LZQT4.GlZ%ien>NS%)MA^%+k0\u[knW:>GsB>jcno(>k@G]T*>+N+!m-Yr?44fOY>0%MhGT/:+=&38$(+:c%9X\QVU^9=%Y#d.N!\[2l](i1n)'XE(2t[%`0.kHXWcM7*.t"AKHDWh^Cc2FQslu8>>B6"H7t5FW*Z,p2n'`Qfue^:>$hUQV=g'S#g@sV;Xs_TQ<5)=.8t":=t&,,#-m8'_@PXY%ju(`0'h@^SJUKP>N-fPB>Q3MY%gATtmWqoQ+\so9mqAYkP#bdiGr0^(kL(QgPBjX=#AFM$J`CJ^8$OY]>*i_)G4TMV/kZKKk.P;.%@_5uNk%MF3g.Prr_l_u@aR1Qq'!5`hp=o&FdtPp?mdM#6[Ht4V[O<7$TJ+t_o+%;[lA2q?-t4j/>WGG47nd^A]]Vo1!i*27bSboY%!auPla_r\A\S*5Vh)n@#0<!^g7,9fF)"T[tNrWtf%U'>?HE_k_Y<4^pd>Yp)mMr(3@rF+RO+lJ1b#m\%;N#33Qn5L5O(Q@ui)>lM%3d_=/Vt-]IMI83B1M02KaLI<M6J!)*H"JkhqX]^<ik!Q@a[Hk$:PdT5,GG+Y)Q0i\D4KtpCWKG0B7'E5-#RFNG%WlNP$l.MBD(E@%eFO*6pPQm=]e.jEoN]rabu1.dI]kP6bP.=8`C93LUJJL%?;CSJojDgD":'bSdnCMP%3fZP=mrP7O`G#$"a=;8g?\Z>g8$T,Ee6JV%P*QH&Um]QY1(0#.lkdY?e)SFF5Q/'%aeMT-6^Mkce8tV=RJ/CK2m)P4if1M"6McQ02U1iM#pc,UT2Kaq3K:6=lDrC'[p\Hq:Q*tC%0[tOc)rUI7[o^%'d<Fh2Ie.l.s60WR3:ZGrhqlB$QT&;]XM2Yl_OL"t5/j`)Ed.EF_d@?=h,]#m]tOAa2>R7Lrr$AV[CUY\nW+?<%d@V)P&YWj(s'-.PH@G\KNt8\n_]@BnJ!tcZj+"3amUKf4jA2sD?/Dcn2tZqJXJU3*q;%s0mjC?ThHm&XFh^Q)A2$?Dr-l<=H`V2X%h$me=rCpOis/+K*rSG46QJVOopuO]K^,Wm=]):g\r58ETMkLpqI%T7`hsKp=jjj1_.bD^*jo5p'q<R^7[o\n<Y;8$OORLNamOp5r%<j.#OGe^iHhV-*:h<j$@JMr1QhY_G;Fo.lrA:g?/]Ueutq;$g]RYGO&GBrd<Xq4ja)3),W+2CN.H2[a?_[=#&s*feN?]Q>iX7MhP%]*Z>QPJDVkrC27eAP!"tNS6=R0p\p0eZ/q"@\Y:AS)X=[gmu3nN9p8aP<[!H^W)VsXKX&TraReo7W6cRD=o"$J$8-?4g,[l3N5g?%V#hlPUU2f!.Mj21Jnih0c.,-L,t]bY\ku2Nkf-"be"K)IR^SVAo4HC?1oF?[e?r>gd97K+[F8Feh<LE"l\.OMVg<&lUJ,1)0ub,E%]EtGm1G^rtF(.nhdahGf4]YcsX`]p%2N%0NB'4>G:[G&d\iP#:ES;:CST>hT7Q5C0\#B92%*@*E5&D9C3B.qK%$63WH&+:J)(#hM%%CN0[Zo$XTj-:4s1#n@,cn]DT\."o5&&YSir.4scJRCe5^mLc<\N$PT_kNPLkH5fW+qLc,Z8di5LUNkLnU(fU:?FDDYDT*=afPf&%-^0M<9LJZn57]WM*qN>m(&f;?RXFd?IMYKidG7:1q`"a;:.D"o`4q6E($2JUEAJRu!#\I;i)fG_EL)#&'T5fDP>2]4#8[cuq7RBl%3_lNW;4NWqEt[_N*YI6ue@R[L-;I)FVl#JBGT%rF&a+!HB/%97FE(>USD>O;EujHA1sZ&oMI\E!"9Bi'(J2P5@VI%>e<,J\,:tJk%<RG3a/SQfGa"=/HA#n7\1b0#.e(f25g7L/V"eC0?NKd0G,E8JuDR9#l/e*\n"n.a90DNdIOfnH@!pppTXl0Lf6]K9`[eMh0A3Ihf%Q8OZ&]#)"tKq4NQk#ltL'5JrW4NP!ND9(14Fng(<eBGD5$bOTg1:us.ltS>s*a794!%WX;_2R<L`(n0FeNjeP^.!mT%\<r)Ju]Mg%$"$]lLOc[hZjtfIrN4B]f,/#:#dbVtLe.GKN4;S!RIr6Xpup.#`lMb>+@\O"+/bYm&@_XRdnZT4HHTrUZO7bt`Sh_;YeV,f/,)#L%M\r.kd[0T[HrYVu[#\^^"e:lt_,hF!<u)iE"]^>#'DlW&GODrpj7>%+Z9S@dePjqqi9d>3C?8.V0ET9,UonhZ+_hYfUfC@Z2,np.%IJ%4(C@dMV9aK<HT^d$pieKKH!MbUTRVJnq`3du!C@[:+WeKnuBX^sYES'7Re>O`u:R,oL^LD!_CgAtc2)%_fKr5HD#*fm'IMsZi%kLR[SJC[YlQSVQB)i.4Xg04N&$te<pq)2VZN?*pZWPgFqD4i(Mpsn"46TSe"gZ-Gs[c]#0nIU[f=Jb5\%20KLM02p:Zk6kY\Qk^Y%:R6q#HoYE>bHUV3\$SdAV;<QiPkoKIH?smX\i?7Qc;*-CE9^6TWK!XTNZ:I+KsNm%4ZPN*SBOc@-gaL(:Afr1YpUk*QVD!cojYHk%?(<G]MtphjBGY+9(N*Xt-ApDLA75(X3Bs(,bSTmHHo>p+@IE;rDPKn-k=s_XlY<kuS^'uBMqNJ9S$fRVo.r>3;(gC]T;f>2QgJL6%dOs7!4)<S/[(^[bD,&e!S&d/HYRIGg,V6epbT_L''msu:7d1pB/?X1P<\OC+c[>&2pYL07"^i?RVi'8;kt^&k>=<=>(:BG>[20Xe%(_\o@'=g\?fk"-&:84aEO"*pE<?H-be:T[&G5bq7Y1b/XNKNWiJh47<C5Bq'3-Uq'>pKq_EHPP>.>C6"<:j8g2Z:;sTmm%+m_dRi%o!\la^FHYK%:@$gTp,I[o.I+icP=PQlWIB6;Frr.4k3CtYUI*V,qt7?AmbHs8`Eh&Q%oLHPA3er1M\K#U(G8Knr2iiB[7lSa=o1V%P6O&)T`"]dd(7AL<=DJFb0NuaX**6J(Y(`&Wma\"jYle6H0D4g_V(g,CjBiGWq)4BPdfoIh5@1G"b'X&B)'R^Bn3W*6sW2%U(7e@%-j1ds)?Gs9@kn(Qk[pq@7L>uCeVMiP/FgCr9JrJR7>;R*-aGW8iFMIm,J0F6VAD6Jq?B\>,@!]@'imk(JHQh3e\V]'C%uDi.l!*d%F:fDU.E'_(3=mIa-IRAhM`;F79\d*2:3%+QEb,!.3QI\cC6rp_K':oVc4+q#)nQMa#a)16,'TYL*e+fJrTS,9"_8A$IhOaA"'CCa%Jra,'CbHQna3>fG2c\WlQ;PR&0t<(PM#l,Fnb^s%GjR'M3/b<<`4]rk6o%-2+D(u9-k,SFm$.;8Ln?;S:'!^1bq"mRK<ATB(Dpm!%6Z^0Wi9.J&+,fmpm"?F'QDb\"MK*,D2h[T%_TXcDL@F18?4p9O;@k,h@RP0u0sZb,#H/,,jAmT?Rfe^WgqIF+K`sjGSh))g<H3qX%/0Jj(2IaqO!OYptSpA9<8X'RJTX95E'r;'A-j=pI/k0P!emC&95*2D@p9_MGep6DsZQNP#;.u0aS/0F+596>XJ"#BE'e>o`8!p)o%alCh0dhC0YVIq5OL&?/?>^2C\[$.;eSVkQZ:Z>Th>PTZ;k),.InlU?GH9=ES.`Y]W`nSTBLAK9'NS4$XD=oTt*IJo=[s^<l7Wk3b%O.U0;(cN&h4PLMKUX2eQ4nYrNPBpLna^:1E`(H'kr@erN"r-`/h+%'3gM(F2eRXFrp^U9-5Zrtj*3*1"e8.]BN&,-.,2^K$]?#@_%R1>LGF]a%-;)pWd-QA;6LQmj:MT^62?+h9Jb7-aIqbDt?@EX%LSWUF]2ArCq2ot6M6U.InSs/-2l2_\!Vu,&#g?_k1GFht-`&1H/%07H7NnataD)1t7a[dSk$l@R*s5t#IAbWGW=P%dhSN^f8",kbbIm<VV+Q?glS7%7Y6$<i>5J$2?*DBLO44)OMAAVW1$9P_7=@=^)(%PO;BB`2GP%C-\Ru(Te#VX6Rc/fui3#beR]nT#f-U65Edlao%fZ('\>-I]BR/epHNuT#HEhU?W+Pmpo8Y>CVqL4k2I$X,l8VVtd6[%D*RljLHKhJ'JBjs?.6T:d(!LGp4:(I:_cHOdS,`3"_]AV8m>>/Z`44Eg0E.7.dO@@`7g4a]1GH?K.:\:djidS78H9.X]3e@<GP`;%/(N9MOY'P@MRBl1*m%$C>G9E,8o'RkQdo8;j$8_o<=Y;)\jC6DoJt:^8>gMGnJ>$."5T!E]*4bu!Z_fZ]Genr8\,sVHVr\$:uqeU%0>PY;4Aj<(h/@l@h[(>5>G;mhHi\@UoWb)ZBM^2^]b&`]aMLe?7&'cH`;F=2OA/'MNkD3a+7e<*i/8,7ZQ:f6<BZ8k?oZ=@aVI@J%N`iDl]9\PZ.VoK1J5lDfRS=*)BW9)$Jp`%'Nf^@o-cqC19e=tV:mb@bNf?JM8CJr%!ne5&CK.:dcltr58<[&/,Z!+)OR3Ed@B^be%,[-_)[$W;I6;gL1\426?K`qo@'abED.'OlsAGY%KI2cnh+cUe<4h>R+I&nq`TN;Y<e6B#C%mSS][<nG2P:`F<Wp&3eoRWpoY/Tl!%`2-BqT^P,-R9'KBfFC\Ih"uI,9]rBu[YJdHL2>q_4_lC801L7t$#iC4XMtto:P>NKAU?r)imG5\oW90?]*DP(.PQ:DjeH>_kZL-]%p5dW'd^=Y5+M<LJ,T/qq%T6Is8m=i#%E\=*_BMkm7Zl+MOprXQg_7dbP&2Gs3g/kTCa#bb,DhdZZCsZ[-"8D;EsWaY@)lZ5M:bL*%)^(qV$n#RH&`X1c:WS&Q-5850O;W`\.2qT^$A2ZNBM]kefB:koqW=ko^n.s/7B:4NW_djUB@D1BWeFB,B!#g#?#,X8CWNqa=LUP>%3(7aghnIXME-6#&V3S*gF.IpS<_QfPRZm,!C.hfB)4a<!M.J>`l8-!;3nGBVo[3QQB0M+(i)[O<]Dq[755W_MWF5\/Jqk)G9p#TN%'s!5MK(Y<2I:]K!@F/#p=<X^Ph`0:"job;ZEV=!7ml\4u4%`Z:=lZRgiW/_SRa&FD)(T>38(E+l]QA^kY$P#Q8iM"Z#VTKBW28%d%G#16<=]8fHE(<o$b$)i1:aQ!)f6T.-IaD$KWX!>GI1<?d,F!LZ@7r#N#pEH3ZUq\a2>:t>,HS*7LLqU31fR]=YTG(XjcHU<l:94n%@VG+g`'(.6Fe:#GD?`fFZZ2dHok?LU`L6h6fPHIK/.T$ZPeCs`3),'s%1kZ9`4B*Q.O\M7gE]/)OC;r5Bie!_?)'eG94[&-`eej/%/dT*nUN*!u9^)_o-T=RD0"J-5:_93:Ke/1KST9*4GYsqZ&4>'M4153:N17gQa=h*C`!BsLdC?<M2Gojbc#,+)0ur!n-(,.I41Urm%Au[)t(W",G8od=<>WN^%%>!*g!fnkCDTN'bgF4\oM)NhU<@=SdLKa>A#EWQQe10Q(d\b<ZAfR]FQ09gZBNIf)Kr>W2%Y<1PZ>@N5%"'Y7W7T\9^rV?2WS+GsrgW<6fUOE2fFFG:%T1A)-dJ8'0ING&P8*B'_q0@(2*hAonkNC7gH$"KVSY&F8kL'*NFFG:%T1A)-+ZB,f%Y/U?XnEBd43^8\Nc_L+'kkmP(5EF+9hi[M/ks>&V"IDWD;)DURG^PrJj9:F_,Ue;Dga3i/:Y?..B2]Ml\KULRP4XM(OE^/Ho,NXS%DjKr7P.**B9p:NL#/*\>3M[?8YiIo]iWqY<M:1OVX&?78O^HJeP0T'bK-Esp'SYpoG.3M"[Rki#Uq[A/`i^B0i&9h=CK_^YE2^]T%"'XK7K@q49386Tc>nqZ*V5*p.qCH'MHMlaoiNqe!it&$uT1uN3_s*>I09]g9N'`WsP^^4A;qR(d;QGCW:CFJQ`%+Vt5g5P8d`U&o%?"JpqBgaJREl0qKW>K#5-1PfrCSBCW3!3RC=AOn&qC"GeXDb+[Spb^+3q#6ihGI=f-srh#EW%]_&!cubhIqXhUZq9f20V@+?E&&W%RH]K#Rt]sD3!s'7mm!$d-FrfM%Gq"+kP^L;Ia'*Ep"]$==^hS`l5S3j<4ts[)fs!fZ^r_F9G\?GqPqaW_bZbn=aK5p=et5VGY[A"%GlONaX7^c?ZX)"GD9,sgIECP]TRg&]S=LmgQZ]s2W,kq[a]Z27ZaN`B2c#U.d3Rne02b02E`"-L]BLSp8h$H[$)+rpTK:2f80=u=%;aHC7"BD7K.^MB?h)%rt-@X_!5</I=1Q](pD>L^T5U(bo6gjg<7'M4NWf>m'F[F_M$:kTU&2j+>0/f$3!'sRIMC</tES81./mYQ*%MKd8!\%t,9M^*G!;ln^<k1]#A*KDrqp2[;@S.,Ul%HK.":UMYHCh!J!E"H4,^rD)&%0rX;#,G8T9lEu$X5U]mP4D6+*0s-mD9Zdl%$8KT%BcG+$/f]kMoU1l%*L:MX2\kSEi5=r(Oe/QhPmC#4jWH\Mj<)T-8sb\4GEqU1&p[(!@4%5&Ig"6SC%po,UZm&T\p%P`?gc=T%"X>D;5@jjd2>JF)g`3n>cJ'VS/<Ygp9ZbT!/h_4EZ>oXR0%F!m#_&@_!BEI?Qpgr(VWP;6n?!RsZb00m+RM"GDpe'9I@jEP;KBKA%mH;AK3qDa>@,N==chi$#igGc^,>\2`%Qi\6\%is]//e,$bZd<_8?@"#@7FpbY/CrIiu`%a*TI-%O9=EL4)$X$E1XoO:Bq<)&RX'(%>A:O3-@71G9PYEtS)b3tVdetkkmL!e\[W333W`2.*K,`<Kd=;K-Jo2pc1N81D+OCcOR8[D]h(0#Uq:(+m4]m7[nlgYgN64"Kb5pk%-K'Qt*6Fsb>CTF+:<D%mIVLa;JR?l`[hg>H,$P&F%SVHm5G0`rc'pn?(Qou^d?`A+?##LAR'Y<jo4D[05FC[WdjB\>\"BIGQV*mZ%H0JbF>d(-g?X,Z3XdeF;TNLp28Zj.^CJnAR\63DAhBZGT9'o9K?#rD8[-Yqq?0O%7K3`c+@r<[u[[oir[-3`kpQCuOEt^p]k:r^t%kL!HpHoe4nSe'gg?&g>"SC#B%ekHM=#"-PVjN"h][`?YgO4P,:@BDJoqJ(rJ4/i!>PQ88R%*5i44c`?M]"qi\F\KfE&t5t+NS!O:%a`:YZ@bS-`=:E7`%41O@BLQMp10Kd^Q42@*[N,12\lhdMoBPi]RUHf;HG"rDfK`@uhEj#7TW&uNTc#3+WfsAC9pH[sZ(36K\9M[U%Er[?e&]-nYF;,*5%#?n%34/noY08/s&0oag[OK%H'XtM"]J,F$4VYVR142CA(Kl@)msMtS$$^g69b3,n'^RR*:8>%g-UCPg3\6f1%6XTE?,0!BjNWPjHAa9Map-<q65:LalN$Z<riM3UlGu,3+V@aJq6"0!#06P=Wg8<L2m?C=8-7c1a?fZLP##E6%eKFX/jKi*@WmV>2%p^Golf$F6`:F.*ikrlJ">j(Xr'@P@X;fSb#4S/1rpc1plBsp,<eqZ:hkKj9-oo'Gf1PAQ(>$#!V87?"d.bX\;gjjOYTuQX]i,Lh2%mk?2/0^7A";Jj(^,bK4DJ?FU]?W)Q"F`6L5ib0dePP$O^.4jlBgH#,>Qa"HBl@gnbc]pY,FW]>uX1ZX)!Udj1g*;sScjHq!?b?oP%>ZHbc[b[Q-la9o#Y%rr<E2E9[Bj.?5B:5cZB#=3U\m]_^BmHSp=fb>#RAR;GbB:A(.]XblZ<WT/<sl(5a+;cs0$eDPnY3?&S$dTr%\l$EE)fjpNXO7I2,%L@8llcBK`To"qf3,[#ffCX7,Z_6Jbp#"Oe0%MM0MS:KL+".*UHsc,/&Dt<j<#='2L(#embq$'OUXMMS`e#t%Nt!.:K;ojlq8Jr_ZGBk'VWYI@oV#;Xr'*JAXU]NKm*nOS<l?3K;@>&g?>T.KW/YR?7@\b:%XRUsY$EQ,Ss?#k1fMo[^kXL-/H,@/%#GP3Z0e1*2-ps,_>H["e7`AN5,pM%_?<ODL<qbQ'qZ2u\@*0[To&3]MiM`]1_IHMX;a6);+-lDIB.?VR08EOf);T!TO^CSeG4AjG%\r:)MO^$hQ`2W2nFgN/O&e<<N8^E@A;R^n]WCOk'6\BqUo;3L_<uCBXkGucnnZ<06=sWZ)CX"3n%4C0DgU/Y/>j!Wfk#HE%>'[;T%pL^hIeTs3-*hKgC2VtXGnV4HrH1\\!3<s;mpd,ERf$H-bboCN6ghI1q7bC/jfauce23LoXD'd(XcG&+Fc.6%jbai#i9%T6S[AK1S%cYQN_<.bD%_?a>462NR+ChG25/JT4/f&Eu]7StnQOQf2-UKuoY`3XOoUl)V_h)!'8L=3f8Pftn!R&Q7f1tt^1JL6j\]8"e_<("Zo%F9-KkG0b/l1<6X7ooP/rT<V_3)'pA0NC-@Cg9C9/q@g<*-EGE!HdIs1c8\rikX0$l6o"O\o40`:4a>%1W?3rm`g%\Gr(XYl&)MU2%OFa\e/<o7EkOZ*fi9N])U$jB0'4lk183[AfCDakL-ickkfFJ$36NH6fNKgc0O]$8u4ZiTeS/qUimK[AhGl#mCgj<][H8,m.k)!o_%4h^c9?S!SXY5-/I-5l.3,PqPA`2X&<C-3\&^Zt_WI!0!jn_JG7UDbs^CcJi-jhM)+mco@%)Yn?ld>3'anCZ[E%IUnAF(:>MOM)pY%W2EM6d@>m-"pg<*3[+3$$IYoU0h+rOVR8/GNi#^R76t.\V?:,gCtCQal0'%XAK2`7"em0ifb\;<EmT+sLjh`/IK,[Mp%cXu]0WgS%0#sJrs4ABTh`\eUT&8f<j0L<pa5R=Fn#SLRQ-ZJo[H"qUoL1s>;ACQYE^'2G7WucS%I%pD)U,dJE+!)(i%]lPd.h!:kH]d/i+-0W%`??4%eb[1I8]GInnm27(B81!ohk!tlc)=3:7kf!T^>OV1S`tle</>UPS0X;s(e&l?\d$Pg)U1$oAnfF?/\)DKK2NF#Ta][pkDBJ]%D+SNR4`574-;N%)*MhD84\2>]@AIo8hefg9gSI4+Yi+>;cT3Wkl$@8#%u:]og<fA[;GZNub7S/ISZ4hIkN]XV:@mHt:Y6-IXaK-8%jO<qK;gIZ-bH0=KFbaC,RlU2hdT-HPC"@B&]7ul0T;mO<H(j5>%k=Qs">d2QCaFI/M'&=F4"[#9b*b#skB'A*\AfBIa@Q%H"%;/3%@`3-#aK1/ZXPT6;a;ETh&&cQPi+(]XB!l?NcmQNg,72#?l]Q#%3P()q?7()c^6J7[P3s`J=gVPs))HOE(OU@&Eb42arC_r%LMenl%m^KgEH.C4D#ju[H/%)+hD:=72c".J@pdlDN9j`/7GH8_dp\5_Ch0=o.#jNb^9-@A?9smuI@eqH:GH+)P2Is;G`GrTJ\NR'mb.'2_%_T3):\sB+icjNVkkY*Iu$M;e<ffll/[K:$:iWG*9TSKq+fX0u-):R2I0^GIud#prWfWg6t9)O:f;UUB&*\aBg2RbiPr+DuBKBI>N%2prnBOj3(.f2%?`Wj."b4EPa'o"fN.Zu1cQ^(d^WeRN8W4/pf>1p\N[Q^>m+>pLeG?-=+mgO\DjEX$s.KMg8%\)WE0NjqYUh^/en%#[,qpZlWp@hIJb*dGEWAUB<`/pSUEUDt<dAnGH8Pn6DdTL/'h%::VOKn,:?/lFk(ZeQS2`R1d#V?DO&mV103lT5:ZV[h5$7ZAX!K%%'A]/at`8%\`PA%M=OfslmaL2Mk2QBc\#?aH\'epdc=WN\emKqA=I:bXu;fJfp"<R?dod9f\ocdrBqc>)N`oV2>tG!^#QG!OVmm+%q5dI,mrXAo)LL*u44goHV"/J2WAS$N2<]PBi+_EEN+$p^Xr\"T)b=O"*+#!'(fg_>FrSmI4re$%k*'OI!^em\BK+6+1#D7N18oT4%O)V.HDo_a*]$J9\q)lNJ<XfW#7^q'JKO7[8C-S6"6G=Z6P@[9UD2hu+,/$9>5LjV8LAM4&GGp/_#aA5`aEs$^Bb+@-`teV:=`6!h%=G.aad66?]Hb;lCG`V:_*o5j>]#T/>O8%iZn'O;TUH?a2FM(+f8*ssI3SpP.GcEd\U\b3cnT^,_nK-NH4hA[\FH?1[^:4BVlJ:4N%H=-0pNs:[>kT93?4l2sg[ko)nd66?]Hb;lCG`V:9]gpZah@j;eRXgY%G_>0ho<ZC\;O)-]SfffTgN_oh`Q10BJP89q=anL-"Y$2H%MhO/OJ0r:n^PF9[nXlWphg>f/pJr&Hb$/"2Kou[9Ag'p6/-OMf<5+%CM($jgL'hq!l5?PDJ@<lmh9W@@nKOrI/KsRSH#;ncc`l_q%0B!o2^YA+X>>#c4N=9Lb;USAU$^4Ao.C[\/g<#0tEXIX5iD_$M-f=(8URX3YiL%YZ3@^kp'd7lZmIYgH/8eGQmPm4oZg5q)hT@%f%BsX.NnA'.,V@qie%p\)IV3;C?CaP-V<4]+_6)=,u*CdoA:ouI7@7&Vb5[8<3%#LW,gf`t0UIt[JfNOV"$Nd8a9]%u2^[]FR*=eT&%jD*ADkrrnsGeeeaD!)jTN#jY_=6km&#@]\7MW*c(6b,@kYSUZV3P;S"?XqoUau5D*MGb)PV5'8eEnpWij[Q"\OQ;eiRhX5AO%@@R%''2jCj2ukC<&Ah$+@:::MFPO;A?)ai83cFGcd8gP+SJbRUn6%0;GWGGBTQS$&'@$#2pp`XCY%TMX;\/)_4>AH0(j=>*l#_(:9-[k%VgH&&qA#G0>VK-ZH0%m`*\SCJP(Ns,TPC5)2""9428Q3E.f&^\\95'S6TinfgbYCBL.S9]OF-i5(`%-fQ[4BSk%[W]l#(kp"c94T%-i.pVW#@Q@NgGba84#[QcuA!3LQee4ae_?Q<DWHo%S/h_>b?G]aCKiQAMu(H5<oeGjA6CT[8@&J@O!*SVi"KPYYG<mr9[_Ceq2;,%p`<_t_Ade(n0g$T!V*&@,jC7!E(1-j%gt+]4kiP;WJ6F#4E(pB>u'XdN2j3(qUFE#q[le7WI?&MbuDG<a)/X,X,VsR$Rs2S<+<ck%PWj&0Q$#*$LH6Y*-*Yme*@.I\rpqD3G#2(OLTWJYQ^SCiY+#mp6[;h?q>QU&B=jMr%Y\aQ#ESiHT^CY!Wmr7W_@EI^2m\c>"JQ@k%8Rq[qlb;T'?AdJ+`P>2Ue#XBELMfO$;>@JreI<j&GF1eSN4OO`1L7(\#1H&L7\SXj]VQi1;b>l7RV;p=k@TcRgD@"7YUB-=!\>9j%CSs8+(P/u0(P27_!p_/<XbnonZ>\/O7L>1$k<2W*bU9#tXI6sbm)@E4V_rKs'qJOhfV0bn[-=!$T)&4]V%5XBJrQj>k`BlCXgfej%8S/?g[HV;c:i2Tf;AS+Ifr'NHXK'Q3hG$q^Fe\Ii<u\%4,Y`?OjSfi45/Z*Bh5W9ArFqOR>SPLUk;hoo<Vk(QjLRnkc_eCt-NU0e%=0j&U%?j5GUm@^e,I8YZGJoZ95gg7]X5oe"aSbgp2kq),3E&MKU.H!XDXue\Ur=9j4fm*"YW:H^rit]:m\ro0^JWsj;WdG<qn&I&%4?rEB*mP@(V%4*nm''dZhABJhJ2)'<;l%sP.+]'IX+SMq+$SPo6XnX66-nk0d2m\8!T9iFY+qS1#>,kASalr'pd7)aU%gMWSH9tq%N0*5)AGq8T'?DD;b$c`A3gClOL*T1(V(`44!KniRM?Djg#n!*!3#nmUKkF:[:`2A]i=chD7,^EsfGj7rIWQLplERg,D`Z!I4o.'Q%(`ip+QJnCj!)JkhDbk\)dO<8Eb`p\oI?c\\arK\<#C)#%[AAOjCI_4c81u#NXnWS[k=0bGh-G"3<K?kjeD"=:lcX'lKao(@?fqd^%Ht8fHXL"mW37K\1PhDR(/3uB&GCneqoZ5@;T9_.DVap09iVO;P;MN-Iis]!+eP)%&s+DPP'KbE\Fa>a!8DZ5!T9^R`.&n.X0"c?V%+,]DCZnG$2!U].4,,J5`*6t0D^<<2<1@4nC+oN8W]mbn8:]P_n"M>WYk8t2r:I3o,Qeg^l+qJgMi_B:>aNQl@Q2@J*n3l/AmN3?L%hW]/Qpp7s=)`f2$XOu:Yo'o_64_m2,?WS(\$ZjifENgqR_/,QD(Bug$UQQ\$ob9g/+Vd.iKmGeim*JmJ!I^i/FH,:?:]n1ElA]h<%YA^mr]3Mks7TMYY(4ruPfW3%lVMjo4csd2;$EK%'V:AjM)qXB/k]Wru=gj1FL27M8>5B4_MFP^"Ggd?&PJCOJjS^Xq-RleAn%6&k%Cq(n(g2MuGg-$_"4#^]MGUQ/&6VfQFSj34R#.%JA4>\#ala35'F<97b\ej%ASAS>c5=7*K8,)2Bo.2rK>b2<&Rrt=2pRm0jm]@Lg%TA*.W=.bZtH\ek,%jZ9J:MALcXZkj39Iuu>2;&q.osIg>,%5\s7lG]$R#OO=iEOTH!^e`_P@_(W>XXk/=RK5Y+jL`%Dn`ouq>TgQ%k5Or6VcU&/L/`V!IJX&ZdIb]XkP+_O]:6m@(@P<@5=_<`ON=9p&.!T9fq):Qq+rPY/p62%*l<qQ+%Pr02]p#ncTclt5Q=g_pn&/n%bJ[)gRJb,*XXA$!rf=h5s*ANg(EdU=EY`*^GBJIAq/!`-!8ZSf^4QcVTAjcPq'H#X//;,6^KIVFb0-NX>q[Y7V.eYp3*Bn:@*(f8%:O^<4r,(Nop:mlIcr8gsSSMGS4`G(^s#g:%I`bYA-1nr)J1;2;CDD$:Rji.XO=2sN7L0?5C>7=)+NUo.eH;o;FU&%f5R[PDct`[W%j7$#72iX9+>%8d6^$rM*=+fN?WnW=8gNGkHY.H[YEZb?ti9#X^eReX+'r$ZFeo7KcQnmfL8FT@?cd\o?D-)7!#?2]fEdW^%Cf*:-%#4&pu`">E$lZS.p;h:aUN=>t6S-oTmUf^'ifN?"JRi$eMP!K-.h,Ru+)4c6)paM(RBC^X6iG5[WV:%re9V_USiAa,5gQ4JLT9ALL%1UmAWJNa,QH,)fK'1.DQXYQB%GDO7oa9BT33cMQC*)#(YdTChFIQb=j&EJ8;6VoRV7+cM6k^lk30VT;`C\9aeQo-Yb/\;(KM&P4j%M'k,cRKa+`?=*B`Y0'hbePP6f!Kj85;"R[2Aba2\iAHaoXTMjQaqER)Yar4FUH<]*m(qH9>0D`2^=+dQFI9QVNcD"Vq8hu4rnF=)%q[SQGO&aI$G`5iK\C/)I\^J1:P(51=BkU`">nVEGDHsUMMjj]gWUU/2EmFh@*F';`cNl&3GJka:V_2A[4$U$Db'=t7(PrN&K:Ai\%]`fIhjS]e2&/rhZ2e@g,E.jW%bV^7R-P>'JChM8g$L&1@EWG;$]gFHWn&P!bl"GSWKS2s<&L<Wt)a^dEYY2+_OIEhj]*8X'Uq6nD%RZo9;@CHI^M@FD/CfI;CBbr3[Z1ab!!nVZaT;.:"d-&&/`%sel6VDQ8bmZ>K+_EdRnSpC1V3%BF,Z6>g4)UoQE`27K9rf+SID]nj%;(DuZ[.%he`$;$W_/s(ER5Ve@Z0DaM/HqV%2V!eU&+r4MGt4c>dbcblh9SHpIpE+7;.(KS:-(OaH<9JV*c@.J!7m9g"sq$.`?*TU%eWB]^!sicU2CNsT]rJP5Qi$J7\f)q#$gPkL;QcHGp)8ZNgE`>6<K`P6FLnV5$#V.D&&AIGXqLB0gn5%.%;sn;!lHF+2j6KM>BC._%`)+Q.qQN9%UlRIn,Jo)9$eWfQ\S^Bn\(@=*@^!;ELA-SNQI^Ztm5+]pg(tSu+_'IAgOlU7)a+3IP<pG.?!%"'Ub:2frk:6f,^^u@%Z]9_Y@_:4q$q)NuAsDY(#UX]?#25:8r4P-;A&dcX>;fDBar1oVS,(m<O7/p9A>N;bO&\?2`IIp_V>:muNeLuq^4Fjp=$!X=88jW=%)&GL@\/aNiJqJY[a)),Hl[^8rZt^.W2R3@R)S*]PI0YLG&3,5B41Y(2d?3c6\0/#3T@[FAj@A,t`><Z($/df!%#4+26iA@#H\YsY%R3^2cIc9#3F6aECa&33:Y\c/"O]TO4;nHm^'nbMC]&:&c&EO=HRr<]>KMPn)[IN$=eG_9*d5!N1X,GJ5's-LM^ucisL$0fef5W;g%TQ-Q-p,^>0"LOgo&2;$k]&3dO0g#pN1+U,`1t"7Sm_KqqW,#+tlp_2=YIbQ(=I0jEY`T355$.j*OYSW8;=+%/X2f'ZE8F^;,r6aY%[+K^eG>%6N*plH9N"j/H"1OIKT"s9ZTIJ=6eF;e@PUAggPQ<X^;2;[/k_\8M%D@h=_.a++%!T^dcla-F'+K*;7>\1Pr2rTe#fJl]%J[LIV25,S>^Eg$><m"S`>2A<F=tQiXS%?B>F;4VZPkBo[TVoWR":+oF;+H=T)&.U:048W8.I4C.*[tf!ksf"-jSJ*",G\Gr@bHS%%>3N].gctt-13jOL)q9CiI6t_WQ"",AU]\$1!p!e0<_^I>ZAHf"QLthn=rqZ1TGG@K9hQIb!j*"\BV)Rn,.Nr(&EW,1bNe#]Cb%37%C0nDiR96V1iYt/-7BU/aF[3i%8Qs]8PNCo-G!bZ;V=eQW7M`LR_Bjf>N<#5:%CEtP>qHFH@b(]k8ZolE(P/ii%*LD&8#f1o#7*j=%aILNW&J.`j\Q.F<#rX["FAiU"J>b_2]+%PQKNch3Asffrd3t+!]80R_^6'.J_)NR9`N-*X[>s*T,&IV"dCKNI413oNkCS\J)R+3N%CM=TD&3RFYof6p>7<CL6"_DgEY\s[Ief1<8f"9:uE$#n$=1M2.haS"W6*)Hn//CRg2,1/`"kYf+g;ZVA19rs"VM,S*(jV6<$o7?]%YAE4%?8o`C?(I@^:AiXq9ahfQD6Y,"&J?I0$Z_:b@@:UDA^a+]CuUg*(uYRo'h01n?+Bll-`]P)Tn./t=iM$\5S,Vb,9m147YV_5%pL%dmD8<q&+H%IZd5Y>!S3,F$,4jrZ!B;[,\1pP%`#`k+":T!]L,q'pWZN%9Q^&O1D&YC=@2jMCc5If@kl;P&VuZmrW<jtK"$$"e%:!CtGB]@ss6K25)DNn9E%ug<B[d,Iq5M6BY@`L+>QaKOb2?J<&6KM`:"BL-a!4WNe!:3S8Z)G4CW0hSh5c`c=ZuH*q&<HC!Z03E2%@9sK`fQ%/Ui#Dc*S4>rI/i%8"P(QQi$>e1K=$gSo4$?^rC2OCR*L8S>i9&EF5SMRr2*C'(9q*'-#QR?:kC#Db2BZl^G=c6_D"PB1%g,`te->g(@0'9T3R>bKbYlcR]c>2j5MY3o3E:9I1W51VKns1^ET]5\J$O%YVT;>JXR0eJ)'&p.8ZQO-16aj_%0EV*\a"h6//r!DX%M_)sa68MHHAVi<s<D_JR"949%>do9RE/e?6`5(3b"S?PoQ\9P`3#Fr@<bU(dE)cA@Lf$4B)_!.+EeXc195:/)"VeW-"r^56QdNFM%e]9.[X.],X!t`o&phbVTO?V.C1-:s":J9^["pU=#@,7_=M/$_A"e\l$[t`U/X"%seBX3m-19Y/L*&X`aMc'7E^ncBI5+tjV4pWHJ%H<%ggl;&Z5+b?REV4'<`!cQ/J9jkjYND"?G=sW57\.k9oEfj.1N2VJ<B&Z;!k`98jY<jH=!MfG*G]qs,8VIFR!@(5b@,Q`lqM5,?%#^/rZPH&/kZs[$JWe`mQ*lS!r>f>,WUC)$a_E&_5ba>o28FjUDWWs-Q$9O1l.R:mL'VIYNjTSduV%8QO-#Q,>7[l:j"5A'#Pb\M*%;?-f50E>o51D4]ae]KVNoeKlOmV-XP`3MuN$j<%oL`<b)k&*3=kfBLHJjHY!ENW=ZRVTV!ZG%+2MknT_,KnH7-F:F`-5IgZ=*6)^%1/9X[Zu%C;j,V*$_$XCNiNT9G[WP5A:UB&o@A*=N"9M5Y#Zef$0s$(Z9mW4;-A!OT<`!q8#%3If>unCbna!Q]7]D2IFYjn./9TkT%/5VkLN$oh:-?4kuWnXI<1=.jU5E\46Xu]/j-:klOOT\WLn;en2!(Ns&;-$:]rMC^RL`p*rYg4U"NA;j]lU(:8M@fqfM-e928NS-7%-jjC:R`*sh-*`OM?u[IoD:FOK0q*6g#SpW8H5Z(kFjm2l&/89]O=JU1<K<!l$Hn;^(95GmS,jj]\+QPV"0a\85A++[D^2\n2G:(f%7#I(b#I\'/UntMETZ/@I`7;0`iRW@q@'/^7&HEAq0HjrdK4U]KP(JG5S_?LnD1ri4BttU[6HtC*#_i,85\Zm*"l7DI6*Q4LQ:-u@%'W!dNL-uK$+IZEAR;<#"(<X_$FfMOUE*`+R"#0:ClOpIb";udDJ7H7uT`@i8%-7r8X"EC7.fp96P?fO76h(qB;07s]8:APnj'$;_%Cg&M6[UJqrne_h1+[sN--khGG"H@mV1tsGb^>(Fp"t'tNfb2;!,]Hqs#$F1+]FsR=_[Md`6&]D^(G[f8*$DZP78'@$_!5Ia158pd%K%!?1/YAkgB8$].ZH=JQPg$K"ePrHk5SG%3CaoV>m0j)f9:aLs"aL*G:#/oT[K'8NX<7]b(_X[%-;6H1E.$mM%Ldk/N4N`1A?h!F%O:&:R13#CHbUB..i6E'[g8)C_?H=\Ul=?sr_+IBj!"OU`-7\Yh]qOL93Z3cc!Nq?(_Rgc>eO]WPCB7P^A8\+GWEckcP%>d$Rb#[U%e^R3UeSL.CXj;<1edAY_l59$TUk_$0.h*V)\>gBI%+mIkA0[`0!?2RF*KikAnUQTLGbq^AE^sN%okbiq'!Oq_=5A`TDW3-?gGlgP%8\]1Z0/e^=OF@^"'0Ks:knt%bK`A#^d#-b[eI1#fi?<g#?pnC3m1C+8N[Vq6bRR'aYfK\B&R6`MACL^S9f?/,%11Z6BbmHJW.@!q%one).iTV,27F;lb)K[C9EGUm+.3M]hV,thskYOfKW:5s5V.RmSclFhum0_)pBkdXnZ?)52&J9s[LeN(#S1Md9H/4'M/A!@5@'oQn%npR]rXS1Xb=>M[=-a4UFD`=upFF^=k-cQo%gS?h+2VGFEC_4_V4CI6!a4c5A+uDo"f)e\d+R0@DCo+mk:?>olV\*o;,Wdh5atAmr%mBn!cgZ\*+48Hc9-i`u9c6r65T&.-IGSIVI)A*>8eruukE?+@aoF\E.R,1D6P>l)[(;/5%]E@-=7)kS0B3d1u$l6=mZB5USgrR_m%hF;<J!Omn;7hg8bY^6AY":Ge5!>('^;$MP&72:%D'h\aobmCIc'[UNXn-B:9[1^ge?Q4AU&m).:)l;`GX\mlW.%[4/N4n^'\H,M?%T;8brA'7_dLs&t!8YaXN7pl]Z%Ks5"P-WeD*a@GS%)_$8VJ=gu@4Y:,XgpVmG6CBm"hPoZ2'XY%:(SBk\1rORJ1_c./6onU;[L#O%&9%k9&SRZ,\R-bp,;:MlSW/SigBFesKV@ge5h&+,#R;:c(q4\V!UH!"JG!W./Reanc>CqV5S.<CU\''r$::ktV'nmg%*V7-(GGo1%8#?ar^81jh;ksWW)CNaZSd_3&_Dl@E"DjQr.BIA;@N=/bg@:E&hi6?L?l1rL,Y5EJ7!glo+i'%fX\o%JC%-!r@Rpug5XY5IRdubk%AUsk<OH$=Iok=EG0Ff[g]hi'en@<ul/s`RE$D'+%=[i"Y7+"VT;TTJ`!:^0pr_3iPJPmC/P8+/R[UgRrT)afW]Q'N_*G:!DJ=+#,%"fbQb1Z6$qr49=.9d"fFd5&-rbn=ifV463#*JsV3C2'"\:hmJ9on`1EoTsBV#]s+E`d674G+Fcgls/ABFp#ZT&G(E3H30f]JXSh)%2$,$![?ahLa@&L2pMFOO7`.hf)?BrH^m8(Y"2U?n*?]5ii4'-)]2f)L^a,pKb8C>OaYRXU]T%g(5pjGt>.RERHXg8'7N*kh`FT>+%nO,3g6osUMit2S/JSAo93&#O\"rTbfM?]$*.76B+@CXVp%-%U)#T$,'Rp&tl!00a=_1ANh:AKF!dVU,l09*1b%7W$d^ett_klbIF%&I@V%KFWgk2jS\``jR](#Mllp]SQX8#iTP)]LjK\#B7pRC&gW-Vu_^2![)1.h@!d+ckon02PGYLmN"1tJJ"B'0%q$?B!e4"#o,l_%Oug#)"t;'MP$&t/+eVY&hIn,N!9r-\.8.T"J_$XQVBJ,<JPgB/N)tu!5bM&80L%6L9<2*"ASA[Y&-U8+!.9B0hOQR$#/_6f-#6sE%%4DQt]eJo5^aSia7A$N05[IW#)C2`kY`\U1#<VnqQA+Q[ZKc4C(DqZo"H+;IE6)3PKq&A)V/$_"\QPr9.GD;Dqri&*D4L0r!K7WL%0f8O.-mCNC&nFPo!AC_pp(B3G5V1W&kl=12&hke^4VVWfK]n"&8co*gJ2<suZ;$n@2B6q7P&9%.^Sh0PC!&!VVI`%.?3b'[&d-i1%*J61%,%7J#Y"o[gP/RIhWZ\SJn+XCb_K$EQ1jD&c0B,hqD+!JLW5!#LN^+%^15S4LC,H0b&8KYaNaVMHn`2aKA\Blp:d]gV1sfp(%>_lsa"sW4eBifr[IE#[a)Dg%9a@qb^JbbMb(4dh&*H.E*[0rs:QkXB(\?'g>p>eS0@$J'Om&NjE)F095G79![p(gNSegLk;9\7/.%j.7kk@porWB"X?(H#%VY2FV:YV[YK/N<Lp_lUDa@$^i!1JQdRfm66Pi&-P`RN\7Fi#.Iq7/<0`^1=&GS!f7%ZND)?%l;FsKiiK^i%'?b\6%H8l@1N4Y8#ZE4K"u(pbON=^2(`"7H"G)[Y8[gBgOF\Us7'Hb(!&m/**Is,id]H]-@"Y[4PiJTkf&1:nG$3&>&1ERN=p-`=%"GhH1g]Pf`>QhKkK*[M$dTdQ_Z`%)sfn:a-)8/Y?FTZ5?bEELa7#sUi.q2WnWSsKYX2Jt,:p!UtkjN.VA.IBmW&jU;V*P)2_^2]'%q-C>"6GisW$Nm/#`2uAE"p*c>8Ir3&W<&b_l4S@V9N39:6WpX@'%",-#\HLbd4fSe^"'(eOFiN4?i^dAD3Y*\#iHW^CW?nB?m6.5%B>gkPM(N^#UI=0oP.kMi"(2`o=u>,W;/\Q5FW$#/49@E)<Taf)Wjh'=5qmVE\QaqpJGYHI0$Ci1_6]^ACRWah,:XoL(V_$/f*TuY%(nXZ9e>M"l?Sl0ZD>EQi%FcY,go*e7":r:;Lq$$H'7*)P[bH4$]>+l[0FfF0CRHk5qmm@*K&[&W*c$uL6n8TihI$GBglcVeFBn/f%/OG/!W/Wt/1'f:B>U$Z.V?Sm!fJ%uOGuFaJQK;Oj')N)RCqdgh!Gu!r8JVIXE1=M'!,1SV#9jW.11JA6'd@CO;lP=+M7B[T\"F&_%kR$UDNX\]tG8cG0C$5RZnH`sZ8ofk0fKp6kZ]P9=hPAQAAd)Shee*ilQ[mq'nuS[=]]P<=Vu\DP&X#(-!s:9C6AhLQ)*V`W92U@!%n-)osieC/W#)ppG$ukAV+=\t291f:`A<e3Lm]@.$;6fEE8i0\-(knOG\$E!kaW^e4/Y!1Zl4YkY68:M,9*_]%AJ,]\0b80;P'[iR%D/?jbV1lsp4@Jo,Y9P/,gmL_hc%:dS8t++oe3I8_dK&\$-A^%]AelB?"N4u>]MD@Pp?;$[SWq+2ourL80+cfHAZIU:eT\,f2CXg]%9qY_sr%@CPkiorZ<3cfJcik&%!LGfV0OEGL>EuSR[2+YMA5"kb:H1Y+D,"a\?1,?O&93<"WtEp6ngFP)+<1j:F^kN^VRVtu"#dGl%,Abf7W<sh:Pq:Y%<<B[)_ek8+f`or:+ZNL=/\"jqmo6Si=^]cH7M`(pgoBs.>30Ir_B+MdMLgr$#:^<KR3J;(E-2e"=:GLCiq*HA%NR@o"Yp2XYUpo&'L<+`IL>X"Zl:tkBE)$Tl)IV8'!b+hK0i*b8N'Ju'$lH&]JK2J5:<SZ`#69aL*j@*1C=8B8%(&_<T_"a]#/&rS%_/5>tdB5c#+,o\Q[abJaPprms[Y5Xh66.q%Y1CrfZ]%M^S-:^2oH<Hb(9HsrU2Io1@84"4ai]N,QhY+9C5'XUJtX;5Bt%/Eg1>"g%p<uXciq=g2@lq0-@/#ul5eE5'Zg9+["8'DY&P%G=Nj6\<a\GO5fO$oS-=PjSV#AH?EeZ_J$e",4OFO2Z]37iThE/TX[:3)J=bI]t%E8?(=6tk[f:7JVunXNej`?h1Bh$1^$#8l%)+bt`9[:e/1"IU)Fj4B)AmYri`l]bUjXe:1J!<A:)+:L(aT^&sUU!Q%q4$]:HeHiM,%Q9"9pZk+l26!"iD*LgVL_59u5T5IZ/YL4aa@7gYr].iZ4r$F#DB9RRD1=uWTMT5sp8^'OcPJDIijj#nJSD?W-'>oB_TtCfGfO^^q%a0n^Ag_#WbK.,'BdJCA)KHZ06*eDua@"9F-Lr\_I\4%_JYfl+`[QLd)8Lu;&c=XFT0<kq$)pqgMi!Y0KHUX*kAqRVH!)-:C%Af$'%RZS%gVJ%EZi.A#A7ej8t<XUWA@Z*Y:83l&XD'Omi&M/l6/5WbiK3at3>MBoCLuY66#W?"68]#6n7f'RU-q<YG#`CHB=V:dTP#!Y'%!.^'1D[LAN@$^')_ak4b#eLjg[q$Pu^`P98Zu!0nNVL>_A1\F:"Nqi7ek%:SJuh=/+96hq%r`pNJt9'n(.OH?T&^Gu?-=iR#9g_-%e$QUb>+;*!gaQuB&r.K@Rn8,",)eQRjX-K#ZRGlN(ZKN;bR/EWR36TDb<eUFONTO;>#4`.@HdT_GthU!.%9j%_[<.p'Z#p`('0m_%).O;;G(ugioWC!)(6ej3]n!60Z2ls<&L\'Bjm`Vo,RH"tbN]:NOJ9TO,;@W(Rk!-m!LRsdgh!DbYRJ[;pUmCb>He`[*lGgbKNN=*%9*6=f[t[o+#]5Rf-tsh)kE\!o%24LKX;472Y)p=;RgUGp;l<aYSJ/'-aCj"QVatnJK?Rg:03kR!*"B]l*%e6+C&f6CU6UB9PI(l<%"5fN\Lj;(*P>Sr`Gsk<G,,nj$c8fRRM,k2?r8_$Bd$7Z72kZ^4Lggg4Ch@5*Jco7ads2m!/UNfAE[/rDnd)H#!4P-8JIK3*(7tR>%;VNl:V)i3NU,)n=-1-Z1#dd0WnYE3n+=.I^AIlMYa^!*cDP]D>Edn)Bi9HJ/j6L19H9UI2_+G]3`?L#P-<lUA8`+$n5$L=ZmG@FI%+u#\R9O?nFK8t3qZn#H*p*WcqWOO=loY9$`*KJd1n\/!Y"^-sXo@&;HKcV6Q!D+4ieAT[8M2]4uH-,VT3nM]).PE%XBBt7.L"tTT%9p.*Ek:6.!>+eJ96V0C8Rgj]cJeFoXGuMWkpnZ[XqhMJb(jQ0u<PGhJ[Rl.gfO*<26Cf$V2T8aN#6ok^d'r^6o`i>JGnp5/I3Td]%T[u:.%;"-VYR'&+p+I#R-,Km#L<7SOpim!pg$OV1T,Pdo1,7]Q!sK$3D?/!jnU0rnME7]>'-iY9GQOEsOD-s-+\5IJ-jJhac/KdN%*@jIc:DR^VVo;(1EbnPB>+@qK19$:r,FL6^\kDR9[7#O5W9iEI"@1G$NF'81&5QUL$"ZXsU+?ku'EG`r^P/51!&DDnS4)m8W6Gba%+</oPS)GL&4iuA:Dc58mPuU[l9)7agmdaKn:k_oHW(n6*#j+5R9L)I`WBd*.lDb3[!J$/lZ4\)69p3t*npkrjcQKVd,ul":l!;ss%"(3G6M[`n!!6A2UQ'dUIa#nBb#nDJ1#.7lOYL@q<_3jnN(6>O1905#W4^#cK&C5UmIMls:f/PLfq,Sc=#f^6S`Zf=<Q@]Q,Oq4ph%bVCdglTH4mQfZ]IA46"HUeKfkgbDRZas.Q3-%['CkC\nJAjnt]ns3o+-5HY_pa`"?<WRa*Uk-'C2\E)Q^.\4]4R_KU:u8OTh(5Kr%gd)'t+Ht)_DCh`3,#qe'3uM,;7X5M7&q^o*LBKYO1`:RCd:'[`6rt`@*AlKYnh*:=3?HK^[SRN[C`nk!==Cj9"DA)l`QWgg2B%p/%:h]5kSGO@:Tp'd1((C:cQlW2d,eQFd&3NFo?LBI9BsB6ED(ooqeqb-3bsEJ33[_NaLEo>sRf]o''),e/'X$nL4,,!%,.WNQh=I%i%1lYI!,ca`r@mPd<Q?)@9YUqDA"j*"Ko"[El%fpjj&/7P*;b:ta5s?JignCe]*fX2lIMk/8@=cM.#Ea+c)p!aHC`m^I%R5N7NF&J@%X`4ht#t_Od#.,/P&B^?pC:<_S0HbJ\,h#-Ol9a/L-A\>qasmu\`I\T'8p5VCg4E]jVh.AhRrg/(dJu,P/$FVj9r7uJThb0JAnDM/%DO1b]UjIHKNT:PmVu!MfoiiZnib6=i43.JX"Gl-#r"Zr2&0TI=[(In+fu,lB"CY%b7.TJ+Zg9JGA<oGiE:"R3>!BBR?k/5dNabo4%fSciP#9E*j?fS)2Go$_Kil75;oX/KYU0BpQCu#d[-%KSQ=Rdh\1Ot#2h8A4E9j:.@r9b[3*OK%J/g]ti"R8@8P4:',UAu3LPHkkU%4=6[/$Gs=CANguHa9Ne$\M._,Uo<kjc:/h2;@U9OFk-NmdqZu*.M;$2`[L_):ru,Oq`OqqgEK0gaas_)Q1l?j:5+F_`g;$JK^#<!%p`q;DL/PU+\9q,,"/TS0(5t+&%*WK:,I"9u_MZT&!O;^ZA44\X`!WhL">F?OjCANSThC!;=O[NlGeuJfWlap.8>4r]AH][R&reC+%8d+]K*Vf8[1r,hn&HESG)90H=5QD]/A&s$G.)HsTFY34(d:-sQ=b1(Z8VY*t"ITD:Vb?nt+Jo=XUg/``&O;7H\mYr1MI=Ygb*,(G%?dN>Glk6V$ZY?d<aaP#!H)!h\#_8eZgO%XKJgpDaC^#e-A8``)<C!3YBp/q;5'8W=J^,BM0kc)(a8jG%.4CZ0[7"X2@%5A#FY,a1%aePnM$fTrs[`?U#>fdV=Cch=*MZ$00X0aiY=9&>dKX@Jc=#sa\cGbO!@#Emi`*pFjQqm1Ia9Y=b;qj]q[.T-S4/>-[@#GjB<&1C9%)"o5J1pE;k3*N@'Ypof0_&>7oW5*&<oS!4`F29llOFW=Q(dolY.@pZ<1!+6PJGN"VTkNC]OqnGt1<JZ%8WXcjBK3p;Nftj.;,GKn%n5O"W8`mu$V^dlh>&8CZ1lB/6*79,Q@+MW&&CP;'?PXG8!1f&V/Ig-E%T'RMU%qqVFc/[D-tsqX*>8cN"3/No'Y>apSq7b'QVJ!s%.D?NaaJAntn&2o9J[H,=L&s/b)e,1Z.rj+P+TmQI&N]O#(4>362R"UW8\80)0^oC,"BHZTN^W<DVGrI6\=8!\h_I$P8/@T)SD"<!%YR[FWjh+:3E>UC3.:udE)-PI@dMWKSA-U;U-s$_s7@^58B.GN4o+Kf6&^8Z'o4\X%k+u1S;9i\0aq/U5'._KrNf^5o+1C/F_ME+s%(Rcs*;E0b=/.G.sAIr>\L@H0GonDO>#!/"Vb!A7jcR2<d\M'=2//j*@#gmAiAC!=;o=!FPp*=sPD.S^69$Sr]og:-,&=ZJV!SGO,%`q6QucAdO",R"qc+-5^Z!7!le(JH#'Jkp%'!Zd\:T#*u)dqPZ:.=GPOA*sGh*LBd$35@atU*:(LY;8h8F+Q".Zj_&^DD@<<R1sqt%Yb]E)0TC`XVu7ERhfKRJA4C:pm%@-%hiRl,VO1Oj*KCV);A6n\944K38(LT?Ar4XP(6$@)R+'_&T3hR-D3+nE!Y>(GjB*\-g1R\n%VB_1sIc@fiaD".FdN[&7o*jiQP:a;[K5$M,9#A=s=9@JN%TKab=d5skV2KKt=Jp3lR'e=+g0P'4,Td_6RT@_^HD`bQ!EE-&NRFtB%C'j"4>G%Y"n^qWHFks_$`4P/!JR.,d^p64P0Wkak#@N:bjijY_ikPshhAR4Jb?#9(&k=(D/X^j8/.rt)GHuYU!Ta;/X'5oU!RmAO%L;4rL@+(h.5f'.]oR(tQKSG"OYkCQ;GS!69Z!%oW3kBj=;40q2[#I>`PDFb%7PNYkPB!GG-SYA%eL+nVPtku>?rL^eKViDiDH5JX%i"]Y9_ipAm^o6Z=lNE'd@j]5)4b^<kpE1Q,#]^Bm/+e40bR&54<XQW4C1S<!M)Kl0[$hN=-i6Sj>*`DQj7!q==V6?bE0MZYKS.[(%"Er6\+q5jC-JKD_PqCrl&q;$#LrLf6%m8B"/J1d6ho,]CYtHbT9,fScq2DElB-d96SR[%Y[Z4c!%>.#@l7iD].-X"<@1[9CE\_"o%+:ZEF)GcsJ1BumdH+`L_#@Lr>&Zl&ej`A;4n2`kb":K?g2'cR92bMlb9ff68Z\u^M;S]7ql]J=c1G0$K*68+7Eh6ti,_lAsQ3fZ`%ajU\k0m1:\#tG%H54%K3*Zg91EO@VG:.!,J'U)T*&Rr-jjK-*!Xp*jG<PBILdqbU7M7SAd@?cmN4ZWTbBN8i97>uSg#(/J!mM!(=%/o</-3\W0=KM6Dchh^k^p`ps6L.!0(T`inT-5qKX@^bNo8FUZ'++W&)8A11RelqFZ5T17=%<Al:##ZEc"=B<VMp-_&]ufLJ4DIas%_qC^WkFhW/D9e^c34tt6DXW:IJ-U^W[F'hcK[0_0Q,V_7h.;0@p'!Xfc9Uj3XP.cJ-:OX2EO,c(Gd60BZjC18I+U1:`29bc.r,>P%Ig#CE:`rMA!.&)'FUEYOG-+;1NT0OK:<kR[&*0sNMi1n"r"K;8G>-O15rh9h&HcDr:*#E@V\!MpHj<OXHeI-%Bba>I*XH$k@KRun%Ej*ntAQ5r$gN6[i%O4>-YZ=LBYm2n#+r[F6BAt'd&8eKKC`4/lbIREc'Q34h2k\7#M?DlMrAkr4j:jrab]All[plci-S/$<-e0[%%5fa1RC._OJbgbCs!6959+RVr`h3AZXM>,S<8lS,+OKc<6.8*q^(X<lA:'9:h.:uk@63@j'?[E*U03:<,f(?7/0G+0tSbm8X2Gn^G%Ku]n?!uQE*((1VEdn(qfZR5a9%8[`^#kI>uCK*T(Gg(dY!:uFk'6:1[_#lHu'H89R&`eJG:DqLjm-DUL)G/uI1DuXGRDIK1Jh/p_%<_UN[03Xp.n=^TF&sWHII(\&I7kZPVP&0jOS#'Aj_T^[KO"#iA%j6Xb6Z1jdG_mCp!$IbYZOd9LKZ$R5h?A0k]SI[k.4"sP2:!lN%56U=gR>7$)_aYCdrG=O\;-EE08FdpM>sgnq&aYYt")4>G,Ps6OA_3H6S6hHj>1?lk@\Tk(cm?So:PRNUP)kcG/"9/5PDR)QfSs'c%nBFY,TdYn<=s`5AciAS`P+>$/?dCk,Dj6CjN2;6uTP6Ac&dRNP1<0llHg'6:-GuOCgU])Rk>3&'[OP/G3>s!q1a8[9MI,`PB1iRC%$Bekn)nORR^c%`$i>?^Erhf0qmMZ((J@J<K<bNV2@Z+)E=`<%7aot$XiIj+CBS:J>*F5R<)DJ:[\FEVDlFdeNd$c/#h)9L6."f2m%@o=[rMN;-u(BN1rJ`_"3V!IE>nI&>`Kd+_$21qAf67Nm(5*CYDDiAIG`CFBZirj&%UPn4p%!DqT<ati(MKE(k^`rH1Pqn1hOe1[p%#sNL+:'&&E#I+B<.9nNu`ZqsW3#TYgW?fdtL5LfaW:tc/(^(_0<lRUq0JZ`ZM:S[Q8AQ71U-cKm3KB7"V4t2P+1$dF#^"^OI'[W4%?@TZ\.u1/RmLg@i]XWLXV!hf&BQh'K#sZO<\L^$sD'4P4e8.dtZ72#''`NL*+2Xe9e%b5_P8p/6'H[S;N_DcXSH=;g`@$EDlP.X&%eq(0d7_!U.,dA/5!=\7^_:^+cV`5h16&InM.21?Efp2kOTiic9/W5h(4L-Gs]_)d(r9.<ZeY*H01Yl_.@npFWJ4\ZAkpu8Pfl/0K%Qiun7'E77B8GFPjG2ZKQQe?5CflY"j:b^:"dD?GG=/UDar`5#j\Qm*+__(2X4@R+15D7*N=Fo(0E8Vre=00a=.;4qOFOLJA::,FL%]oI$!IGjaMGV?"a?nah>c=:NIgq"O=aOX*M%1WRK#U?kIJUL-l(5ue<no[!W"26pVU5].+fP]!tGD`\Ch//8Qk4`1]!jNo(0r/EU%VCdpUq3;#oW&i`bbGKiTXf`-0UA>Jb&o`Ud3[3G=JWO[VZMM+01j'Aq5V^V\Oh>_Zk%sIL_t8c,`Q)W`!:#fp?ol7/Q6#3h97P,f%5l!Jd-UYiB,_(SeN>.%OoL`W;l^804:A2L!PX`G,m)pf*8"u4ej@ZXTUgor)irPJD(8@RMQ>?YB7LS5!HMFg`&atQ?-5;1T*JR,3%J;5:QSMDC`1W]%oLn)4D!I_VFZSaG4bm;Bu_`m.fiUILd)NBbA+tD^%kkXi>D"J%6S@W`u'.m'd0eBD,r&]Xt^2fq$iIr3#:,6UM%AITZn7%bN-K]!%q_?i\F,Mn<:LL=h[HAJ#EBFi4>\0T!9@alWn.uCo8aMu:u(H>fkEfm(9m$SSZDDN,md_<a-lnHmZ-S<NICt/^l%/o?5.UptZ*D?m+J1X-WlR^0Mq%?L=dP?O;TrMV9Rj*)s/U"6hD@R8/;-/_j<O&0rJ_rbXM%.*Jf%#.Sren0eU>tdS;FEPD(0Fjj/%ar4"VfP*2F4$C[CU:7\`@U/4Y\>\P8RrAl!W$maX2-*g!D%kL,OZD"CFPI1$%]_Rc%1:UH*rskt"G/.'U$R_POuR5b!t"QN!R\SP%2B'Xnk'7#k4i^GI0*Fm*ObRe/6_KG*;"2f9nmFqf3>GLk[nSFa38KD,*UJ$:Z*0-4-%NWq'NUnZ`;r51:VMGhD-S&4$)r"h73pCo%P1[T-8Q")*%[T[jV&XNG<tU!sr4?@kSL"@fUseco-QKul#^L53G7<]*Ne)lrg/8FT#S&<RQLU-peXCS^-j.<=!sZ;oWWS!n8<U[+%9#aj:^c(9#K$gf>>nmV/0OkbV;cF)31c8ReK0[P'O`:Bt-!6`AM0OCW_4j0qAgp:g`/_9KD\`DHla`rT1Bp^^ek0[=SluEl'an]L%!XMA8&fDsHJJ`ENZ=hSeT/%q5R0n?b]+^<8U0&KMgWd*b.V@.8"qXu,3(g8S1>loE=Y(=)LCk?'&Aoag&;Z;I,hiXa'EATm6A-Ue%S%XrG+km38^j0r5@fmRMNg:I88l22bq[H+COO]##.Kb'+nQVh[\"BWOiI@dU3M4UB!:6cp6][5pW'g_1Y*lJ"hS/g`4Ob7mjjhM)%)4T,ohF0-h6;Cao@eG<1F4'IaYgZ%h`raJ>UU'b;QiokN>(C*M#"'Kj8.4LMOjXlf:irju((barKAflC29rf=b<"93<)4@7f3P?:%@-+^IfK4u7l@DT5=9qN/GPEl%Cnq&tY:RKN]W_!s7QGA?D,eV:!_mW*8irC`SF'b!+NAGnMN2NTQ]2F6_SNY9^@'C7KBq)J6/',;%a=r^B)i71Mg&n)`X&G@pY;_U6[qQ^7Z%*Sj9FAbOa?Z#%7(-D3P"G',DZ@>$c!\ia]lCCu88%mL4LFciCgPBn<q`6jGLeRG$mbl1%n1lXYZ5]^L!.=D*mEPBLQT+Z*2a>!%7:9ZAjVQIV+5e)<doWaQm4ZZ+X4U,=Vt>!"kNYkCpu^qtgUA^.G]J(LIsHB^IeW.q?[P$4%_nW@XDW4a$@^kbXJ,FE'qY8+QJ#iQ*]=U/nQ+2'gH1glKFT^M[P<]$=k!"8"^[?UMY_)?C0`11*g!tlPkASil-\)!ic/hClno\dI%k,3*NJ"C"qU)KA:A'(DgYj4Q2fF98#hk#-BoiGXYn?7TT('FBa1Q:Afa8]CMgs9n'h7S_QS)8,JD'%7i,d(8Aro<2CG3V3c:fTZ-%dXJ`SHiJQe\@D/P'B--ia7APfccl::j\P@67h8+Is0iSGh\S1rs68sl:KOTdMq(q*:t:[VOnUsqYtf'rG!&!\Ip=So<r_Ve7)F2s%mF?OR&`2<W^;%=qfYTT<-pM2*+"j`tj&p&ncBF<n)*>3p:Y4K0gn4UfLQRj%SpXqMjMm5IDY<PKeT_QL`Q)qj%:*$GFF@7R.e`,W%%ja;_\?c_(rJ;o_p$JZhMq)2&c9JtV]GN4PhMe%kbF<.;Z>KQ`,J!cW\i[[A]c0,+>[ahfcK3:d(=JVFjr%7FiqE5dmDmEI0oP2'%kQ$L_>MoCWPL[:ef6a[fRA72L0T`'<[l6@e;;9jWRJ@k:HggCJUY'qdmHs#U(T-Y\[dkHh^&:q)7W7'PFml9s*S%iu\p%-JIb3lA%I.bh9ea)tmDf:,N!A;)fbtCq2P^-uScn9CGkM"8mF7VK?L.7)k+7J*YXT!Kj%NX7hS1Z<Tq-9,JK1<,4,3/TGokB?6Ek%;)?d:la%r-3L91T)rKMC^o:$,%A*);dU_CE,R#n_<NekLb9.=X<mYi,@Mdqma50^Yi]'*KKW>(B!C#MN=CthOS#T?=040NAhr&.m:Rn1jX*_%<YqC2cL2OX2]qM7DoNIGHGsMNM=3LJdsleU]idL-Pe#e;O7EXr;2Aht\@oJeqsuK08_kF:mes^)bu3dNU]6:X!5X'WBa]JT$('Nc%4r]d4pbN[/s"t]2s7I?=[,#.=qeb/6V088m*N]@g,_LJoH[0[^`nLE5fHXJ$H+u=KVL:`#d#OW3h\kt-F<`oj(:(8*@D=8[cnqM'%S0\!K$q>.D5Ar88'GCL9pK%t'H2K/fq)K54p_ha?jDlAXY@g7a+,GA(?Mq[Qn)nn]p[>:epZ"bc8DE=Q1=!UPSQD0Phk+7n1MH^3%pWg\(Q$5/#n'"S!Bd1;ph>O\^9HK9,[-Q^tM0&4AFl4)loLQ9XrUnFpp@`6M[p&a^BM7jo`XCJ'?A:c5pN0"q]su.^*TDp9O\l?/%;5rgDe(8g,D_F>7?\22R0Pl::X`_@k]K./'eN>+:F7^/0=u4pb!MRFdP31UbV_idJpYl)<ea6/I*ft.-!nl:iRI*-nqs@1/mH]:_%bj78'^0aM!m1)Y!p7$j938.#H0M?i'UK%Q'edjCmp8+A6hgr0.I+d-3`QD]aJPBX%hWt?>_qGVQqnS9Q24d1gP"(Mr:q!0PbbFU9%dJep?qt$;He^a!9e`pT[Q#44oPLJ6O=IOj%m<6_8REi:c7N:Y84(mjoO)i3<E4W^n\bU7;;EC1nB_7)jAKNtDr:o79r*jf^]".k'%r5/PP7b?h.WR7m/6dUkYM*.!0O/hekm&9I'Gc=]#n+4-EGQ'bZ6?b+GDn#A=#JfpHE'3b3@3:9An&?GK5/>Ag3tU)Z1P!kbKnEe6%UIXqq0S"RSIID?:+aeKZFgXkqg=7uQleMmO^Tg-eJ,As1rpl]AKrA88kq.6d7%V7i[Ols@oTO]LQ@g$L\Too2o(m:0pL>SP>O1Ok%)QnNLs)mtX7<Wp*I^^!fV"4D0N9f<UmIb_,JVB`T(sU=jI.WhbMt=!-Df4HmVnlWs)&s\Vj-elF`M`#tgOiSMeQ#T%?WY;Hm<BrQ%p,Q+5dJVrn\?Bka[uF!EP=fkEF*W35CoLhR2%SNDE"%KS1ZdfZ`<F/<+46ca5E<Q6HXcF!J[G,ufcRD(>dqNi=u=Iu'S2#T%Wh1"%_I:HFkYO16@lV]jSErO$b\/0s(_/@TQZ/=Y,?aBKl1R:\k2O@6_i,\bU$P.eE0u1ofp?Xpom7"#fjS1R49'bLi@s:^F=99?(_/?t%Ma(u:bRR%LmgS-nKu8ikd@i7E0BN3oS7nK7k&ArFoh9FOLfjh(#V8'__J_=?^Kia[".4c!Xom#Bne[FqnHAI#]\1Q@nA56%`uBpH%,\tec9EP3H)2t/FS*lFekK)$lk%O2WbgAljrlEKI*::hpp7.nKhF54W6p!02I:m4D+OhW#47]^4r9Pi)*VnBNT,ma\iUaD(WUj^\%TCiS%CSM.776JPEiPR`0Rk`++s.5S%keS@-c0p&5fQq!sa5G?is0b93?;]bI_o;ZPk53>OXffCQ3reltDFX^tZ%FDFc?%jTFZ>o[%DKUB>/^_[Kja'c;olX2/P`<HD8c8=*r#Gb:3drf/C!j7?33eG]TDr=!1Y[lD$'&_:[Y-q1;d,ZO+!;BDfPqof_<aZ=R,:#WaqKj!%o&f?)h;uoCGaE!s*`hIu-TeQQU;l%;LtNR^l=mZHB<`u%W-]h?gu0UQ6]'=MAPBkJ=T*Z>MEP;rg\UYu]J#'!/)0qgf=0?RDEgV\%i4Dch37\o(DpQ?8(,El3@L/arKg0Kqh\6_)7A!m4+$G_U9BG@"==N9CABU(XJZ-8ROY$T=jZrHhn?.2s4O<IKn)%KUm`4cNLUW-.%W#-N&(AceKG<FqLoPe%TO.+PX!Phu%E-*HLh9#VhFkk*N-1O(.PE5.mI;pXp$3c3*;h)L0C-B.i-V#!Dd=o6>de#k3aN)Il-:\mC%d=lsi+V2lAd=p@S"8:NWGB=uM?-'dWdP712I(FY@L%j32jWj4nH?)(DF`hhLqodV(?=!R&r]Yf2l2jk-NZM]FgAZD1BYEjmK:P(#%41)J`n(rKh\6@\E7&g&q4:>Dp\)4i;chAp/k"FI3Fr]'@^9@:m);Staq"go#e`u;_\/&.Q8&aT\Vq\ETH$ObE])VVEp%I_+]CVMa%7Z[CZNLN&B2=;br<P45lE\tlY9l`afgsIBk1s$c$8PXueY.jN-]"J#a^ZE>NErAQ)-RUf2H;(B?pr?-1`hLJZfm?IH;.D_@h>+T*%@STHK3F`BSO@]@>gRZ@AqYB[!l6:+aG<6`regiq:PeHB2:]L)2M@5I^AZke:C=3l?rpUAQ0?F>C'XJkd;tbq$^-'":>A;/r_aYV&%h]2#A4c/]B[lN/ZNcpneh<&C[=Wc>EDKE2>*:5YT5s:XljuKm1QPO\M%n<MLXDo8R($ZCRikF`n00,$3$TeC%?`&_<KJsllBM>!N%LW9+?m!0)#nYmo04GUrO);4U$)DCXgOI)M+A(MjC^#)#W0(6P>^YIsF3prR9al)l?ml]a)g:+ce`T3ZFQ#@\Pc0*k?+(ZWUPcaPE%GO"d=^G"@0cLZ>*3OMKbT'>?lT6"c@f/KnjT>/)<j`nnnhgZ_NR7:iH3bB2\$fUJEZ3reDk&I%Anjd&gq=`G1&Q$5+")X#>a;/)c%%cguD^.@sG_;DtRpMk<d9B'j^Fsg=6BZpE;*9loZ!I4OD^-k\'?Y8D6]Hd_9+\1(!O&`O(:RM#OfrrC*@_AZ0*0S<_.[a(LcStO\%8c.W?m1-Cb>^ETqE4kE6*0Rq^j6,S'C3s?"0cVWk84F&41hqE0LpG(tg7`4<#AV`o0?'kEINV.U`W<$QLUR,A7ZH<+%_XO%E\qMN%N>h\1e@7a#+VJL-9c?N?o;IR>m`mKRc`b'r]c8-H9U/+W7c*dUj1>$Q!dU@ur,at\8^NO]+'6Xtec5NR]"&Z]"S?Flq#G>N?f,5I%?YluBPpQP\rPRaI%]MoYFe7G,1cg<bk0s!IEBX;BLS9u5Spm)e2LQZ>VX![r3[UgiTO^PG39AIZb4r<\%X(P@Z\<lm;o5.IjHXq5%\(BXX#8VcC5lY?nU'&VH1`_!9fDY)]?0:huL2osnoE7XY+$SNZpus8G3eq69gd+oqEuk"BEolfrhk%s8]?C#SUT&Bl4D'(kPM+6N%/Os[h^u.7;i8keA[P&5'oh12c)aBoWO!!+bApt!TA+ugIp0sO+os?p:p2:Jr[QcgAl-N-$YiK,*%+%;?Hb2tm;;jSdHs_-C*#61@%X72,*q2Ym?;;jSdHq/nZGGXfBe@;l33]a1V;<-D,NGnFl*]:[,`cor-NZ)8SU5g/LmmuL9pY4H35M_lk-i^k[pKjho_KU53T7(D\%h_&HLk:5@!F7VIiq*rQXLRTOJKjFHC,Zu>bGYEm5a5);Y]JueYHtXYCN#/*8"?q7RMe<pd94MS+T>0Ec:"`TF"f*Zms8:p-q8LZe%:C)(>iV_^+rmsC'?k`Nas6J3[)`O+4qD4AJ>h=EQX(eIt*Qhhp![/W3>2!g+p3[*kR3p>-aZ6`s\,O$fRGfB&ZsC=4??_47!KIX&%qY9=Ch>,%Tou6_Znj02%PLJ5=mrpb@Gf=m%^Da?\'LV4gH[6poDB*,p$1-0phkBSZWJfN#O8%hlY3d`^gjZr3_YY3\g%"pm6eS_f%]p8?RAo1CkoQG6R?^KB:G&[/NnkVH_DKP<BeQ)NW-_EY$j2o>q)q/lj)Z!0=XHQ<<e7\-LHB+qTfEYpmB>!gXV7lhhp-q[_EaS1Y%ikg#\B8GR'Fd/g(qJ^efHGh4Q`M;@?'`Gc@(!OF$JEOYNgS;E'B_'SK>l+#>Gg3n[!9L%Ih(6=uSGHgn"J-r6HN0u5cq[:TU<.fT%rqH""YBqu9;"X"5MN&[upm(FAF"ER'RbuFq8sTQVHT`TXZ?_];dEfgn?W]/Mq;(02qs2cBG?5d4(:pQ7HgeGiX3:D/cS)aF5)t!Q%IPSDrh`Jks3IAJaNh;Fsh`Jm)aI_jk]CN)a[eZHJk+bTQa0"q:Cn6>kLHaSC\<!rBDpIMV?nQo?%NH$'][TnK0C[]d@m8`*-k@uC%d`]<Smt[HT=<F!eG*#:]Y0UTVUGIE?!b5;qR\-9L#r6\FphBXEPMuhO^@lt:qb+$eEI3Z%iA(g(BCq07^dI&t^Onp#01m^Addqe2%[#tnU`Q,%,o(p)`piuI@P'fBK+mOp)o\It<gjLM=E,b%rFr#,lS^q+Z#iFZDd/No@^u#,:qr%]+5X*,*"?$0.ksH/m+%(5KcMYg>%NBZ0CBPZitL$]\cdfQfQj5'!<H$Qk0-B`eFkPOima3X9!(c7`(BVtijrSMe)=E`sl?Ri3S2]$s*+E$c0W,1`Hp#Pj5B7Dqife_'E%qRs,>q/_7WTX"ZTj+"R#^\RYB`%;W!6gp'JCA(q0H^Q4C8"QG8"D\8PD,96XUHO9C"s`;C=''`&-i8LY`t@Vl<caT;4O_Jt])Lrp%fj@bXk4IeQ\crL,(*IP0]tO5*2M'Ol?4hFrqW[RJr1a&]"1Nhg^&I^$a4mZ[&+fD)5?@Gf(B=?nQg.NIn%1%Se,87XprEDl+9"'J%I[QSF2j=::^\-Y>Pl=n[b58'(L.4+c@!k%9>(t(@&+$4>2sg`uHJ6qF"40b:>;lhpe&J>`!%q^__>:.?+V`ij"Lljk287O-E:m1U%(HO3"J_Vtr2h>hJVniOS[fG0^DS2F&0=/'Ug:@`WZ==3NW+[#Cqm,Q+K$@9H.Wh-#aK`.@[^u/qTUm(*4L_qWhm7(s@jJZNr;?gj%jR)$+]CWLu;%T6#pW(CVH<R@O[#%`TWf?U0Xd_eh4J27mr_j!>i$T"5f2L;@\%P[/9srMp_V[B?<LnHtVQD^jnrN*3mFYL<h:C:@%cBaHr4MN:[8*i2SZ+fnec*RpG:Zd^`\+*n,[8QM^GEHe+F.ScQ7)T3AlDY8MDA,"(]CniQM5o8IC9"E=9k#*)$FTpIh8X.=V?EMG%3JTNd[;7&>&5h_0k@Ffn3_&KD(m*^@PP($REH*kP:Wf"IIC0M:P16`>,l3[4,k+r:%_66s,H#ch$07*uL@Mm<DN.)reY_k?-+_X#%ok"ln`pRL^f7+a+]$_/q.LrpDqi15?RE/`EKn=39Fut]%d;5q%j-Z;1Q:O*B@sY.[XgZhZHE,^Z/!4.H37HU$_/-;Ta$+dn[GkQ)%d9A-O.Pe.d'A]LY<1Ic4@Lq(N%!3E.-lm0%[L)V-PQJ6N0"CJCj&$/BgV\^*jVTqI#\m=D'm3dF[;deLocYpopn6ZU1&2^Nh*`UB%HItPf*LS]:gCU9^27<X[otYG`N.?gU2Ln^Nn*g]H25UOX'&#mRRU;N,$[?/;SOPMfF!L."XkTglp"Dq?g`,L4^2*kK7c%-pYM.)?%r]'_o^W0,W]np4UI7LmIl:jG;e,8q5C@[-.7Hj38Pdn<:3P>Gtb[3P>^*RL`X#D47'nuW&"ceZ<GQ4;KpAf-u\.2!9X0O6iWO@si%XHgR&&hF$#a1^i<m)uuA96*;u,d@IQ&4Io@itjfG:NPl5h,54_nXnm'@jdR@rY-Z%T$*$*qf?5iELuO,UjPaM9C@gNX4ZmbbjDq7%!\>kib/B/O3;:Xe1M>"'2W`pua;NYkEj%6`JEY"f6:h7[Y@gk38ooN=lXK8*\AiRN@`fG-4e/YHCODYnYlSA`=Fk$O)LZ$K"-D@"%"bm7:47[j'B^]U4!6qu`Bti8+QuCBpI#HS<>I6<G@a4&)[5$Re@@D,C'hoa::U93h(!Zu-0O=B9-]l@V@,5Bm_:]_cTRpbW-D-J&%DGrZ'[5Rf8'SnWOh,MY?YV"WV\<d<lQJ"]fPZecRS?FEM^sDQ@]HjG`BS#=JeS>2P@H]Ot!Zm6LCOtdd0Y?$rZ5a/Y01gc@[Y&0(%32H6r,_r[^(I/FNW!NJf40n4>hm-Ukp:OW[jc"Aq$q_q8Qd%P.5l?Ep%C5'#T^BmP#EXG]+N5sa&47j7m"e[ni^a313Vj)o+6e-l%(SE3nePS1rcke%U3)JfLL,6W&i0CW&#7Ra"$5Ene")9R=b9B9RDj?*u@#B12"_o2q5bh?jX7f3<WW`pSlm;\?0L&Y]cgam:S((o_%-;"muZUprAC_g1C$<Y]o-Flr]'19%3!>[.P>`YEtX]8Z#O\JG&l4>2f/q'KCU>gGa0QBZ:<4G>Pe\eECdMfOO!+HSCQa@u$g$f:f%#=Y(JS!H5@:%PLP0g:fY5`7lgc+/X-QN'c0-/)J@"?&mh;,Xd>UO3,BTSSB,q#!/f6-B?X63dW>c_V'j/uA`hA`=k&`<.L'&-r:L%Hn/MTQq`D`M&;Ut+skQ%.00?1_oTg<*$E8=='h''4s!j*\IeF-UO\:c.Ro+9q">[nL"aJPdPu,VN;-8DU5'#VN'*V^8/"FhFV\/W%=k70+JM;&ldVej#il*LE"W>HHPU_nq8YY@tic$68c_o0M]8#<9\qmGH$pEJM^WQ=3.!G5Ih5#(pibWchSOmrRIp`pE'eeP\paR*o%(rZON[\OB_@N8F4XD?Jm$58?Dr2)Uc.O&im\#>KW%fT<2[i6QP`(TVq(X#Eno0YHBZ_pTo(`FA3*??"+M2b]<X8@;'[6K0*/T5p`%lX*^ulDg2/)b)SIqq1fFlGF_BkXXM0^;k\7CWM3fmgZ1ErdV]_+$T]H?hqioI/Y5Es#WH7$Jp]`RjT<WPs>*>(S:Hjo?Vp\R4isS%O5<p+E23!$M2-QUO8eS=?iBEe^]3,fs7rFN^SQ1`$'jB]gAI@_rl)oAqsRnko"T\J@t4?8T3CQmQf&lTrPVptr>-RRS%ndWTDdW9%+'jdQ"?jO0Uji5SJ*G3rIcF3gF<SXfT^.uC.lKLN3YW0qpVrS9&=:3X5WhN!0rPL@Pc4b6eljP;c'si#Z1<tSfV:&EV`Ml9]o!dQ%ebrU@Dhh["?RVnF%V]?.S_[2>ZO8_%C2/X9+18-d#;63I,jPRjpOY^[;:'YDPTHKVP8O@p[B?,Gjp@bU%tifh8>X,*AJZ`)G`#0)%)[KD2TZD'!L!m96W1P%*R3@D$]D&:5rV=7t^\^61q)M!9#P"dYmOPP<#=85qp#U5@rc7\nje2Qmp>n!l5KJ9n-N+1sO2IiC^\p-.%RePQt_kqRkrA\U3pY1bHVX5N&ES,C#[h"6gdm<WdYj'hZ*tFd+KBU?adrElmX.0)i8fs(BNdd";Ndd";Ndd";Nd`VTcdhG>]i'7H%UHT[scda(8^XDZk=(=Irk^TH$iG.V4'E)!"5AHnl9('`;ke@c-Yo!8?UjhZcr[XZa#=8Aup>[:[J%>Gs\S-IQqXS[SIQ@7F=L?h2%Xq7%_WLqn;O'd8$Fng%F[E#=K!pJrg3-iutVr2Xf9fJZRrjq,b<=nrI;n(Y,n#PnAF6<I'htsE8DRo#Momk((r5Mt/]\i,<`6PNg%:6G.U\F.&*m\ERBA&kc;=a/I"D1U?hq6e_l`qnE[b]#5aEop,q@Su1<[5ZlgqFmA8ZCH9dcX2"agYVYT2nf35%rKN"MJ[!$hgE>L%jr2:C4`SY.c%4j(da.mgHiE@6+8jK@559[nJ,He4nl%Wn_h$rsDE2.*EU;DC\)$K^/J`g'Ys8*S-U7LIJ,-R'qq!KMmaE9T^uOnY%fq!hYp\roB)JUDi1\=N/[;Z)_O8S%QI/.R8qY#-IoBgIEj6?U=_NQ)@_mdB=2+4&ke,Xf442["p^&E6UT-s[#X5EdBmlg[PI%LB;%F5Qr9=2+=f?iTQ[[mlcA[qSe^4+>(!pX>nl^\HZHrpuJkq<[i_I-Cn2o?rOMI/hl<IefU#qVGT7*i8>?jT^E?a038R*q.J,0>?o8%?[CkH#lKJK#M&YLGG"]Za5?WL>=77oDSGP+dXfllU"&Dcqsf13qQhhgi2"Xk00K.)J,/kd?_7Z_T9d*/r;*u\J]67?mRP%ap#jQg%\AiSss3aDepF#/"qbLLIN$,X:D0Y72J,R^>4Ss^J**7FEfk3MCJR?[A>4+A$H?&<J;tgN_J*)0OqQKA%n<*tQ%tFB&$fCodJ,"ZJ%bq\tLKR.Y9`9ltpmd2+mdPnpJ6'"@_pV-1npV1:7f6%JJ";K\RSU/P-55F=?[NpY?p"fZCfP`o0liEQJ_G0cFkC<J,TDI:9X9h3.%?@;1AT76]\kPVNpn_.KnY.OM[@cGi5^\Fqom1;N9^Aj2=rV>cG\U/6]'i*TB\c1.jrl_cf.0:40J*W"7GZ-qV22iPT37GS2[L`>k%GFU.qnEk`(i*4gFmQW"!f_jhA=/k\[J,@UI2S.6$VS\+<H#k&BWqX=pdf!IeV13XKP+g?<*8^;ga)Nf;'ohkVli6m(?iRk-8Ai5k%>oU:hDg[ggk-a[VoN.Z5d8lQ>I.jV5Id_&bHq6(Z>46,B0#.!rs8>$f2#ZA.n,3(?^9]q\-3TbJ[li<,](EpR^\40,$BVs)IJ/Lj%WLa?WGU%4ALRS4!hu23BJ,=N7$1WY7T)\N!J*_B/@[amk-8_]__$k&cDI!%Ec[=ih/Z7As0DtQG54`ER2M+Z4j!f9`0_Sgfio.pA%q"\PPPQju(c[>_EO$,Tkh(.e/cssPq3gY?]?%;aJY?@lnYC5YRht9pkSZ^]]9m5m7)t3DeemJI6O+!-=18U#4aM.GSpV))>ijnYM%=cjk+Ep?ugnCAQYJ>gU,A6l17b!1.2f!+W";jpk*b*><9pog=fdT=0Qh<2NP]NH+N3n6jPpT8'VXR8=Nj;7gUl#2*d2lM)gbcN8:%#3&Z;-jr+$qi8]]n?Gc=mYh,AY==.blcBJI6ql2&c;2.8[iYQjYZ]6u9/VUdi7u=>YC$5;hHJ/Pb%CCn1G);hnBCH,C->S9m)jcB%h&Z7$>("Ds=#K>bPnQ+4ElY5rGIYE!l[Z#U4+?#Y-Z6lZ8I`rOWM95R[CAG9-$oki4/.99BGceCSCJY+4?=I+5_nAZq-k^nN0Nn<%4?C%ang-")3^kVkI)VL6T0VrAYd`hkcquUT(Zc7s%S'(kq:Z'S&p5ScClSp2k+c:14R7^)R"/Pe/tR4Uen;ZQ(fWo]aR?-A]bjW)%&,J];bOjJ8j4bZ&-[Zt^q\q0==Q<-Erld1E56&KX0>?rRZd8R0n,Lg*eLDAbrR9**W4,h]55j""^Y'4V`nUO`>Ergm`NOdVfBps#%55KD;GMn6`s)?Yg:@T"DgXQ&X%q#+-FfjXNm9LYbocJ\%Wm9K`eH)0;WCgF@GR1I-GDQRVqIJ!p[st>_#Is:_HHpI,bmQDYq;DjV%H+U6-DqL&1q=@BB[Edp4C97$En%M/koVShB>3Ug78h$%^o3uiUq=E,q.b&mDjuP_SmLSANDg\GU8jE7RA?N]Gfj.R'q@07KDqYSC%jlb<(,F.+ggW5Q(o8f#+s/U>*JLJ3Q&!^JV;l0NeZ;l56*k8+%ij%<uPJZlr8VAk/DqL'94X5m\`IHZ3V'd!8nXeGpn\*gY-K-V+%[H:(g^8+_#ekY*eUfA`2fXGXto?=CQ.Vu`J$3,j!S`9OsVe`=(A\GC^-Mb-YW9*Jr33BB+c,1"q:&2Hs0r"b7VP[OfQTjrd2<N5[%J+&?^V,(22d#t.nJ*@VYP:#>dpiEld?MM%$H/JG]2f7i-mJecke@F_1Xg`fFX-M>/qo[g2_pR(-rR-%bqRU!G]^XHIrnaKY;\f4%%^Z@VNrpmOjrSI:_p[#B'r2KG'Ysq7MRaa"gg2HoODuSm;r7Wf'a)M93Y+DEdaRNnX32]Oicfqbg__jfY6i%O+0RXW>mkYA!2pJ$E%R"D2;hM!V?AN7uoIUbFs@sGe^r*R(b%,[Hs@-.OP%(atc$\,A:HV\<U\^Q4Ad!q@d0WVt_KYW`MWlDnt5R>#=Z#G]'I)h8Hl[)Wt%lE7buL6Eu\hK\)&P:(65WAAn2P;h?'GK[+thKm?sVf'6=U^c[qCTfsJe#?Pi^Z4rlYIa&&ds'SjbGcFV>]5a"4FZ)q2kIVRNk=_n%pV-N2rTa:J^$"gqDSPkoNAk*d]E7T@9m*r&FjGL1T6]olQg;HmcJ3mk^t.=`_?>2O3h/4Cn,<Ps%?4*OBl%`OE'Ho;?>%Kch>i(M%^\Rt4@oIH,#<j`a9b"6]pY?:OL=GDVlYijlJFuX]T(WYtfA"^#k%S_5J)Jk$UGV+Q*U],hDL^2b%lCe#g,j\21nX][Nj]]'^$et1%T@2[_If3!MhKA:THFKg.kGK154q-iQ[KG`]HgeQ=7^Z+Cj;iI%mqQTOpJD?WZj4p^%-7RffDTn\UC*j<Y.sMX])[%rS!RSD!S!,H%#k/g$H/"c,*k:t:/S`#sp^K1>NgfT^p^nW^5=lIi!_<,LT[?iUlF*1"3%hQ$`2Pid3<N"PBU00"SS2H?;[W"F2!V6YruMn<OEo%6%HQQp;Bh(ml"l/P6XtE;!7XaY@IGN$2<62]>Ha'aYOJ=-'&3updNq'Tf1a57d8CSeGA8a,Uj;B)InU^RZOL;P(FP^(DSTT/3CYSS>%pY;J9*OoY%:E\,=q0B;%S7pP^"bbTgd9X6:GeGl$JH#1(`c:1LEPLP`8Tj^cg(QF&L4p+JM,Ip,fC!Wg=jkDIb2%[m5DVS<ML:$&%\JmeuDhfZ>;+?c0<l"`C6W6VsQ?dC=];ML)iB`QNTMd^3NaI#$AcRPLdHGK<[)'f3ibjFkER3lRD`19L[!$ER2?5o3@!uOK)a6uU%oaeom"2L,?BoG>r4oMC-!S16]+4l-XcoM.21p;41J+D`+DFZ/ZXVT^llML"[qt08h[TBCSB_;M,S(g4Zh0mU4GMdfb^k#t#dU?8.%h/qqJ>Aq.PN]V-nmFJjI[`T(.\F02,lGeXD-a(506IX&La,U8k%4?t'Fk4^XretWnJ18:ADYr)dkN_SFa*2mbPgS;rp??I'QcXK'%<Ih-l2qDklQUHs@a=R]B\tRm<P.lGLI]^[&LJ?qlX2TVi\a^IrUV)Wti+l9-gU+JlPLWs%-]($L'fcAt89$gO+Rk+dFbL/+`:_]=%&R*j^='HD.E[.6.!i;!gc764_=C$-Y<\&HW\@Sm.$fF+%_%gN)#c"K)ku2"e&V21AX1G@K6/G%Ra+J8+r#W?5Nf$?9\\,VndrPm)%F-FMT*VHo-TAAK>#%j(p7pbeN5P^a<o#]PcrkUXt@RkB\oAT^pkuT"WJ&ebjdf9:8k.1J7V>;W:GVSsH9>C#b5Q%i8T(pc!r4R;Z%qT8(jfQ2p4I<F`>p?UT+gOK"tO8Rf]54Nh=q5a8gp7#EY3@DKY5J3t4+TBG$*dccLrq9:jo[Hg3q;b''s7g*=n47r"%J/QhH?A1)%DuSYokJMfL:]L@30DtES54P=2q40IZAn.(F4hH=b:&W#"IcjKjoSLnAmL,Zegcp8cK7EgRDu,<Tr:D=3FJ\p,^]+++I,kr:Ic`F^%Ic;T%nXd5i>^7X\+^D`70X:.4hY8&Yq:!+Xa@AJkOh^l[n,Dueq!j=MiBFeB9q@IeO8SA!hYHU6rUCuEn(kbSet7493RQN)9'Pht%r:':NO8nhkhtF+cqR0c-ksr4K#.XsqAmKJ)P;GCgaH[im[%'e5%L/@1N!@Gj4*lZ0AnE@o]/o4-8*QIX:-[C\gt_P;kpdo`lfY:R%&@LiXh:u$Z):ZB2T+XEmA&Vl?"#2sk9,7XfZ-PN<DIQt@&DW=pj[.b'=W<@']S[0JBlM-./=1B0,%p-^e%NXmOb71^/[^J3@=52E%.QiqfY)];!>pVc,jkbGB#4p_YM.\+=H6LG?H^"2`jpKk6n0OLWFqmq:fjbkgG'DUL93\km3os6ilX$0[TQU<4>'0h=KrQ9G+_[n+%3!_n)@O[mCUfNVT=<3:7r6-5kUD/%KgWfgW;pfY3IaLY`M)&hra9S8bU&dBGbG&3`SR+Rf\*N)Ah[#uhBOQo*oST]lQ15RB8:n&B%B,I#igW!]bn_ohY+>j.ZYS<10>pRN.=/2*<nXQaYaksB)Q8cURCZ&o1U(+6i$5Eo4/)s2UH-6=0E9UTgBuUtIe]Xs!"_o4N65=8.%Y\LppX]k4eQ4,B5OaTpeeo(D8_8QRC4#6#B&lO5p.^h(:#RF_W$qMd9rP)EZ5l)Z/."RJs$+_,Ed9,dKXDmZ!1!!"\cos6O5VENW%cl3/9$]@\''nBBk]q0upI7um3W;lTA&*0<Y/4WASa,$T#g\6&k1$0F9o%jHEcf.Q,'`r$]"ms'><uR"P_'cq"OJ=X45?HSoVQ9(i%g!t=pn)^5<TP8m9Bg*s!%tj$CdXIQ?n!3UaVKX]#+#][:U&D4[gC*D(:"N]c5AZe^6MFp;ZWGikS!Lb7IFrZ>W6hZnIb6Isd=(Y.%oQ0YGoQ0YGV>jf&qYQ*:,J%ZeqeDo)C6*SA-G!P5nbgp&],f-t1Yl+^mF>ma&o"P7jsu;^h9pZsd(WSM&!Q_cden.7ISf[NSFg/@%RP,KU0*f/q7K6pAjk-iukYor%NoS`_]]JdVGM[WAQBTjZLg5;dQIGT8oSe`)N0!V<giM3/OtR:<jCrhakZmi0],lJ"nTS9]cAhP-%:Ra!LP<[)`S8O@_0>6\45P3HT55k-&s7t0"rqKccdZN\@-d3t0i,e:bL2d!+J,.TD4nGf=?@;"6QX5(->L36!;h+VOFL^;Z[?\P!%`Cj!Sp6k*nS(Z._CX508fdAC(HHb=!Sn_PVm)c0MpXfB%`TNhAo!+H\,<,aRk<FCLii]m8]_LlDHD_@F!.W&OT#g@;_2k5ZfE9=T%Sl7CWNh'icI*<WKK0QfsE.[TXg=,"R:O_'g@\%F%Gq"+ZdrOecF8C`kSZh4$n`_FLDVY#pVk\2-luVmp(S]4dSpTa#n#bfZ^_?/.%'@0Xiq;]FIs8MZH5g$?9H7h?\V.lV#RigF'3I0t[j/5E(oq,5;'g\Yfg]GiH:-AMtod_.kr6KSHS3DDH[J.uFaYPg0rU]Z.-gj*G%lsrc_6f4n52M-At6.aUX"hM-;WmGsM^\=cdgiK`e[Wb79mWa?YrPpee)b,:`(;f1<XGq0f:4Vj$%t:i'.5*k0:PW`ST)S]gWcBu?%&"`[bgS/qm*P]#F%A.[._b/D&-h4=)-gI%Iq[;;&U0MIPW=s4D0--rFR`)"91lq*a33!7TJuG\uO=&JAO/gp8PU86b4euXh`TEhT%;8_;e_I$;VE)#$Oi/tU#qT7X?<a#a]OC7)kIpRNjRpUX0M+^Lu4"Dln0iDD(OGUiHs*X*aIrG^`*=Jp&D_+@Im;_snY"RNu]l$K,%VSKg+BuM0)?gk_ZhRq"NpeLWPCptuIL*nU)NF1UkRA@eb)Y/$6(-?<@YCN1OLVLI2qVGQS3_;g#dE,-K+7MiAm6V%fGh1t&Ckhu;%JfmWKSeECEb-6JYj&m:-Y5r;c$15K>.A&#-U@q$(!kk@Z:0&LX>m-$#%+e-ekCtOsqKolVO61+^@Wgi`6D7d2;;RneQ/W)#E52dA%fcN4#Vg9ls`qWq;,"'ZQlq;$5dAMDLNH4Z*++e!Lm&9W_0H;0Sq9S1q;lN0fO9Ff8O/n,'Iju2ZN5Yh8,P\3A3&i`;$ge?`E^CgM%S1ju4Vb<(_;QC^bR@jXH0kEDL&s//2QgkjbEHUP`RIsP[Af8oL4Lo</%'\e@K!(=_dfgIY5*k>M+cMF(T/B!jk@o>f3P5bF/IH)l%*Z]qg[&FfQjJ8qV('&aQ!G/AndDlDYhLo&b,aqUU;hNVC88GW-n*&-heTAb]9L>@lRa8D.63eVacRPFBE&!(n^T1_F_c/Y"r28bq%ZQFS\:XSoT&3o1oke$1m]njDG[pqU]iUJe+?i(4/qh\t"re-K7^3\)2md\T*QW`;Xi.V"C,C*q3i4r`V5D-[+$i(nE+$3+HqVJdY%;jZA55;.2Rn*J24hXH:"lN2jU5M1HoB4nWu7;B;SGIRNA9:eEd*0*KmQjIj0*Xi3i@aCp'eD>tc+?eA<\Tf"<7%5a?G`X:N#BSWK%_]`"X0iT7iAIS.O.8^_?2[`qh!1c-RE$qZU:mHFlee6utd:e'=j\&(]5QIFk'@E43hDK$r7W(75Jk&:f@>nlgFsoiC"%A=dj$@>=%7TbCVE3T[h7e7%hUP'?15*f,p@&maUHNiVggc"J^=@R6X(47rr>Xi;&6jV/&6a=?;OTqZj[!f3N5RYSlJfc4-W/BJf8E5'u:;lnC%"FM3,MIZ^;m/`fBFN(#p@c/Ft5pS@'CrE2QCLg]g)3u&^84AR:@7$t/)d:i3Ypn6KXW#.FG'4:*OdAl'$0*:F],^DF=NQB_dR+L2%<LT+2H'k7lBBAYKpQip)%H8h*'T/-V42KLR,#(h>nc<DrnV_YshcGBIKGPLB@A1atEhRLu";HGW`.]0f"T_am%LSjC\''u480J(p%TgHRCn,dAT%/<4[V*HO8\Yg9N7YYilKK2ZBe7BrZJr&oS'QU.-,VjnAEB*fk:pA'_g7Fu`\I9BW/-&&%#=Of8W8+>iq.Q'-M3\\U%Ohf*T"qr9e,di`N2]k=/_t'>OJ5Rq5[r$)W+,J,BhZSh!$c2'>#R:Jj&5Y_5QD.s1d,5ncL/!gZL9OL;GiCX_2ec,r8/_c,(Mg6%%=:kr_X%-bQ6t=GV[n;clU_7B2^2aqa"^6hO@$Zuq5dD\-\jBs:BV&dpY\4TIJ8E+PRO3^ikQI=tUEHgnmT(di4JO_78P6e:B5(fY%,[pq9K`RQ@8q!fU\1,N;$/S0DJuf%V1bHfP@&7e5#[k\=X-6,m;6n7EP9bNY(3C*n%&i6E(p'<+Y6-6^OA%E34\NM>ia-RD`K;?J%#aib"0Gn,s/=1qo!."fJ^'I2Y3?lWMisRP/Voj^n&>G\\&QVmMcmm61]VuI,3=?m$fNQ+%Los4r)N>cON^i#:enpn65tA`Ca\rU`%3@I;?"_a<5/:LcrdUe_<"s#7`iXF.p<]NX8,HVM*?s$9+>tQj5@mrRhj;GOWN0f`).*iXT(FhPB3,Hh2YZee,YL#tYA]Y%='PKQu%DA&rmCtl(7R81^/M+s1B;=c[Nl$S&o6uHk:"BofZ5VQ=q+A4jqe;@I^@E8jSN!dbTXDEJk>03U5]I6Polm=7Cc(d@Qn75oq;&Lue%i)jPKW:PpWjgbATPT^)XJnC_\=UG3Y+fr1<Zm;k.q3!aA\Tps?[f?HHY]:m3#nff^6EfI,*rt-;9<uV>!clg'9RN6'6o_Fb@EG[V%h0jI2Hijfr=]ZfVS^3S-8QTmfSklo*F30ZlH`u_&d'^>_&Z_2)GR[4SqQ9OA,`ujc!T\eX""[ST_:GjE[ctW,qOhkN/B>#9biQ8`%AOLFj;P5QeY<kjhVG.RjeH_AVDD<RiVbbs*fr/I$$1a`.cZki/eahA)&.`i"6+n9nLjt&GYtP@).hQ#rWeqWrW=gMmhQnt7#(#b'%KTKT8:m;@8p7YBKl*Cns@[fX8Kj$3l[:^[ig0@EdPGs.L\stCL>3/&AT/ZhYF&5=t^9Wf#Y@#9-'^^e-.;#(QT.h+6lA(0.cc`IA%\\:Q:+-N=_n,^SonqrW!ahBD1XB$uBjTUYlSg,Q>p]DfE@(9;_FodV7jAlGML`ADN!Ld$%Dt(AQid.lN>pQ!Q^'9i^F<VqkFKum%%_%2>),KdhaG2UHs!'+GCLDrKRR769PG^33G$]T%k_@m0P5IT[LK?,R0\uK`V3.`+rdj6a>?*bs!_/"$MotY?]C#CC?Srar0M)&]l%2F*H[:ng@p)4GehQsu(S*@qIK@B.C*#NUi7TWU*Q5F%_CA06uQ,s9AO@>,udR><%3Zn*`n$(dEW;h:5K-e$!9fg@h\o;mfnjdL3(%pQ7KV/:dSBfHn&IN^U?CFGiY`lR]WdK,*3`FgA0Xp(5u7Ri'Pc7%_QC;N2;8'Y`rE,4GR?A]/_u&1Q;pmocS'O($@DV<%XM0rmjs%p,0%091NE6>"Ya+Q",;!WjKGM.953[^!!C\<jRk?9%[]&mYC$2)lCS,4lT(fJ#*G6+j\N:@;]2GrrWk4=3U<Z3m<T,'FiRObu]%<%XSdL!=/>TeBqs:0i+k4!RlRbh_OODs%t:&R-5;AN-Nnl,cR984.OJ'9_.8m$(J09.B1jPXG3m2IGY/O36:o9si<2-D0:$/kN3^k]%0<0_25bT;CWX[m_+<7De'W&TC/1!ft4LCbX&E)WZ(e_9r/(-8plACjUW<'6A8M3XWfY7*rKC@Bf+o8?Ul_G=EqAG<V,O5=h,jNgO%;@H`+V@L<qS0[:?1&JUCs%eq<e3YJ]+(-DG"=o'Z`L9*MW`CNHT_QDs0`u0C;V&LF<]-c=.*sbP8$*8%l^+d)$6C;oX36OR-7?W`%(T"@ejNs^@)j3L^M7gdkMFWq+^8r^p,po>hMm=tY:_Z8R+jH\.Bp_f90JtK*X[rP)WBq<L<F3Jci`-km(tGs?TFNQr#*EJE_u^+6%6gHu-".BTGl"bB.[O<g+9-V8^G^8#cX'H>Yi/+bZQ;(NQAnXXhFFICr>G4J'?=Kma(8R$<-PJVN[ZnF".%hV1Bm!H_Y5i>^ZCD>a%m#Sr%Z8n#nA]%-Tn`l9<N8REK0edP$\K$M>1\!>dk+q\%O`NDF7W9fl<7CVZ#6D+[]PT3cd&n=E8=*A9(CCbd:a&>8H@tqld>2M8%ORZ1]GHOu&(CUG23b2r10pYuaL09aS6PBK,+=k<TA6P[!(iED*<k:##h7HOk^YSJRO:pB,=bbd2AH+haBG'#AeeLI)-pZh9%p7V"%d>Vpk>@1C1V(.7dVF=Q7!COdL%hUWeD9,&u:k]/RU=nR3"hh.'J_>dYTHu[gVlNg[QbdYV#-%g9C/rVa0W61#",9ee5TZrT5dZ%]%KQbU![%&]ks#H=jc3QDuRBr$)dfW>DN=Y_>"0hZ:2$`W'rQPDlKZ-'Xl00ViA@6i#]UVeCXqu=9BWF?W`<&]ho`>[;W.4G30-3PA%>BPW!%,'hIc/Rp@L16tH=]Q0sl)5?'`2jNm-ruN*$d+D*,(hcjMY]Xpbp>("`9bRaU[mc<"H"ul!C72($7d!UkmM(>8@qL!g5Stq%hN>KL7p8j=RcGK-P_@nu7Cg&DIYX!&dB%#b6G3eN]Rd6.$&qD@+WjB<W#_WCon"r,(qfOjYqc\S:'2!-7]BQg@84-kBJ2dQU4>E$%>udU"<2rh&DeYA&XV)l;4\O(C^gU0DJX=A0H/ko*6Dq!i`i+)sj>GYi&I;4G8b3uPgIc$m]`IqZ?_Jb4qTVN.c#4QTo4rUS-f:9=%2W3'N7(cJk'sc4<3Y=)C:+&uZMI`F_1^+q?YuJLNl-,oJ3P!"+!_+9Rk6`LEACo[]3g6jqpCE/H@$"fQ>sutWI)k1S+GI9Pd?7et%KgCP^dF'IV+nuV)h"*]1M:cu_0brW&\lO`OZp@M6=VS25*/W'.]@q5H^g&FGPLd]&-)9#oNoK^Vj>en.$#4l>Km.s-SLkD$aG-"C%-SP7V.$qNY9/Q?i!,IPq5[E->egQXm8#KT7,+!#/2dU!<OsVV$LgEs%gP00)b;KWM3D?@`3[!]aN`o@JW5^7h`*MAUJO\ekDMKh0%6$2%f-"H"FH(1sJ0d;FJ3Pf$>f!SY3-tNND%4IIs!30U.3I,OW"fJK4Z"jr\PiW7:g?s;q$a9]oA<c>[m)?F]ZsnE!,t2UfVV"/]%*]!roXOHIf>]p1UH3k:tf;j8kOo@Z&ffXR)Os^p21Ai2#]9l3Tl=;CW.[5j\Y-E40^6'nT`XBmfU"/t,M`_Eg1RU(EL\]2:6AD!2%ea@W9Y'e@S)Lj.Fh^^us?!_22&'m>S)aIO7MOTE5ih`[EUhL35gk8u1;^dc8[;F\eTX"V-kBId(pC5L.c$1Coe%1@/E"`tZ'<,dl%ST/p\1RmX1F/tuoDBbR(iM!<'@OT7RlLGOL!#[Nt_uU73%HB^(1]`.l+Qu>q"GlkZ1lqX"9rJ_rHU>oU_LU%>n5"Xc$<$.E,/jVX%@\kL\s60G&3*tIo=l.+J))(5p,?4sa+f-n[05*P8N%BApn-2Q[%`#hb1AN%=heE2o?1JE"nI4p!PQ72g!4[s]]9Ift[g[4<2Q?e?%_d8YEY\5o7:K/a6--FQj8(3l.`g0`X81_YWP)*K-NWN8hj]DR<WF[r4H"g9#X"CH47Oo\!n%s*9qj>PqO[4\jaJ)+=C20MTf5`@'%-d&h5`B+#i2YV/+rrLE"/g]^G$hQa/j:?hunk_r0n;$,%m8uCO!>_[;$r:MA"Fu`"I(EYhl*.0E?&C#<S1B<Q`H4FRUQF5&3EBSX%pWRkJL4r*emM57*0Y(u%g:,&\'Seo9>'G,"l<GB91FUE4Eac&PXu_o!,$l[#oHg$N-HkY:9fM\ZpV^q_2T-9l$;Oi(KCj6(<:lk`%G!(U[%[b]`lc-&:?2IpHTf![i?*;3**0\BdQ%Bpb*m1:aah9LIO6^ReY'%!D,?S`sL19JPQan3G%GS%3;<M#%7/-ecCSPZu,@,Ad%CCWebe@pZWALX4o0O_.W+fK+WEgNN+pHbrQZdXX]CWUp14Il_J7sm==XcKR^4Sfcj9Y-IfW`2qmQ'@_Xg)F\MeYcr_!8hOc028Q]%^l;T\$dfDu:l)Q*V,jL%L;ZY6kdB6hdpaMm8I_iBie^R9@+EmlY#/&),#q1LKHh"Q_o#XU6V^D7kJ=jWV+DO-3_G+ngd;@]UsN[j%aZu1nAPfA#CsgIm\&5b(3b@@bDIbSp<Jq;+M53$:.Iu]DDCZOU*SKg1_JW^,-<SC&KJkEaZ1I(Oq_Q;neTRaMbIaW1j2p)o'oEqn%,EHXu\"S,m\sk+8c!95JYX28*T9#lXH?HW]aX6\1-]3T\d=A4u7!Hr0fZ4%?OS'&+J2^r3CK1FLiJ@&uh5F^4pL,;)M$tQX-RtqQ%o'qCg*E',-.2Rg&=1au](Uaf*B"JI;gMYN<Gbd6I[+-N!G8VFMWle(deY,RdiCD;gFn"L/Q!GpU05Vp,e>DHV`QeKRRJP"2/DI^4%<s#o@g.0?TM;20uIjZ6cW[gJ7>tlJ&7=gZ=U-skeP)ro]6klC<L#Vt>`K:\?]26-A?6<u^]*lQj1i4+dUGVb2&r0g##"5E3G$Lm8%qk/R*RO1U.ZlKUM5)JCk_@OS7S92P<fN5"LTQclqUR[Kg]@7.OF_^>8+6X_;l:Q"B;'OrVrQ-9)L38lR]##i:d;8sKr\JXOS=so]%7H,tY.Q`<RQ'QFDHe.Hhc<2k,PI!<U1e3ko:b9lM)]JEjA1arV.g+o6T0Itt#a?35P?(_`?iEk=W`ppHB_J-!-C7N=5V9M.ie>%I%,bg(%MBOm3MC9+]Zgg^,;f(u?0NUgFR"!bQ@^VE"Ku$iPi$(iiV^mR@A_'V_7FK/&-N5FhdkHDc,%Q>tUT;5IIP\T7iYCrD29kK.%-(j<NFZA),I&+c)P/&*P)Fs=L-lcslb7lW!XYRg0]u-,L]XIa'])6_/M)K[4-T\)!PEVgE^-^j.;1ARmk4ma:9BHTYg,!r[A'W)m%8Va^P)G5R]m@)>&Q]@A3%rkb&Om&iNR30MAGb2q@0jkgETWu-??i*1eQiJ5</6U2`Gr&'0anULS!7KEfp%;doK[(]X<qMY>6]Z&q%C8bH[7L8>KMqM"B<?GC\B@>P55[>JWXVYa^NispPjp5s5%SJR`DiaccC8Z9S]XERK3&4TkB!?_`Cf-IbR?q7:D$!f"'(M)8OSfE3%3:!]M]J0"l6#X6#i$0-7;3HJTKo6\K5[>]3C36`[_7RikV%!-$L19[BCf]Q:3jeh)W5D_dIbAopH#)*56s&'A6sW@hm*sD\J.L;G%;XKp6@WuVAbS:P`NBIj%Au=i#Z#6cC<5q0Hrhp3C29BE&^nLk_\ET.qe*67I7SRde`f`C<0B+/lMc^onA\(Zf&LlD^4p?q[bbW\m%7(TD+O"s6r)5Jd"U&I[S<>Zf0m+PU9:!SX1&I36.6*C9ad+^-SI-36S%)r/sqeKM1J2b(hkd<E_:PH!k;>H>0:J4M&05!o#<Kt'Q%.Agj#4`.?p\*+KBUX8P-OjRuC]/$\W]os,fPCPlQadlP7,PP?h0$f^[gAYY?:@lFcF(sGu6J##Zga7=h+tft=dtSG8;kULlS3eNk%DEUo#+Vtto\N+\55<bc52WuV5$`Qf(VD!KE5e7.(^no2r%sdt+G5Q)]?@rPK)HT2B!5A.GW#$.M"Y,0``=aRgO>dQ22oTJbA+:#4%a)MuU<r+<Mn@fq<_U/(&/UgJ=-/`N$kZ&?"4fm]Ool.Rl>Da_K=<,P=.L[8H.Z=X5=@$M*5[n8O![l-q,6I"@!!_>r!6jKCn_6$&%37K>c^B'Eo!EnO'$)/!(78\d$;6+e(!,,\:aQ@"_;-,&0&'Z5K=\LQNn4/1tq'3f*\8r(VLQqmODTIds-q&Z?)AQ@Slki&8\fHgY%&^9:l61%KEJ5_2lQcPG&1m(Y:?4l@';?s\WTe6[E(M28gQ^9Gf"U^E5Y8MXr,d"7ATe>iWQj1WA4Atb*+L!Dp;MK?6b0UVOePt6=%ONc(!5S8GjPt9,4NmO^)F(D3\!eq:d;4"K7k8DhNNLPZGTP78fJTYEMDi^eu1n@mOW"MK"eE&Aa*5P!eWkM\f+WVrjN/&:--,dZt%d8NJ44//mu6W6OG3$';B36"O)?("fP]\,XeQ[gj;BMK-U<dOiKX"X\ULB`uBi^Kf!Lm1lDV=?[`#qQ7V9Vj;TN7'FPRmtPjoHC2B%9J`*U>[V56^G)t-5WKr2CpMP>)FM@D.cTDg]:qhCa2eTh)-N`GiK:^F=Up@Z,!3H3E-OD3j:`r5Mu[T\AI$I)?%R;LW`@H>8[nt!%a@7h#`$HBD+E+rDWZjcfAPh=0rFF<+OdbhWH0F>WU+np]L."IuLb.B_M3'.'*FP.P`sP8</0L@VYr313V62TBnXRJ1Q#[V59Tr5f%@/Zfp1;kM%1"B#KRLWN?*0V7o`YE8Z7Hjk4n;^6!6req-mK9UA+bE9uQ+h9r!=?"$Zk*u>K5?JpP+&n]/=sC?PXrHC1(Ni+)Mos&%U0Y!:!AConbWOq`9r@Vr/)`>u;:',G>HKc@)HqJIJZu`j/ZVusI%jjG=3kIC:R1'Z.Nnp+etj!`clY9QenSlRr*.T,]'RR@eku>L%q[5Qk[Lp`4_d3br^9htk[t(3aXJFQVoQ#%V27b^24<ln66'D@=ch\LL\#B5LP.q+Ah]2Gr;#]V!hn8Nh5lTnFHURj6g``:\raqD0%-&!K'Dl#btpI%Pp^D/DK2tt"HJtoFY2Uj<Bp.6Tde<uc^0l1d1L_qho]j+TVHl3`8jr-X,WKbT7.UQFj\T/:VFpOsKjd5"R6Lb-Q%D0h#qjlIB(D57+?APqHT][L'a;KC)?9\73pX8,IO"MK4BA55X8M=NPY#JCZX^PkndgL^28\,!;VZajVhnmRm.o>l)%$]htT+UdPB%E_1O$RQjn>A+FXsE<,ClTG!aY9X9bCh]f5i:/mgZ?R>AFD4]m+EV6#MU"H2'j/3-183'WTYc,3J",BdD"AG\gB_^mCj\@_#:"@%H%9Fg=Z=u`9BFrYD7f$`4s&5(R$2\;#6<9Yt%7.pQDTati3pW3`qOV9VF5E0!8=Gu*=*S!NKk_X>bPhWoW;uLIZ@\"%[gc5L@]-q#M%3UA<:;5t8^4IBTcMW89?(I6.Y7*7#gQ58'o^4NKW+]!`"-Cq[#FYQNVckKm;'cYm>Y%_tg>PZ\k9$$SR3qI;O=k]sR6SdTYG)?k8%+"K'4[9c""991,Wo\T'cm3Yj!b[r?<YuuuC=!8)Wns&6?]+1t)+F;ib9s'c%$YbD9C[##6SL_MNA$%\\.i/ht&DC<,kgghle7"QF%SLVUBpl4M7UI3`_*K<WNqbW2ml$s3U*#t\ef0gc^9GJU@\Rna#P[)UH\eJLEB@8)/Ijgf90W^`6!2l`bGE'VK)s-iaau,=)QfZi@%S*(urC9r:MR8hod"Dm*s3/4/:5$'KS`A;42l3#2Y9]jef;T()T-$!Ok!dUL<O=OEcj]kaS@OY<=pDF%aQGuhEFEuUuPq(oOAU1C]%je#Nhd>M!t.J/?gbbpUsM_Z^`)\j.#[^$H]kK5+&7NnZ`L"<\$"G\8S=K8m1dY@?m3f7H`9c7])QV2U;d^bBu+N]n0kCMi+HFo](%CEN])Zb/>nOt0ieXl\PrU^PhA/%B9E#$q@Tl<bHk`_.c4)VQ8V?cSu,9[kKIqjELtX=#'C#1H-dj2Y';q,`DX*_qGW/rC[#%%pV_%5ZLWd?`LsYPl+'P%VZ&F"]ZMlZ]]@2X"jifP"B:bXqFDk!m0]\P@Y9Hk%$K4VPIuA-"AH<YuR8^]\,uH3#\=lhuXZBmmAP2;q88k%cc!-rZ^imP8S$7pkTPfj++YJNJ8>t&VnUPJ9rBb!nIeO!d9Ile6.;cgT3Ku)'c(IX'o!oY8H%Qd'S%@.c6VQf'pj7q<QLrjDUGE<%_M)5Y=@gEQ(<-]=4PJd%NQrH[`t\kN[#^QgMqWB;a5:)u2,_5h%lIW;G=9ENF\d-o#;S:VO/Z*mS11K0[gP?![lBdXDVbD*@#3md%k-Y-"dTJ\e\RN.71@emMMS9_2U(I6kkMf9RqZ(giXYW@G0\^!MA;,HW2sk\2V:Jo1*9`oglb$kVDLCGkX6Uo5R!C<R:&qAi^J2u6%$b>qP-KU%UOc76PUK^2GfDt'TiD2PVr5SGr%o<55GX2uu185M6+M=[aDLL?-8Ze=o"to$.28^1dO1>I.ie>Otbnb[g?J$_GWNH8(%V7Hk5*S!#4l`%<2k4NQ4Qcs,0AMn?.-=9m$<TjWC=L#M>/33P?%V#6)hNubS&/?#ha[4A[hA_DFZ3o*-3Lc,pE(5_Yj4S6DRs(&Z%,u)N3ZWM%OS](=J%(p>//13a2\!BL0_%@r^g5'OueclEE.%#9K]oQY4QS%/r'*jm5NEV7,.NBuQ>]DQk9GLG8@Xru,-,_?o<L->'%':*B0WZ<u(Ku*=hd]B)K"d?u^rCST]%5Xdh*:OF).+\;,WsPT<&YHoX16^!FU<M^4\LISJLOmADag*p%WXraIlCc@"H!),T')uc/%REG?GEY.?.W_?L@jQI-eE)C]RXnl<SAUI($!h3916r]SAW1"-uBn]aUjHE-*A[40,Pu#ud3+8=\_c$L*"Ts7VYTju&]Bn0@]]Bh.%3*l)Lj;9s,IJS^7m@_n^i2>d4;`.+r0(FLC1Si;GM3R[T=(1b[$/JGd%XHL1p8BK>!0('!*X'uM_+7NL8sm,#&#<j,6W6!m!E%Ce%9OO-G&q\!ZT0:E;g_pGf0ti_"`MHUi"p*`:YpLijS6Ej]3e,Hf/m_dUQaYoaH4#39(pbEg14rClB+(?Q'R\3O#_GkeDEd7EO!%!D%VdI?ris@dLQI(>]03:F9HfE>*!<K?U*`l+<BNZ*,'Fl8XD-9C>`k(,M'NH#??M(%qD)6d\V]qD7Wkpp[grEkJT1M01&0PAJ7(2;)%nc2T\B@K>*IK*]F1@]a750.[QZt'-FWfr74MTPscWfg"A(Tc/pBiI_G&GZr"$meiH]CWQ7'FY&c9c,aS2;pMCW>9.^EXm.-KB,<;%VmG\!*X;m"kROWVZA:J'MSeJJ!q4RC%FqeAN%6mKPX3g^.kkcVj]96=DIlG4>G996j)UT$7WmO%a_jQqVJ@K6!7s[PJZU2s8rg^@%ID]e<L(2AJL4ai*^ku@\4K,rp6gTiK$4sBTMCF52+a-A;aPi&D;H=tqS6J?"$XM?J-Gu3EgSNa\'M7<\B1^B#AB;=Go>Cc8h#WKf%ngB9(Vc5CMKQ\]SJd#$YkOm)bBG48'VT`/=,ZO.N!NWbT"FR]7,IM^F5FHmt#Q:@',*p(0nBd9<7oDn&Tncn1Gk4g[pKUKe=+%_l%Qu*o=LAD8[gRF`Qg%sZ0I>=^HS<!K(9u=HWW6j2MIr:p'N9fdL4l8$G?RR9'Yp_CT\nR1?Uo7b`@Uu6dC?k7kn[8%6GN=\\`=^*s%kO.dWXY2(f_kk`"i8eR$2j]sCVgE_'&YH7<UB8tZEWPY5+u+:S?u_hR\[WX=(;1a)mG)A03&FppD!r)WbHV?)1`*`jBpl#C8(OZu%29X".!n)C&G&lhpE$jq@[7@6PlWilHhMNoZG8>V]m?%m&3T_2MY1L3=ZXO_Oa30V<jgdW)e"<&s>Rt\;_OH*Fg;&^Vc&i,l]$oQm%f.okM!KrB"Q&V%KHu%Sq$mg\o6XK:l;fLIFQmFT5a-5UG[rg$HSqn`g8PaSp>OC\c]%Q6>d+OEemJZ"0F0T\agt"PKgpl%&8Ar!a%[rct=I<:Z\VC@!W:e3NNkY//g-USbq?]2D?I_HdASSm:MoXFO<%<&OpDP:ih\NcHUZu!5GN-4pugZNq3JUkMFc3=Z5+hE*&P?(m]%7#$W+^pZL$.PSn@aj,"\+,BB_a*Kl)N`7D?R+N`K=;Z2TLPNG[kFrt0?\ED:=qVa#"6&$-HhV>sWKUJ#>fP%^B&1h-?D4J5%EXbe%-VS+aT6`k/Xb'Uic.V/+75$T[7Ju]Dk#d'/@KBmLd"<(g$3mJN;elh0*<+gO)s`g)FjEKH#^Ej(H@[om/20F6](8mJDf<"8M=bZW%aR.4EFE]#aSmB/WW=fX,NJD`r$NPm8<<AID!bbBU'EUmH\;[U%792.D,H5,o-S,T@'>^*X`V.BaIq0oFO1-s"KXGlbh1Lj?hVcUi%U(j,28rNpd(`#S*(g(*XKK@5okkp.KZH=@8[0A?kg!UcP1VU`!111L#aSL!8M>7J&``q2E)nY7R#bdRMgsK-5I5]$g&'+MSL!=[D%kLa#]*[-YA(BbSf[Z:&X:0KBYdb&P&h\A>;JON;`\\$RBb+;]\6\hUK^(Yr):he?QYHX>Yn!Y[_"D<H^j[rRB7T.9NA`2_Zor)[2%o[o0W*AmAe4=-h5T&tE9GZ0u5N36%6D37ekcp=KTHFd'B#Wl!tN",tlLM8;Vh;/Mo1fHnlOeI\a319YS5fMuYm?-?%8n]ak?6=nE%H"8KE$R`D"Yk#.<K7QigkaBoR(.t>bMkRtT`Z>d&F`*ir2'*XfEi/ofA2hpj/@F=pQ`Hq5%$uK_*Mn=7_jVjYGB%7i*9e@kk17H7%@Tl%Nd^q?PZo/C'C;&n)FZ+0U9V,ufi\f<D1V>]K+Pf!fHAmQUma8IodV<ea3.53pi_OV);:<7+bFfE:)9Zmhccus<@o75d^<YOp%f$<KJ5\%S[VI_4m>A^M"P\X26W$k%hBri_p3u7YsJq93`@Z]k,#;isSRX_:c376-_6mtH\\^$17Zi7Ko1Y1C0R%=i6bVXP-X:J%-%Q(oqaM'[:L[bIR`o7ModBkra1#MG>:o;bYqo]>8`c,ajtm6YCONb)YE2\LqJcP2&RE9mGoJ9t[kULNE`=nFNU[VMWX$RV1j@=fkN%!+^HX`2?E*'`-5qS8,hC0omTe7_Ki.>U2/Wlqs$IH`+UiXUe)W-RB>`rdOVWNhTloElEXQ[fC^mmR:^cL9ane[&(JHJQ+.S_eMX<%D$&<dCTDD/oiF,-ISHMC&HsF&@4\[^!>Pge[=b_P.\"e@f4sqG'P[nF@GD4+&lQ?pWtI:lP``u&.[CAK('X)eG%9A?NhI6+I>6JS%k]m[gld;.,WkeQ_(FKYC+T+@&[M%*dU)te]Tri_c9Z'-"BEKu^1+TGlor<BpZ@hdAq_P$k2eJe8?r=tme<_)."P4sW@Rd0)5;<ph%_5Jt%UP<)hU/E/@(lKuP#er_2G3JcbD9#W9X:3-+8Zq9S;MTWuRkR\Q1WaaB&LhV$T8\]JN`bDA'&J=B)P`Pi<$?WZeU#_:6)695%NBV'bAldM30::k7"NuI%7ich[SS=q[*lJW5FAOpm@28OHqJBF'"t'=#ECK^^Me-Al8u"c6rIpD].QC^W2])un%QsQ]7p+Q,DM-OG%DU>V;1ZoOPiTO#RWVX%o+roGDV`V6hL,[BC_@'P!n7!Xg["+q&3iR0mAqnLrHBY7^3sT)!4O./$8U>T[B2N=%eE@-A*uk?T:p:%\%p0tM)6W@RqCl8NT9I-#D?&hAK7E1!,d'YhO$hF8qF-/aa[P9bI0V('`NLq!oPCq?_h;1CaA@T=82ai$)>TsErkeTSfW+Se;D'P3Y%MiJ^%WcL)P+X!3+#u1o:Sr]s=&8KSm$%K5#>j!GuTm2GJAu@u6[k-WhPO3e)nK#T8($#2]AW^m[HaBZUC%+=+_klR+d_3J%kjF??%-N\SCh&!Y4OZbbg#`Iu>WtL<%-9JU,i;#o+4"uH&g9"JAL.H8eO;Nl#2,f(N`Y@o1&DC+`a;e@@VWurWA"u@=ef?pB;`tqhF*L]#%E.s_fe@>\EQ;]#jouZ4#5<Z7cOs^_(29Rg-3QI%87>l4'+\%c/igb?g:-odbK_BfFKpZM$`##5\B,6odVNl&<iR@BIZJfZf,6BXB%mc8sEF7W*[IG1t$7%l9F0lRUPFG,2=*t(P9lKk+*7g&@(Y/dS;!,3r@&k3dO/D2)VYhCTr6DFom(5/D9ARd1?3g&[DZWE(U4,4]W%a4.1+:MA,YM3@clg*!d;9o=cBC3V6maB[qDRm9cKcK'/'!c:L>A&[OdY@[k7>pB^d&CYIHX/"PY;,YEi2]eJ186uE:lR=OdkNX?K%5rtJ490Jk%PCi;(H(@&oKcS4TFGD4p)8eXZ%,=;EF^777ZEmtS>m_+aab0/94#ifB%>MB5LnZuV("G=VliXr3ZkAV77_J#=)'q!(%]atIn[&'_[_1jT#[]dA[X`H:K1"Wt<E$$oKAAngl=X;6`(1qQe0t_eG^9bLs@!1#H[VmFu2:gX6hE/!Fc+m(2!\9rrVPdaI;!1k8%+&!q[5C#/O8VQAI\pgU^<,-)%68`TaUPZ+DAiq![`I\e^XfP#s@_p/0;"+RN,gN)#+kS>]kP='J6pYUOIr+Ct&@KaIF+';d';QAa%Ml]?W29t&E047Xn@$UO<AR`4C>%Xt0&34n=/8CDF%tmG.jq]<K1UHq7jq"<+RnI1WkJGl*b%=9[g?`\F?!)!.a+[uKGIBd<Ct/4J%oHdDX0Xd3ui`^fK7h<mg+?>fTEV`"4h,ho9IeF0dMU^#$5dtL$U7K3l2':5=]u!nZ:sH?Xp71:_6`-1f4PpdA$'.kPHrEUTJ*5Le%Zt?R"\Kgq"k/"$B'GN2h4*"imT]FG+Bhc]@5SUhW`j7HL6aGph!-W,E*428E1tsTLL2nCZe*Me0a@NHaHsnPDJNG$67tqZDP>F/)%bJ&Lc^*C:q)=rH,k%PC)]CLm-2*\JLhSkq51#7+uUFR?jRq^_63\gcYPg)$D9ug9RS#9_r'>Y=(<NfO=^Z"%$nWOkfp2^f!Mt3Q8%@'UepZKC!TF!PjSq?pW/*1Ui'XG=HZWOrOO-S<oANO:B4Pe_X?PNmeJp7@DQa[gGVlHh4Ps#_?aYun5U%OQ0SB6_q3l/,1:>Ypk[%l(5ce%Fi:s9Wn$VK]k$b7r2\b>ON6L>uT]ioDu8,F$2K<@LIiSL4gRs(K1?tR<HVO[pUg`/.J54-Mj2,aN.3VZo$aU)!`gbO'\&l%Yd0"_PbN-.Th1?D@:p9f#j".lZ6:l!pc&(_f?]/t&Ei`CU"g?@bJ8.keK<iWQ\UM`W]]c[3Y[XX`0bV^af[Y5c3]dA;=[,0M\B6\%gOa@Z4`Gj-QlS.&O*(u[*j$mNO"JI?k=bMAS*,DAR)G,li7(I#No'An.J&2`3nb>XSF6gZGL#TO"*6#_$I/cq'dC]f><="B<<,6D%QlU"tM06iO7@g[Tp'@bT/-8lm9`4(!K9Z!;=UU&4fDmb(2Yr,4dlbjs8U!r!AijU(GH-E-cHQ!!olp/mcN__k8%PI2/\E[V//Wui%,-lng<?35`%Q;>D_;u.$j^#!0a!)1,9P"mVNrGPmAe6:`f;<gsf_/9M'[X=p'KH\+\tf1+@!1q82WgZr7qTW-Htaea^Q<@A>qBij%oki%JE*sidMUD,U@9r>l__5qW271drgJfY:FM[28N*Ic('>oaO\dfr2bdnJBK#VO_T0A,IDK*1oP`Dh(%q\5Dco$TFA%GPg':Td.%!]#K=fFY!O[cU[O,dedsm4A$T_*Tu-@EG8dcpW@DZI*oG!J1hX,+9'H]7X)On?tp^]2IgZ6tCQ/gcXfK5qg=OdK"710S)9),*o`@%M>=LD5kdMMI*;<nOl7@IM6;f@/P"B)Z9GBnZkUrDK1dm$S\t$X(PE-aL6U^7B^C<b*7#r%dTM$A(ks:t"g2HZ-5_iA2N2_I,&r7n%gSX7DT`uFEJo%D<&tI+)7A=S`X$'Kc!/U5;j'YNYa_5.d?Sp(`Wn=R)/5EUl_3&H"\$?Q36YrhANBfHY>ea%e@,VpFj7Z4>T&ZP2%^2JEVjr#%uFHMd)9U3S'_;Za8C@Zd-'i+MqM0R!,^LH<,hbo$[^kF1_,==i>s7(k"O];'I")+'Yai1UE'ns["7SaA/K6&`u,_m$'%@cV!;H7cm,Q@tWs<(PV>>mc2P=VQ0Da*B7e2p7T6CdZqt)o7p[pRH,_Z)o8^c<Wh8B3Q6BM]aMJ(Iqu9V8dZ&;pqipCA%g@!AQ`e%!GW/-6/6ZN(!ahCoG6qQCBE%-IOhji4"EbO]KplT5j6H?6!H[jL)M(\MWqssWEp0a]k"Gog^KX+1eJTq#Jcc"Bpe#0f5OCCF6l#P%jI#4bRi5MZk+0&\aIn447\pL/gu`icHZ*n$;Y1f(TAX2S>'iAqXUCiEM>jj\FCSsm(6`6ifP8DZJBK9Mq?-=.d@`Hq/>;`TDp1$(%SIO'2[YriPPTDWjXuL_b3j5h"A+F"tAN+cf4pXNFUUo%"WIheTXfCDd>K!_GU!<nk(I?]IV.g4"Vdm"2NW'@-fM#1TN%dGrM,L6q%]t9s%=r]h<5*4<o?=AkFEUFkU:3Z>_$aJ*FeRLnG@4fkp\R@?DH@66b@8Eq3)OKlC9K!XF[ZX3jp>#5?)!D><,)KupFl;KA+@u(/%2\qp`0Ar+C_jWR>RUq$u/fs'iEq*GcVV!dLV`Zss%g.!XK.%n,2*b"rac@0JT7<TG]r0c".=tmn(`6?hB?l.g$-kstpuXCF)q?R@%l:=c\WqIVp<K/o"aTVD:Gl820n(rm)-i3G*A&WK6R$kmf2AJf:j'.YSZp,/dAtu?hiqcJN:&Pq6Q7Bi[hn^EF?t$idHkVEhR1"ZH%=JQp)Mj>/,_=_[87Uk'/(lB>;6X*jP?J,@!():_pMo_:@k[Xej@kg29(<OkC7`77"fkkstdhqCh8^43H3u=F0NF!0BG?VItkt0+Z%:eUOrZsu*!TsqgN6UI0jh,-A.#*/BEZjfOVk#53PM\g^F#8UA3(Q9-JL@a]gaD!=>lu$aC&`mU$,3ph/c'fhUnmfn>V\J_2`OghF%'1kESR$aB:C`icD^m7dR!s5!jL"W$i+I9X,HSj)`C0Lj2X.mjs)qi;YDRgc8E%Eg$biJRhk[-jhNe]tX"(bhg,ri3_.Vb`^::M$Y%I#sn]fT+pnfP8HCVl;=a4#>8(BL_HB8^Pt1/g(hWJl]QR"3G9[H!qh_gF<!HmZ-hYEd@b.Z>R%*Fc$mf+JbSLe,""(Gu'$)3YlKK%E5r/+J<.Y5:dtS[@:l[aLD/`pbaD@-1pPVo6o"6PdjLK"2`.:\?`d#S0*h?c<kN""dfZZ/mO"F>W-dR@>VHoALa0%+SmYWLfCHIK%+?MDI8!Z*"+l3`)BDVR!A"Z^HOtcpah9]S?@R&F+0UgV%,PgVoV--)$:2^CohM"BF>42pr2m^VNPI*&G!*TUj>2fhM97'lP-UK\9%ZT-t)lbdQrGjF)n+`?8og&T9O\nUjq^$8?^#45i@NT\\A\Y:U+D_]%sp];))h[ZT?RaqtpPF![k6t5`$;7,jP8&3@'?M,m`]1]3k%#.<0KREf\]MBuUR='!V*.[r2KZ<Jr'EMIM<VL!F>FFZ4jcRL<nW_hYW)TlU5GV=$=i6pH;IfRNB&9!)KX4*n)N,$1;HSaq2Jt.X8%UkTku0.W-hGd0)l>+86a*d61DY!@chmcpc$7md^#UY:PC#:^!mg1`pW!]j7NDi^SJSCKpCkWiuU4](H4J@a!(4p\u,SQo!AdIjF$%##TE]fap3T'3r^Dj?/#02+Q*JAG&!n(KQe<?Dpm6?#Zf<72oPnh^m\6B&jLA)NG^.&e`BoMRD=`:gKl/Phl4::)PJ/7XgiFUUhs8%C^qDOASb+c$E?R+jMhZ$rZ-C%ALIl-,e]dM2NV.8d8]Uqjg)G8Ag+XSd`1%S6b,ZI,,o$#9o_hG<A(SiO<_*JK$t<HFhZcI>qmH:%i#g5Z[WG-XE<;flO-`a#S)s%FCcn8Nk9aDe1?aPnFrB"rNRQuH6sM?KRR.F%P[hq=F2\h/jVd*0*.+MR"F3I\@7g,a+GMqjjeV'^%@lKOnUm8rjAiimA@I;FJVBi0;Vi^lt]]Ht;)bjk/9P8d,-o@qK-TP%A(Xa1$FN"fM:,ngm(Cd3>26`6;7s#bB[PU9&G!OMBcdod(%m-6n@dZMkRC/sc7_36NhENE:8k*B2<)b^rdC[ohdr6\IY)p.=-6jF-YQ(kes?(i`eh8p.:`L?3UEY_]NWAW;`*PnMr2ceS^$WX`H%6K,!sR7#X18@s_d2$ea2eN26.&NcuPC,/\Q$E'n"@Tgn:>(rF6Yi6X6!Kh3eYjG$`<2^GM6ZgVul>6hi-fL3=VR$qN;T??=6ET#O%D(%M&Rm;`:baPT>R<$E)nQeBu;SPZP_jdX,Wu-<lodHDSl,+R\'3Di&MRBBY\H0q;!],b'K\seh*mKsUH#Ndi0X*"#jY:Mug]i'F%@G671_Ze-2W`_#bY#5`eO\!%2pl_A].hdCHh51B;)!2GCRUS:^M9$W&.uEMMXO[frQ3HeGD[4@cCZs59=#mmHhTY,_g$qZKdWr`e%:ad]D)ce1Ij]P"pWP)Z`pu291GiXP[khqp#X:>c@^;TSQ>'hnEfn+2C68+U?T'jXKp.Bs3(UXKa87Y.t;:o3n-T1BSR',0$C+<I:%oZ"3>RG!L6TaP@o_-fbcefL@i2pD.(K8Us>ih4X7Nm739oDSYdG7eR#Dc;9)-Go.uRjFB(&%@R?h34C'Hf+1YT;#MY7!,N*&7-G<%?QU7pR5l)LNcGrX;h+[XYu"hcnbVrJcZ"=0^eSg]-V=.!h"BOg^=dh9kb[Q+2D<A*HUA/\jmQ@AW)tCW,1eQ'^4kdZi;'$GGB&Cq%ouep!VPUaF@KNNMqtrm&JE^hh>_.KX%'XRlU8P)n3*SA7&P"662bc!lRM?(_o5+H&`rjlUXKLSH;o3-T3S`3S@n4Kn)OH$OB!02h%a"U\UPflcqBC1e`'UDfZVeqOh>i9h[nrsG0=rBbB=+nO!N7J'p?t3fn^M&V6]7-a334gkQNHDJ(V7/7n1gK4Pl>(`JK'Tj2b&=^G%ol4Km8@aG".Rph*R?.IcN4'mq'Uf)%X_4bt;R)Y#L^d7Ud603)%,)l<5RfP&Sc^NEI;Khjp9tI4q;s8!p&)e=+=!FjBebSrgJuBA%0iAS([4"M%YfNTN:fq=acQ]0eQ)!VKid/V]m=:GE<J]'qGK^gOT,DPqiOQ-^X!3N><gqjN2Fq<a+kn3FQ:QqMA_)N6ehC3j\D5M!%c5LD@K;[?7BJ*C1/X.p8mT*-@d]sV9p?jQ?Anf^qTs8U8]GRkBat5/AZ'"G\bFUW1[O!kV2DV6TX`Nes.@2*a7G9j^Sf4h#R\C!5%)],X0HZkFLF1\pZZdXF_O>lj?fJ9\20R1G"0d5Y&[\fr.dcgM/QiZG\0/Yd9Ym>%_7Z,M;X*l#Dg'M_l50aKa27gJmZ:-7'79A(,%OKO*ZO(ZJ127.\*,;"fu5$tI#M0+'&%G2jF*T0CH%4TAc*pjS1bm[=Ug)qu6VFLlW!gZAiWD_FcBq9StFk4<Ae(:E>C3HGMf,EnP%e2$?h5MKh-FNuu&X<E:;0qt3HHFb$^OJ]"rNh-u$Uh>H\([D`O*\4$?0$A#>A%$gAlHHUDgE8Z:8$/iq3GYGNm1&kL;!o/L>2qR8%o`@5DYsmBNYgV[C7bV-T?RWi>[Lgl1'@Jpc;&j6FgDe*!"JG/;0l*U@SXl%.DFn[lUcYW.m/f`af%r2rk\9?NHY9Jq77`Q=<&%He%r9j+IfG#Iq0:I5+4e&?[UnteKP>-0u9rhgQ0[$<<@1?qA)_$S7.N1Gd6YLn5WmG&/P4A_k!,8NN<eW\cmi4XI7uqmh8/l/qB8Cl4%F0g;X7RmpU<%2%tKM)W)PcEs3/:7BUI&+@`O:Km3fiojmgD-2=Z!H<oe2,P"]%(lmPYDR3D4e92p>dt=:FDS=WogL4:.;dY*Qljq%$=@2JIrIu)3bu/ReEGE+WqNetP"1]P')&`Rl8'@h:UqgEePhlGe9H9)U4)Fn=\3XY\ett15Fn4bNGBN7G[;e@0T&^H=K#2[k5m`f%e+;^97a5h(bM(E;Nm0FU1tgKP'@(qESdoX-XI^m]>ND.)m;"@nH,f6DY'@I%LSl(A.?.gPcb[9gp=_amB"`3]V`hceEt01b6P@Gm%f07s4k3S_#mrW_5E3-B+T3J_*?/OEYk*;jF"nU3?Z/.(ol'bcHeMC08>N6QGSi9)G8BjgWqIclI5OH_)G3;.UNFc\O';#WRh_#?3%WNj9IcV.l-%Ysu"kUr%<eF7RUYC1^do[YsfiS2-N7$oRbf_kPI;N'G*M8g;Ghk^+Nd@]i0CP>&jLk7hZRkeZk63G]b1Z=TZL*I^E%?[EaF(*(A(jbb7Q"\mtPa2Dd%KV%dHA4DZ*X`mtm"b#6!S,=uYXmBUcUgo$VBLHjcZ4569o2\EJgn_+_YrlgP=+V,T3jqRVS?nn3%*Q[H,G1X34UoHZ!9fM;S4M`g7Urhc]7L^g?r`,bq!@bd?]`3os.>j:!"u#<>C.-beMu.=Q@di1Y.E$ksrEmqL0k4S$KiJAR"&4A1%;WReGOQ%Z[(+&$?`9iX]fcq6XNm-3%737.K_Z8C;oXmQik*=c![N9omE,:oIJjXr@5Z/EP3eK;sLn-+l>G01LVooDb->n_]]kWCl%?>3e2bd@">6\mHJiN6.c[j0V#q\Ah5L"0QOF;!=bM9;^&f`Y"1@D9+(ElGA<$MYB&H%RNbCf3uXrnIYSfo5J5jYd8Cn[rE93bg"1%o*WQ\^EEu?e/gKk]A;2EhRk3r,C@YE*Gsd;0G)sQ6U2=gN(S'1^R9thd4^;_<:7-XeZmP2keU/MN]4?SWXRBu^:-&dQ@F%9j_RLT%Go/kIXQW2S,Md@"mQeOQoJm^t3Y8X1cP%<RZ!?FYT'?#OHp4:DeQ2WYS%;'YX7[#%6A'nH=10@+d\)SmmJ*CN3N%pP.f5!BI1t?m%N*m+T8#7i8B!(.#c>CTQVoFTuF1W'.U1(.A4\&#/MZ`j=/4H_QI!+k0iB2:$D#%E#hAte2_nMu'CBe<V/<is&HuGKOogI')8!gB^%Wd;#\$0(\G8&;u+Q"6ZT8PSuKM,RHs]-rQ5LJ627BB<m="a'WDLWV]>%I[>lb]5^#@]d(UAgPR?<=7H3[pf;Blg(&\PO481X"Uh<%j#LX;84R!W@J7COF+9ug*dnE9O.MDWpY@!OAKe7DFEJK?1e]_%2.\jCe2lEi@*=isGHHgDZI0nW/2TM"I\l'MV.2+!Gp]mH%I^PV%o;mj/%(,%tVdt,4HYbq<:/B+Q;`9W2lLQN9M%4TKi*Wc*`/><F@M*N\D5]Xgpt(`bcX.h9YmN(]DlfR'Q-T1UkZVJ#D<u_a@>qH+%=T<!9]r09dEu5PL-`W&cpgXEV]Wdi):NCu'$XJ^ZbS"63WQf)*NUN08E]-Q;/ui]7Q/`7jYETR9HQ#.ON1.>@=`&K&CJRj._2]ef%r$jk;&7stO.3smKWH6WQI]@U#(r9r>?-VCWl0M&;,O!(I=g,.ceEs7jhl\4tCW`$PQ5fGaYq_06W.X.JI?5FY%[(>gIQ/[DAQdA@%ABf#u>W2kdA4o%rDss&"bpRX[KBP&e:r7N"PksZ\G-C:Fji3t@`p\=VQMR&Ma]M!)N7VPk\PmN1LKSaWE2Rt_gp,iJoHb5Z4]c-t%@-JLp?WO5Oj18DbfhI988P#BkO]#cUej>27[kn_lqNfZV;Iu_o,K"anBg=IN3j3H5Vlk4WPIFb41/^"fGp3EZi(ILlVo1,&2bL\J%@$fBQ3+Nb-X$2K-qQQG3bJbK+)fJ<2X=^Q13ZnS+Sq=SOGeY!tY[$`Umk3J+B0+d+4#9pL``>X1ZnKVAbpkO&/@@C-r"*2_;gcde%$5Ku*Z8:sN)=!03O%i:XdU1^>>1#$QqBuY)M`WV)kpL^5>?ScndhJ^8MqSlce?DYF^2/\-F;eaMH+iTRitSuEO=6M"-)Y8f1q'C4%e)V?&ef%KrA,j5s$qUmWg$N4Cs).7.S[if"?/n'E8T3PRkk;76/FPdk"*.3rL6T7Ze[_eObIU'h%Vm"Q46M$61,b(-GP@O"!Of(R%H57NBIHDN*+ego9a!"egW<s1P6a"8h9`$?lJFXpS=1S_?FjH>l)"aA7Dql`/nfsS@,i_co:T]AUF0_VHM5[Jo&44u0pHN$U,=WVS%74[%&ihgR><TeOkFHto!c1:896^f9Qm$Nag*Y^m&AA-CEZ$-+K29#nZ%(F?FebN]EmML@TC[T^5bG(g_Z3ttN5MT)Hqfui)EMS3@%9bH8(Eo(4A-I,cc&Sjll=3gLL2:bn4"%g5Wb3dR?ACO^WBqK]_IMsk;<7f7;\TfrG]/Fr7[PYC%$mbSOA:du^kF^c,mBmt4PmXXY%3d7uT.P9QGm@Lu-CL/1><Fa%U3*PJ;R/B[C<OeFe3@g(m;eW*Yb,QmNHJMTVKc4`J=S/k$j0N_LcsG"d=K-L//N&tP/!9A#e7_[%%+;t]K96"b)X*ET\/JSK'+_Rrmo\`SVUZUL1#*!5/?Vk5Gp&!9Qk;81,T=GK-<hi-*T)5IWrG+6sF*R^K"fCE)em<>X7ZD"^HC<8`%ENFNgrRh</A55]O_pY6$`\"Bd.Ml:CX`EInZNml<40Xgu_Iu#L]W,V!L=9$V=t/,cG82tCNS,tOeuE6qSICMF2/(K6k32X4Q=1;,%H`_EOcW4jsW_Fq0AScNSY.^MDr<<Pe_="Frg&l*ElmQbl@I$cJQe]q%p+?h+=,m&XBa`>VoE4[Q6'(j9+7Y%NOj#m+0RI#;fEWoc%<r7=Qa0[%*C9>mNKADHYbusl:]=26'QMXEkaeO=cee"d"["Ynk1"8s8rk2;^C*\hoft0*u&"%E%H2#n:>FF98T/YFirMo(!Xl4$2%+fVR#3n9qY3GdIMH'G6HZl'K>/%#[t^\S]MZtmr.A^-f!1pu"=Mrq3SG!fbDc8kNS^"*Z5X(@/M"dbZ'Y81lAk>&(UBI`eY;V0W?%W2eV:N8iqU8Ll,()&Gf\ZrX7b9P_UQR3cAoD%0FrB:k'_A`oL:hHqd:V#d]q=*7AC35F@Yd$SPAQ"0;W`l2ig"uSl2N#kZIA?As4%5$;q].X*&9,O)\kHu$2<DW>3!r<2hc^-Nt8,[%;t@%qD##cGA9nt[CWnn>g"Z7qf8$`l"`#9o)2g$*s8.5VqpXRrT/BBYj]clkPq%&813s:XG4c<VCosc3gOoJkjSam.1XVo*IJ>7-]6Id&H`XncYML+kb`j3p./ug1eD%SY:*g6"b7BE7\adg)Wu9Br;./GD=C&VWMr9%b)JIZ4[\C[JkgO,DI7&?/0)m<j*KgYcHnSDTYit.j+_+AP<_;,l9VUn&%qj4TEXe79cQtk8U.t&S\t:nK7^Qs*a#f*jeD2/X7<9A%3Rd<4V^e+kLtUMNH0D+EWpEZaPtsE8TsrZe2O:DEnM&U;G'A<h2Pl==+r*\M^%]j[\^,O"7Hn5trB'Iq9N4NFo?#&8>h.)I23Cj2%k/r6N2'/0,go",H^dcW\fcH:'mi8KNJ?%<A=OjMrWX$/oXl"?V=R"Ok3V?so9<Ch<G/"cf@OEE^m+-Uc#87PFDi^;mFP(FHb;OP,%?5GZn%R,AZ$P%tEk&V:q"X8,L<Jbb^gs1ls[pZUD3YCma[@"TrSK+sCHZp4sC,'`k[];cm%S'4EQlXX<2X9AZ`V.(uLUCrHRRFnh%`@5fJ<T`bZ`.G*QZ-*k4kgd?EP$b>h^smFQe_I=]cgb0)0K-rJ[@[Q%ErH4KY"'_YG*OF8@,1']0U)NdD-u-97BcXd$KaL%MLrXj%SPIUI<)aDs*>KAiI,'iSI0<Nfqn'UmmVBS:W[sF,Ssc1hF$@VH?b4]XAZ6u`N#,Z">o_i++"+6tCfG/cD"*!o*F)^U@()T?juC(P%0em/h#0_[\nGT=))\sVb54IqY)rXd]*lWlRb`(5You5N=UY*pm#brhL1]3h_r2R:gM9T,j7Ym%3\S<9qT5XXA]@dGB/P!h(%;u:d%(m.AmGide_*<-n]]/O*q)SE\;?Zjk:7<dK:Hd/;;DU\,P[p"i-@Us5<W$!eY.>\o[*@a!gL,OJkN>#*1T&skj+`=(KINpR^;/*.t%\FF%h\6iUci!)b*0VIAR:MS$Pbr209OU\djs4nV/'q;4k"'>',1!MfI_W)OZL/N/:?prN<`L4hXDpK4h"LY\Jga%13hO*Gr_-qN1%=.6_=4G[1hl-=P^o1j-/1g7'MNGFXo(<csuR7+5p\M!ck1hnhu\Ccm<NG"@kkac#jM]7^PWC<\o<./,SkO,iEb+#T*7AdT%I\G/!%B.P^DPPZ"sAGU`4mEW7))iKXq>(1$t&#,9bD(RN==UY^+)r^*Bg*1Uqq8(?!$uMe/VUI"YDd&&mB)r:5`XgB55b7&qSGGiq(M^[u%G@$=t]t(m3fU!pq4;]Y$>A<NbKStDP0Ft$=lM--a5,alk)JnFcNB25rMf"4R.sXr.>"bd,iSe:jmp_`q\i-_,S^DG";s+Veq#Gg#%-hl5NKGf5@LZmHS7SoaQ3T9BPfs9b?\(GY`qJ7'>QXg:.&TP.;LTB2*>Plp0'b<5Is4E:iiF)+M]D4q:_mT/6SLts9qXsB7\>_sJ%Yl?&-(*#CWDU?YLCuaJ&p8oAJ2sY^uRLOFL$#b&N>acshnZJ;"_kgE"\uXq'nSnH9^'!E7DG?Uc!.p9E*&/jJXM%EjILDdh:5so/%I3SDiq*^7uq_*Cl*F983cuMcTaH>iu9P`&TL6pU3-^Dg3h?5!NnjkBHVen'7cKK*N_0(A>@\^gIlm>C^Zs24aIiDR-lttBgmFc75%e^,ciC4J8c1/>=9L+gPe9u]me/B2F^D&B73RrCE&*-h6Ndl+;81+F4s[PRn@m*f:?SZ0(A[PCC?DP-5!gM%BChCmOUT.npMi+pr,%DWIcsq?j)&Y#bXS+KsXXj:\S4TC0Gh23WjGr5)j6Nj0g,o*_[P8D?S/jqm+.Wf*_I;.IttGS-o.B,$L)E[DBt04tu]qJo%;WA!#(%JKACNg?L6]Vh%S_(.NX%e[Am<%CH"i7JDQnYa4$_815I(6]Dna1I3E/;QQ:R1CSt)MLB?(dqYmZ\<_<].7<%ulBO.7Kc@u)B,_2u%ZY-b*d@MTtY1(rTGH7$!GfWb/T+Seg,B%_&b6X^MP!oaRl:&l7)sS*(a=njO![2l,BHk?6A=0LeUuoeuR=*n/Ptc%]lN5!H%UjX!%7<I7,Wo]+OAe*Z!+87EfNGDeED@WUSpm:g,djOVI='iPoSmT0:]UN9A?Z"+n"_J-k3hW5+p7GR\bD4pNSV?m)4&<?D+"4-l>m_6k%\^k?d;\F:tp,cX>L%E^u-$_eX=56/##m%YWH!%:TGEo@ujJ0oM`KqrH+2nLIIIZ=rcf9KZ"hVGh(@:bPYR%jj+$E87H.!8.bPD,2%LP%eeGuuWKjtl_Y&;q:gnU3QXLLNCLCua-DP;(F2YhR"0O';,2(`$PHm8Vc6!?]i.00MH1mfis-NJOh9/XscFK&'Hk]GUE@W!<-A%:b6%!BS>2:n&iG,T)IO'Qll+Nq-.c=T-n]+<&m$)rZ!:pC$YHTPM24[cb93sE]WbOW5AJuh=dni,G.qBh7@[/'7u8$go^sXhFb,!%;IcUYQCU6mX!G)l\P4C&L)Zk:maQ<X9H$D')VE=8ZP1*[BN=\?<1U/m?)md,h5Ldu'8MJ4N69R2<@,1&lV_@2Q/l+PiU2ZuTl*H"%CKHu>Y/,R8',6QJA;.WV:p1jE7'?L`<_)8&D`tgs[0G?/WjQJRX\1OP_W^i9mCU;Q6-YZ@)r4e(7am@$oZekRY([m.#17NeZ#lrU%r%+T,RYKBrQut5kIn/oX\%Ag`-^nr4aN(9`Yq^=C9V^j@a9#k>D)C(I$mDs6VJF)3ViR^5?&Et":oj7Wd<&*+(@m*KAMd[k/7"HX%cZIQV9nHddRkU%>\u&T@`k2XW7FO+7Xmq(4<A[u[Q]Su+1n&<<Ubou&\gHAMm4^>UVJDX8d1rOuNM^K+CA]%-;:0J[9aur_S1pCL%!6&Oi9fFkcN>)eV;f!5sFA:@8%=-m0N2CBJV/*#l3b:-R;_23qcE:lUl-d7>Z#h5M.jp.MCMI7]J+BD_F9tCmYLW!]Z\kVq&nqR<%rJ@<6&n8A/dl(?B-ET6DM:%FDE6;k*B($5nPaYu!V@&u@qtj;N<<2JV"Yf;c8H\3Pk?BLTc:GGC`U/eWSP'cYef6f9B3MKVPT=?o%p$.uTYm0!@g.kqARSFQZ$"??HF)8c-ptDJ!CWfJ\4pq.u<3Iq+H972Q;Bc.#c>kgr:9?JHn6DO2WLeJnp5td.6T<<fX8bF]eL:Hm%2O6@0k&+XHW3OM#\Wo9J,elRX5N9HlAlPJ9WQX)%qN[fWl))N.mQH>\(:p!Hb[(6_3@_mbOtq5=Mdgb$]0=)j>NThe8oEbie>CIG%Uj:o?e77Mda`D#>dh/Is[L..sF2,B9-<@L-d/@@^")tkS*]pa*Brn7TbO]+.hnrV?h8#\XTNAQQ:cFg20B\T36e<XdG%>u/T@;bT%)QA>lBIM^r7QaOtKrJ&NKer9l?Tc`VpELG@NR84/[sU*b^)InV2+):1gXtl*U%V5.jEC4;`t=?Vm33X=lG:/^<eZk,>TKk(c-]<)%<]Z\gW)d)IG)^C;9l71:SmB^qLk*+2SngPh?apV>9DtCLeajYj"gj967)F$D8e/1NPpQ]uo(-EI\5(>BHET\')>]OO6R:ObnE[d!%-9fe3qSeMp,>+oWb_T-*O4aC/^%(TZXFfF"n#bksNS++_oC3Ng"8br_R&\0QIbR,BiO@@icI>tu?D1A-qJ+R5S&(r/DS[51,Er6,%.C+O$pB3Ff<uO1O+;/U.3!%c;i0,(';Zq9K0fOGI[,-Nh/)7P4><R+_],:@r>iT_GaN"<:rV2ZK-Aa*bWg#I@2QTuiS#0(iq[.Pb%D<':$$nC&OHEYRNm\UJqNR:Nt>GT:V);$f?bS_r".$Tpb8Bbej3spsA+'AF&=7gL$.e7Se7:>M]4BL1\eCH0e`QnJTk:cI>W2!:h%FZVsn2+@d)V)BVNQT&K'426T+YUJ.W[BE\S-JQn-lC[[akLbSEVERn\0=Glmo"!4>7taUs]\#`Z=f"$c9guI<'"_^I0g.&#da$s4%2G38M+==IV@J.Q>@8&8b<*p6mW\?_tlfP7#eXBmukF0e_[AdGjl_iWWb<<;ma9PY1HfXab*Tm+TC/OkKO*.(S5o.F?0s7"Lc<Jqq%>KJQ(;jVh>I]sCK3IQi:e>!u$o'0)uULRPGQc:KKLnneX;i2b\\C^G'2gir.ILrA5J+^Xc*(0?@XRFj?b59N2kH@(aXl60@N:#p^%bca3TYHkQ;hb2"9DZ':T]B?:hC$a@/i-75f\!D#[^-B5[*ibnDgSGuV3NGg<YUt=8o^r$R13Z)9cFmFVm:3OX]M8?L^dn(:9;fb:%pOe(ehUOe^B6'rg2Qm=7o^:PAKCI97&DkB5qTkWsTkSF,$U\D'T%r=J"Ok`)j_Mp6K7`UBf;lAe?Mta+C<)KrF`?]>-1I7;i((,E%\%@:0%3[3<iVV>e:P3-V4q@DPh/%Mt8'cX6\UQ>_Pj6!Q0YB=\p&6'8Y7)B7^!!fDKrqnCT;QAp<?HnikOZJ:q/_TM*jp:]_W)U,%WL\OSP@oC%IpZT"'#r]SFS^u4hd'BdYte8j#1e6Lr3RWB_lt<fH^@NC[mADb3dhaLT>Oqs)D!.dj*tsSY4C,mV2uR2n+'"&pNFqb%9cD)`Q!*f5O)QbSR<)g1#6jBt]tN%;"`<>M?+DYqW3i6>gZ(`!/WW>ufMm>p0&,%$N5c[HZs%bd%N/W_7@.*cmU;Y)>QDK<QeZGp%E'*TWFR&VKMDnRspR<[-e;gS^Q.,SL2;6(*Z=_7qb2C)!ei)1JR7/@6gMTo=)_rDA:k0'W08qcq``o&%).]I)=SWj%=qfZ2+?loe%hE3!cp%Bpfb7Fbh'ni:2(u#Y"FhH?tXT]V9Jr7Q@ne3R3+_hdu`MIUrcIDLsr!Dub_Q/5ZH,e9pGFFK,:"b&$gj2?'h-ckc5!skH%"[0Z$Z840PITr"AfTg=mQhqd/52RBKFeP'_!b;%D#1r)[2j!Buo-Sa9f1]m#$90O._AG".@hfasd\ZQ)pBUPSO-[f7/g]\/4V4hR%L.(jN\hmhDB:ku14+B<(&C23bf6=to<F[9=)II%Na$r!GWf#*;VX!]mGPenm<.c/2b;2Ut,Ao-SUY)Mk3b)%RW:?*c$l9s9*@<Lk%Nk\7)"kY^;YW369J0lVGW#)8DM4t")`W/bK:EH^6?DD>i3XW*.%,cpkAg=#MgWiW*XD$oJ^]BCe0*ZB/Pg.8t^sU>S5Z[K]U&`rf%!4LC>#Md$&Nra@9$%@:uC[tDs`/KTE%B@K-gS0(4X`2`(jm+J)OliMmb*Q(<qeJXrL>O9%W[JtO\/SNNDcT=&l@'P!V^PnN[B/$t%j_Lf%3CQfZ>*iul>>j^RqD0<P\5q5-7psRe2q5XSIUbifbpYMM>1IQ&geb8Yh_a2umHaTXNOin.b@Yj%^Su9A[ArOO1,m]VlM:sn%lITH#4\]4si@^&)j)3#NI_u?_`.M`\\piUbNE,rB[@SbJlSmUk$0,B):tKW1<PL!MQD(J=n551F!7J<Yhs^[*=(Y:\Dg59sf(#"M%lM:ta331(F:6RYaE)f+<0f2m959<\M?e')3W3j:MI`(O\K/6>`=4_Ah*4:L,5D-Or_s^LCWQ-rGbknbirE(QZ/8qh?I,if.Cl0*u%UorU:/m/p4oP*!]Y2A`KIR>;$gII,!G;Q&2EG(4YZ!heRL0+%`R[6V2q@.MUL+:FGE=\8_okW:OdIh&(W3g^a_sDi%Wk*Ys0=ofX%5?2"(8F7c"I?Jo(D;u[l=KX!Pldse3%-gq8-$B0@[k]M'j/B/ahfs,O2/h4eeFcJC@:*#!-]cMc)\1#n4Ea]X7/e'`&OR5]oc)\i%^.`j:CdV:UD`VUFD-ao=;9q%tlSlJVhjF*3-Iek*$+@UOhfu!ml:oeal:bR:Y9&Ce<qU6eI%6k4hrNtQ3-G1SM`I$XFS`RtTjNdZ%rPm%71q9^GG]BpNf(BtgeSgn&I-jr"iUuuC%u.!^I[u%6&`^hm%Bo'K.X-2s\phPtqDDF6-`QDj]W,<`(Rq)#hsdXp,P#*IO*MXI%eW8gGS#WVu9=s;MFo;NiA:Na`$"BKR?,)eP&!!aW2dA%iF)2V7rIt]7m#H"a\pf('9WIs^h2G$0f5LGD9eEr"ijsTVrIJb3[1h0b%CS4ciKOPVGoc)3$4+fn02o_i_2nVd<MK?A?IWae7VBGS>H2IK^5dTH%g:3o@QnDtKNX`2k6,W-KLnWdfpM&:>:<fTB`GJ^!(630Q%hEbf_5/_Os4!H41_JH0a+-E-P9b_'oG0T=MjZhKQ2daj7m+K]%@s,/$G'65hDX>,$=I`_X/`lnqok\:?lAoRRk/I2'LWe;0f/K$T%DOfNdhLG%f9"+]^B9DR\gUFJZ[r6Js].8B&B"`6VT<.e5lbi)Je_f3LfsN=[HhRFcaHl`'IJTJI\8qF'HdU#dAM8Mh^QcFEq<:ZJ%p@7k^g"Z,dX6feue^Nm&eY`f.L[4DpcH[K5?9.n2qlN'ZrT!I^ZTmd=s89V+F7\:,d5-8WAET:$HQ2h(r58KX"]9FY(-c+cg:R.>%p%+/9Ve9d,Q\BhekfSZnlfQ(UqhM5qcZf)cCco7WUmFFsi0E,n2qtBEn+(sO8sXZDltpnEm+^:&Ku`'l5"0J+dF-4u9:*@5=7aVU%nju^\''`'2V1[mqf2pQCM1rmP_nDRgGe!OE2U]l;D61q4%]+S8]=F'k4Fao*h7`Snn*IN/q&(DK6ZD8\jVr!9=Gu_O`?]>>s0m1F%qot1;J6hNbCeVGd8llrjIPTTE`!L'pm8a'Z-C#6Y2W!m"J_HKpW-maM_j@Rh(KWh-kU\u\m="cm)AL`WRpTI5r!pfV!S'*c5Ujqb%\ee/mb9Y=PS_l1^=1:tSoR>\HnFG\QjZ=t#Is)TOn(k>HkK03apIkNKYWM\HOUQ:;:)L$NJ%3!\b3+M*o,E-aF,.!R]b5ctKF31K%?jhR\3kJHBlIYUm(&2pjrOUPH_QVdgn#P9Pjm<kfG+h-=MOQ8JDJjn"\<^cC)fdZToPO;IEH0h7@Jss=6b`M:rOW$HXd/YdbMIOa%p]jo2)`q@!Vmh04h=C%,ZM4\(q7Grc0[_9Hjh&!f,OP8mn*[9#(?1r_U:+`RNB"i0h8^CDK3Kr\<@?u'f6m[:?a](>H0(LIgKK>%%<pW'4WVuMHW]s/U;!=(]H<p11;(Gbg`WApl34!]'cY*%G'fB4NI"'eGq-1G[>sbAA><B?M1MOV0Q!\SS4a>c$Y8!J'0\;?A/cE<S%<UX$-B(OY[1i,a<E(k!teR!#pVeu.l>#Vc87PS(cXCh45fW<rEZ+b@-s73Q.>@5PY5Ard$IJOTNQ.Z#tl8r1k98B^bFV\k#lcl'T%L%`.b$ge%gktf"&Cd-QIg-)^ndk22I"Tj"9kbjIX?EE-^QMAe/dSH@9Md>!-#?HG)qrdgh3Y+oPSpeZ)Z9J??a$0RjhHtU$HI;0U%/+ru<Z]=SL]CROG2kN#K!;63!DCs^)=N%UULN\"Vf8JP'c[P`fQaMmh^_QCT.KOm:0j?_HKO+KSHtQYG1iD'#:\2t`7hG0p]0nIN%n!.8TX8V5>#85B5S@@Y<ibZEe?U=W(8Hk:*X7IsCeDF<XQgsRPU>P\C-KBoQYX]4;Q%XYF&,Z&NV;5o+jUsWhBFet8=D#29Xe!:T%p2&X=_J*8^PIH%jT*"c<1A0l4E:sN;<%22@DLM;/qfD-eJAq6oVQR;,`8j>*]DIKjAc=?DCJmd)=^:)%(G=l7)kGl%E/ZRBKnP;j%s.#m<Jk(!+6*3T,K%P[&FQZ6hH/\CUIJdoL$XhW*opa90"8CZRFOLH.DX>-Q\rCm#VrpmjGs=l!5UDsS14eETCN5u'<Q$&a5MckZ%4R$eB%lN9[$I<)9]t>;\3M6[IgZ-[sjhF:edeDG&\?`^T5BR(:(,.gY/'i[\,!F[Er;Nb>ZGl6I-='jdU],R^iVNHW<d5J(=GIk.%DsROfGO6LCDBc`&Z!&!+>_9m'<]Zr&cZah&bLUjncZ^.PNFOIOo]Jm:LSp[Z.hI,8>Ac'#lq9Tue.Npm_*;X.@:-C%#5$5En];;T%4\tp6Q.-`K>q9';YmIXJrd;50)%T&C#>;-?o`?G5M'+(WNUi2HWuaLLefGo=kc=Qmr3.,eh-!;FIB//;Z*\cIT=4nLimsa\'2b5'%4-o_2^t"TdiXKhcg<%gj`2b%;8U!bU!"OD5XlQjG@>f\WiJlNGRf7o,]VZPNg-,:'Bu_ubR/Ka,*AAG@&'<OTo<\-qTNH%Sm_'^H%@-]BcL!F0;Fn].LoAKIOU*FUCrKn\Z@]Mf_SQuMn3anZ7I<]^u=F2q9hLq/:n:l.EB/(!33DY*PG+/>TFIrDV4J.(6mmZgBhSG96%f2$&$Y@!L5p:gRc^E1$`1?KR(qN\4gK;56IK<N%R?b[t*+.T3FT?Saurje-9bNk'&q;4Db9"OTXka.X-5cH`X\I:T%O/:,e:<5hs%q((_=h!u]tc!O=\X:1:B1k.rb!It):U%p5(N6eL9'Ule2c?'hVCEBfZB;X7C>,a;S?S#&fre`ahIXPIp@Hn9jk%I=R)3%&AX1-=g%-`GGHhtu@JaK+dQI`&k*1\pu9GO=.=]utS*E5bo[m5Kl:CT:$Qps:@(J!EZo2ViQK(AtbXS6PApK=5%;=8%Ui)=9Jh6%U&$(Hi?#%]C3>7]iCcZKlT+>X(Jla]BoRe?kHtDHmLlQi+`+>[XGlq[I>VQIdb0C"75sk?"QQ/q/U!4cMd&n1>IdRWQ<a;G;k"cdMFgkUT6[\%Jq:\Ic#ea`s)4Z2Q;udAF%50hXZcW(I!#)Wm+[kFVfOAZCRqlfp[W_3o^e-7Z_O;Y8,r>]cB#k--V()tF6dm_\"@Nn]4]WaUVe1G%O60K+dc:kZf[sATX\W81?i@5#UO63TTD>l>.M<[B:[]@>q!Z\oLPJZChd/=fhd3p_^G'jaIf<j-LHA_PDb'tG\1PLUEm=%9o?BAs%<d2=I?@7(Zj.1\+K8mJ=HfaG^?_IDdJj-dHg#`4$?P,BGjqi5kgT^`t5^\m!CoL,JPhG#mgC:j#p#jWdSYK9=n#a'CT>&a7[Q\'.%[<@#triNTcT<EAQG,gJXpU4Gc.c+HXh)i%Bpr09m[s.NC-elq)?g4Fiba6)2O:CR7SR3iW:W#qT+#g5`-B;e%HA;X$Bu@4<2/Tgb%m.Tp5jboLKb8mO]6kdKRVpq^c/#7'$^A>kkeS;/N?e\^NV4BM5``MGjYOBAt?K-I5c9I%J/Fu*uQ4LkT<r!ioPt1TSr5sXLrhlAm%?c"n4?#Z&e!5nLH__ukK_Z0*oIL^kk_H/:,[O8tpN)$,'eK*![*p'b7GAf[!?_?hr5CHZ=b!)NTRibrdfA3.6o'cli,93lCaPi7=%4NQmo5J27P7#WLrfu#37fIS;C]7(@&&#<-FVUD;@#r\"1N%e`*k,iE-`BW0@mXD]mHggI]hOOoGk+D036Qr/W<dJ6*6Ba=HddGER%i@Qsqf7,*k>("c1&U1'4hn*uPp[)bfjn?#FQbI=Ork&I`mINHC?S67:]IUWhkde'1M*o%!ZODcRjXLm>gj-1/lL2nR07LUAD1?j>%77U\HSr(+uMkqNb;aEXEAsKr#mH%m5LKup[[U4O]prDCfbKYh:2j]QNp?VgQG:dmncFV@![s^5;VW<HP$11jo/h]Uf=Ed0'3A3cq%8:1@in\T7K#;55^c!KciYg61DDaup!9]jds44RlD6GjBQ]N2SZld.bm)8,+pcPM(d-MI9E?LmC;Y2$^=ipCbNY""TZ$H$PF>C@>?%F(2C8-ka^n^,Wm3H0L?-ip^u\BlA'P23@:>\snJ%dS4i;#9iTV_'8HG[;R#]gUKSdm^dsbg1)dbH0jI*mG$Z"/)jpNrW.^K[(n#(%T,Smkbojnt&8:.sAg_246GjAi*g6I,\etoDa4qDhb3KHkQa$p(7i6[E;YbG!;.Jn=h%)NP;IH6K60>KAk%A2=CW8-R/^;L<rTRq9%34V)HEUq-FPf?9%F<#KKGf7\lmn9n)W/:1p3QV^,d5THY*SeTJ=+4Fld>-#aO='N+bL?,mI;oE0YS<S6M662\>>j04f%@q?qH@AB%4NXa3qc61%VHCD<5tTa5=DlY5VM#t,Up^>1<bp$@-)&eL'pGh-\sL$)h;-nGT)q(P@aA3>YiNFg?QMqjqBB0eHuPE'<\P;Y#Pl&E%T!<HJOkdRAs':cBC)6dqm4X@Xn`o^aMW?`MO1KgD,^5ToIp"&[$#T[587%Y&s,KX1oC?/c4cp`ZM[H=q9(BW=)=LW)M[rV>RX]^,%Q)5h^S`>$IC>4i!>%Q>OEV&;c8%L68qY2-!Wf'Ug"#bdtf4]tG'6dLW=iQF:G1.qD*SbMi6MAQ]lL'9NkEp'E?ZQL3\sH:AMC1$B%`<WcCkna&>[q<%eOk'rLFL-AV`m\:C7bZal^2G'"38K-Afq+mD0RfN^6Rs`(U@$bU=1u-DBGgu.-jfpgNR"rW!n_tYDkDL@G+['s%Jjl7OScAKl&#f5l7pj!$p-/KEd9.ihU]4s"^[Q/Ec/lgd$)QuA$IIY-c6>G6QS6VV:-/jPf5@4Oht_G?rp@bja0Yf:>6jBB_qtC+%4*0_/o^$r%m'XAmgRIQCIG4[7$&hUID%GNJZFS``J$8jLo;?[&&,c.Mrq"eA0C)ZI&)C.9Imc$c]p$!ufr+l%rc6oqn=PF6B26`8%SGVJd2YS(-HJ0h=U8t+iF%)[EAZ>72PDBNT\n,FXf!AK0bt8g[!uBb\272!$r7ecnhq@HtF,N\4Y?k,QM/(p0Ki6_^0<2Q,/%VQT%'#&9=U[;.pdmhXa;Ft.:U5c)pW[Q$#_[aRPf,.Z7*N*!g8qh2P_Gl>)<=)'8<>\&1!i`:g$&+b0V6j#igH[(sOXc.\D"jaN,6I=j%DP^=XT+]sR)!Z[<L&I4X]1&.LfQTtBqHde2O@-3^2p6^o(6JqbClq=-`=^pkKl)\'F'.*q7`#j-W9WMJ-1Sr0K.k]4("`\XkCf)B%(t\FSb6k/MW0#)D0I;[o,"aB-L?oLs:YIIg'n=@>%i,1D+/V&>mhKEm-qs44OR4aHBd#>XU4StU,Zd%N11>?rd^I\!YlYkueo;*6%&^%L]8g,BFD3Y:s06p12g`nYC15D8hh\/Jj[RsEUlEG>&8>1,oUsbDLn6TOmd"XbrQYKR4IbMO[,0RX;kqa%`3JU%>&1U@>o4OkR%LJ1bc7W>0ib/u.,T#5YOj`VmA32X8BF)=oG78$G*?srB],*q'?mUEXdapL'q@='Ot*2&CJp8"]\2I_`oifHJAr$b9#7>p%5PLbI@%bL.C3pA8&'`r[5*N<e[A?.,#aH*oK<p?__DgZb'8`QcZ^L\:k#qW%Ju4N^FGI-sb-d$:GH<mh=Q'c]4GZ7Au16fC#DFI([\Yt1Qs%qcKZ<.YS0.h=b(m]:(O1*?umd_d>4U$r<DG1deJLe<IkLT>rB[LbbT\D;4`IgPsE<i/k'9kb^^\E,I)_4[p1<FH'%NFq12@4NH-\%$c3`k(`_!s;($$7j7/PdO:+%@!ogeV\K_hDf<I[3(Mtg9-@+V[_(H^N(hU>o/H94?fn7ZN1D^u8HFQ8Q*]O:KV7W!FAAjK?1GUoe%9l5q)fXS3VJ7'0u;rOEDjeha5YatYUSHLH;Q/be4^^mZ_9Ai[P;m>5g?QY<pQJ,oI@!hWBcesd]8A"CJ@K0i6L(++2^PAD/4o0EC%2Gd9)Q]*Z@r,[goW3j45apab/M[8,+D#VVpmTmkjrVTknLn$,K'"DIIXB98j/0+0f+CMF)i*8?=0i]WJ;rigZV_3KpTar2qIK<Bk%,BSm+c:uDfbj:b_=eVdO'IbNh;LkRcC9Q;hX+1Ah1#.]V[>asQQ$.Pf8!uMtZ"[!U]0!F'OS/?BcAZC#KB';DB2Dos(fKT,75g0_%$@5O6p&kV4@eks3L$a4uR?.X#cm*_b.Out/P!>bDbYgD<a7A@,_9Zt@(fo@=V)?I.a)hWG&/mLq9Fs4#dF\VX5Sn6,Mk!!G`_njk%Kd6B'_ZhRjWH1QOUQD)dOqN:/Q(:-A,8O5#DN#WG<Mga:!T+$UP15gRK-*'^$BhkX<bW*Q'#^A(#Q,`p4B3M!Ln#JoYuC2^M\L1K%FO]mNMBA!MA[sSA1(5l>_(-^q7,$!="jE..UbeEKG.Hc1VN[B5L]]ZhI]j<-fW))(mD2>1<E2e'M`hJAI*WM6R^*?4\,]Vc7aX]f%OHjKa#<X7WLb\U=FrNEW-J&kB.1.HUA."AIG`#UY4[Dd(BMeK;L11Z`E\#[c)L)ZZmphAhG,=,s\,A*:FGo4)bh.3fTMGcFQCJ_Y%k"f+iVbdK#/S.A&jKnoq3Xi?C0TsKg0KU=X"1I_dk;6j&c:dMURi"eFql\[u<gt5R&;:8@GZfm!Yuk#QE%4j"O_(A(Lm@g5hr'm<%:I@bY1.(jc,:"H7Kl<@?dV.5;KbGLA,E#NqU`L@4k2Rp<J;@k<-eU:V((_mr.]9^C`3!+8S\s6o5#*h4C>-2.2KV37Enl-KD#KoW%3%o6A]"(!r1";6AHo%]1>2CGs`KulXgc8%uAU"RE+tol<K.A2iDCO%>":UXpEJfmg)eW%C/T-i7;JTHb\b&CQY+/TqjcU*rgNbB<%C<d%I'l8ognigk4%@k^A>#`;*'00-G+m6.1Zf_>O;c\U[**..#-)DVIY5'ksN1%g5j%9m'\/5tu=+VUU_T$TkH_(pu&GR#a'6d`,%-B,n5XTWWkX.KTfDo#d3OROhN/(g9shm-]"*4R?d/OV'g7_Y-1Nc-3\nuWTl^;V58\"F+/`J&KdWPGteJHFSh;VLPYR9`F3OC_`@%!4Kk.^pY'qfN*SIgOe"=Uk*@`in-_.>PM/D9OqA[;P=uc@Rsm3.7TgX_2re*lT$R2a16016:oJ5n=d_`l,^E.+_,^ejBN#N3*1\l%cG_KX\Y/W$as0Q2M(!G50J6I1V#Xg@T;q6u1-.0CL'5N8Ye[ac7Z7]nQeIi7OE&+^E)RDe(N([4[?5G0QD:,:)&FD5$Jq@o-&?&9%$&4BH>:P.HHc?3pRe@TY!_d7'N/S.#Pp,mE9IVT(caR;,MZ(3iF,GfJM]mXc0e>#\"@K$i#\o?jC%WPJIt;=M7ms$rB3GUr9FI`%%,6$Nq&R/=fCU%q949ZDWGT1ZTL'4ZE@#f"K(ih2dKu3:tf[qP6>RUF/'qAuHkI"hoM[e#fXTWW;X.M47V(d(DWgkt6=d$lV@YNV<%,taIC;l/"X!?hPVYeO>ZSeX:1QM$^%2Hqq@*jh2TdIIiUbWr,$>p[>J(]XjX6'Ml^UhMLUYYSDQ)qJHIcb.2]jtQ(udgL7$l]`V`%(mJPU<mpU]VjJ7(`FJ5,g<HlDi:"=J#kSs1dDR(r#]/Y-LB9bnm5@ec,Lf)TY/bo#7E+0Vo7T$gXG/-+'s9-Dj`Y(R.[a^!++QHV%NE8A2YV6>]ZJhSO?)"E;XND\C]r(:F_:\E1FMY'PFuY4G*,YRrba*\I)ZYfW<@(o9+OlZWNQ`n.'3^(jV/;,*Z68b5.V4H4Oo<4]%;s5\4T&a+H#e:+]bTVAOb&jull%T:(SLIac=fG$FjkLQqoEZft%O-+/-5%36:ta)f+@pkeCsSN]"3QS].n`8Cq$@&F'Q_B.-#6W?%p'"*hK\N-A0*9qX$jpV1"@HCu6q1L=BMSgX=1RCHBPG4-FC&uT1ghTba#EDUPKTbEL,_g__n79VJWQS2`go\hFWm-H=]^51RLL[X%a_9^<Y>L3KBKK'jUtIe=A:c!#Z"$]/]=aY'/c;U8N02aI&r_Gt&j)sY`SW439eL\V$us9XL';?L_n9M!>PA26lpI"RXb9Xl0)lt;%VH"u=RrE0\_cmY-2b,5+TfG/^Ls46QL?<1I>iBUji!a.e$Kc"kpgB-MT:f>VUQ(!lC;'`^b\]TS=(uIlXfuDuTq^Ns!&.@6R]c]a%>B_),hZO>!E%:q5d2]tdCipRqd^:=-V.EC)b&WT!:"@3GA:_CFQ!aW`'bLFGekUu3'mn"Gp(S\D7E8Lu1n=/Joa.#OeT$HYALq:a%_%$';DEFcfKJF:4Qi;qbPc;IL>a>4]0`%9/\'>P'W/m=#COS#V":Pu#1a1t0aap]c:f"D[B*b$@G52fbr);OFT\NO]Y2M3h)'kco%rlK0b2`k0F_Gs<tkr`IE-`i(QPPikL,%W3jFVNQ86=E_GeajV4R?cQ:C(Vu&$f61p_K?H?LouZ!LYR"aa6:)?O@mO[anc]iMrLmq%[mb_WB@uo/`o!AnYad@&$'1!@jDc.a/nC(eAe:lG8>aRp`te<\`2dCfj"-Kfaa%+lnpA5>3T><h_uc"[&94Dr\E?hr$^&KKY!sHK%#8H$*ZuN5"W.d@:?lgVca)R'J&9LS^SB!q9.[BQakZC]Z4:XEL/'d/^OB5*#j#H%D>f7hIMjWZoZ$"Bl@NQeT/*t1sE>X`e5iO=T%O"4VD,j0.Z#s=546p*)IaRM6M&W_RjWIj`OfVusP,2jc-l^OObo/Kn*K/1,[kE)/VX8Ntdq(.ht"6Hrd0>Z_@:;<dae,hreeMF]<%E=@k9J\_@f$DSetP6K1$ZXb9O!lQ/'MR,:C!SMm(nY[pIZt#`LiYW;1*5_i99/%QL74NCh#U?^_OCpm+Uk+qrZ:JXR_.92BIhN4p%9(CIMijVCq!fLQU@r_"W;A;/I0BfBHK+*<J#+AN5fH*lBaF^ZVS-orf!fKF)`lPS9b]V$eX0<]r_2YK!&A2K,%baf]ZS'__BfV]u%?Z[qNk;="o%nPKHllii"q*TUT1<f,\Yk2I`mnVaf[Q4;`@!f5gF_8kTd%Ze0;6m4C^`i:NpLc,W\p%8[L/kTj+pQ$p0Z)r.TScsi%0)XK7e7<,Ym%VS;Ca/XATb"RPPui$@YMa2O%6Y0/J,:%fl(D+DS^%neS.JW7]gOT1T.Mk^F9rCBkF<UOO@("O<[)h3N`%jC-JE2O%@]*B:>T4ZH;ADa/E6:0,(pQCV'eqs)];%=T&5NjZq`O4!9\Z\C>Z2,a<A,)MXYc&"d<:H?O..n[On"D\F3=^5RgtCV=c1Sh@"\Q4%2Xsn*OAuh-B,/KQZ<sgN!g1TP*ip)1'kA^&&!_;aH"2ON+BfrIW$2iW?E`mlc+V_]2bbPgV9!s(0fs@<gi85918d(%#6nFPkHlf-%!cZG60SHQ_V)I,:ccZ0[Q#!!+E&GNR*)7%YP.N=HOr)4X(m/c2nV?=q8fi#n'Z]F)K$OaI:IiH)lr6*F"BaStMK6YP8X3]%Cb2=F%1=n<-!LK'?b0#A<^7@lA_K6HD#68q<1,UsU4I;+28Udqk<9:e\/NYE>T$\_sdpckhVUI*XnJ3YHX@f*/f2oV&5\Ycmcq/Q.6$=S)%M0jtep@P/X>iUB,L+Y/\C=eZN%!r>9;EE*h=%:CGSMYI&02[Q3mS&G<'JUd+1,@/B-n[AeBjEFGGH5/7rXFl55lZoqiCG0el9OE$%$0F3F`&pPq8;Y(.J_LIhSGX6t')#jt3dE4I_XjS!?]HN,oel4aqj/cKhG`(oBBd'`!`+F:(5d)SkZoX\4Q/kT$p$&*Vngj.H(PXD%MFcf"*:l9a-nt2S#u@j/+gQ^i,XBH.`:G77Gb,VS^lou'H'01il)Xr(f`q;n`@YK6$\ld9nmN5`,m>R"U]<iL<5n>7@S%d<jq?!W%TEkH=ngqo.KJ'Qf5:)^).L<7_TBRpqJoL6L4@t3Q=jN9kid"G?,#@28nKag`m7lM1cj-+\UqVO@.ujb8!JtNR+jP>6IJ8>EfhP6f%;md(;EFn,V%8^AO],`#)6k9M`8,RoZZ)G+I66g\XYI<++$?Ut0LG^',A\eq^E`Wf2P<<CoJQ,lkMb$h%+r8]eNY-!`U.@kY[cLXk%[6/0=+kB08GhRZaXlaN_J-^!OiAooJ[YRA[/Ri%'bCTP(0)GYW0R9\,!=(-be-K$^3Xo0F?k+]PWbm932)3l+Pd,XLgFqNsMi0H3%q_*k,D*sYDL`@Z!0!N6?'#M#=[K@02%G4&9hLIiOmgU,rmL<]K[rqELY"S-45]p##A:<(RQpFo,`NFB.:hH+`pLTnB]==[=C/u)V%;SR;JcYKli&,aWm`*..!"6P:GpL<:`Jfl*B=<o"m3K'+GF1i@Mfo;o41)OD30d3(K6<A+bWSuW4m+a17iLOQ?<Mm`od3X97&p)$X%cuI;S3gW;5*ec,SX&IWR*b$abUOpPg$:W%4j9)cE==1&41>qlCIC+M[dVC,e9lQbfc<_nTlBWmS%2dC9((SBi2ENNsTMMl4A5tZD%##mV`aXa9aT^b+,`Z[_gOV]d$MS/nXb7jrEEA@`IDQ@3n^oAq">[8ktXP4/@JOCKQBHIC.J_RKt%!4#giU9-j/=%/"\TPM\@)4@6%ram&.kZmE^nZbIo$aE)>U4Alg\.8q(?&6<bZ)]UL-k7Z<a_9^<Y>G\FM4bNn@(bDC`TS?L3`[Rn+Y)]EnWjMC-<7nji1jGs/`,.1%`.XI"rg#$CnV/H$rXL<amT4Ms6ei&AHbZbo(DM+N9$Q6]c%$$573pY"nV>1XO?DTALc@j_7.<4-o.-QfWH^iG#p6@,qBkEEKTq"h%)YY:((:XCMX.Z[EJ]Wh+ob`FSaic_7o4a?8.)&jl1eBE9aj+i+![(hf4iDH.C&V^1d?J`lJmFTcfEZ/L0]#k]3Kus4a)WX"L]NZ)%pbF#tAt:0h9#fM4^iFH5kbVBY)LBl?mUEA&*uo=BBcWtW$SWWiK"kI.0Li)GQk[A#:g5*o&GpdD@YFi;&R,d@Y0T%u"a9]Tc$10Y%JdQ>T4Iiu:TX&q3"C-R'U?j%/;TCm(SX#Y"cS1/@#(V)bii#0-02lmkA7t&SW[LW-^#qPAj'48@4$ZM#^Lc$E*lk)J%?h?$9^E%g%DZWoY?lQCl:SsWpiuS7D5i\>b'c`?,Q%1ThE"&]i$YSN0UU*LZ$([/H8oV5f$!k=_=E:]<oNJ@6=ZGE_&hr4l@ug@fQEW6Wb?!M@%3V;0k@'i8H1iRT^.AoJMhuJH'/H"0,&it=S$0-1:6saYd\Ig,VMdZ$50L?.TW!TP1%!E6:?!_dZh?*XZ.fP[_q6c7o#K>?tddMN!%*UY*C\1Gu[&RJDmTt:<=&t0"m!!`oQn-F0+_XQP`AMc613(c8;(WPI;VRMX\#'XbC,Ea80<#:Ob&^XgK&a/PVpp$@t4P<.,1JaRJ%Jtd4*;&7Fa:_o]:$1OuD\aNfD<"s,!(kS5#D"j\aX9=?%?m$rs$#X^kJ/(EH!9+th!&c4hgjr"Pi^a5N,eZ\bka7Y&H8!6p%'E;l%lTX_nFo`.9&D%\?'JPJX#_NGTQ#Rs9s%=Jnf#^kS9CGV6>e`O5S^@Mg-!K?qpT:[f(3`co#VAs8`W\n#nd'u#SN/Xs4bmbB*BiPP%En?N%\o<c;3IJAUQ4GG18'(?(`i6N;W9+m=7me1,UFWX,(fI:e[0YD%d/6^B.O1)a;L$S3&WfB0'<SR'49asVEbMGX9=$G`WU,c[%R$)u.d/.(Cc5A;i[:j6s[gjQP(gI[Li"8lYXUlfR;gpP7=.57GUp,Fp!hdMoiC(Og1I?&#$OF``"%(l?*0HZk%jImm1tYGU]S]'%%P8,5BbrHO/n:4>>E87?%_(nUpBls3?>s3AW,G`\:i7tB;:IUQ_S\SSo+Rg<5N)fG5Z9j,>%ce2[_@SXZ1rg)Io@N#ieKZiV.eqT2%IBGoTpVA(lY&\m'ZD[%o!F#W$<#(gAh"nBKV7`3(ccL]+_B]C"07=@jgrWJe$0je_T)K%JC93n9O6*UZN]@:u)N&i5CC#)]"n?2Q%HOJYb0OA&3gtRNgilu@9Z-*0#RoXJ2[-)eO!%CRMZI&0)+JfH5Mc`Otf3X=PHX>"&eh%i`d>Sk;i/g=_=,6G[/%*giRh.?j)NOml%J6F/<Fn@YEgh9$t@Dm:l"U\k,N2_jX"UgjTO:DT:LbW?>6TS1,9cAb4"e^I'K\Y#e+:)>0o:hR:"_:en/OS/9=K:EU4`\X?kqP[k%ae(pUa@c'T)1l.5oL$jsoU',s355&Fi]=2tJqa[np]Z$"S`'H(`mhd/n@GBM(uD7N!X<jI5k'jB-[`)<Y0?]l`<llC@o'XN#1ekN%9hQqqkNEO#3OeHWO!'8=63qU!V$P_n&d4/7LZrT!li;X(j,EDl1P0$cRB_@VDiu!%P`LF0#sefJ&0**D8n>#%6j5\<@"cVkH\B4X%#bEXu-YF&cG_@%LJg2.%*C=V:ToM:4a_?gDUa`iRp`B6t83\0^<t@#3H/F/\-;,4oQJGpM@B9H:Eg%-U/tsn"af)o[:3D<dWF:mX%5E=)1f9Ree=cq+n#!Y$M?2p_`-<se87d<a2MLm,,8]-X/D?c&jRga@.>A2ibI^'FRgl-Z@kGH4W<R]DU.r]ZgX`MFQS.UZL-c]mg%Z#r:r5'dA^C/ZEk-]A$@<H<7`ka9F$&k`Rs-\kD]f\u'LIX3cn*H81OY]<&@fTHV*AP3M&#ss+3Ad'AKCn)aLoF)Qu4X9(o'Nu$"%m\:Pd7>.O?^2UfWTIPUI*WZ?P"%A(i7ACo5Zo_"jl-p8d&dejgW\4o3O53]QWu[=[!f*<RKpZ-oKp=lm.MOSJjU&'LEcR_F/c\e7%?6,f$Jq/f_qI)'aLlOi_U,FJbQ/<SV<8hZ<YiIWIL.4Ro@?sk2LOn#YjA)Npb`:)8'e.&MH6d0pm*WOD6.iT&?TI)4mL&(*lR_d>%0H*18W#S-iJh1t5K6p3VJg'k&hSWP#SX9tN'_r:o30<*X-Y%^NZ7@rnKuQ.4#3?C?/9Nd5'aBjj*Rc0lLg(=!#YKST^JY@t[6VY[%ad`_NF24D1ek7aib"/b\"`Su:]5UZZ`[`!I1T.YKO@(i,=.jB9V^uHo_MoV-'abL"SCh.//$O^Wa2SYm`/6:\L(o'>WPZjPrZNkP%CC&aB3T=TH"N,$S?Ad]UJZ[rM+#YEe'BNjlS>m&J'nn^Nd+iIM8A5Y%E26E7_E_J'S<i*)Jrif!blUW<!V,bJ->81N'kHaWfaa3H%'8)QK@-0^8HmO+<5la/!9gkrG<T.(E4U!RS)/\.1,>o`F^.6Z\(hVegk#bB]^(ru/;HRW2b;&?oTV9M-r5]2b,a&f@;%tiZZAcdX%3J=O8n-5(>'iqUTo?_bC,&Bp]6b0"ZG,kqeGJe<^OSG*/5u%uCFD#EMX.Y<6(m,,Bjh``\,:RXk@[d'g0?#=h&7#&82Qg>3]`MI1%MBX7i!,j&Jk4\pTiir/N=(kRS@5jHsMI6sn-,Ld3&@a^l32W391EaUVJ.7,['!1u@VPT*(4cM-#b:9f94:r^H8?uPb2;*#8?sLni%J#FJ?4"aT.e/&]_.6,E(mP(kEB=M1K((Li/\hoRed_6"sbLJd+:t0IA3+5YBXP%OtQWLOtkrq1fa8q(+5(k=@HO-c7_!qGl0AOjm%R>9%(FHN^;GK@>L&C4"+IDG-3c<rt_o3k&W,fI=313pqO-$'k7rc^lGXaU>i4b0h1_<&lB11qFW,Is&XO=We#9Oe7EG0`ReN$1L6%9JD_.TImCm(<e*-8?N-RGLEX:@n^nE6e2T8J&@k0Zn7;kjF.`'$:I5>Y?V-@O-A!t\N!9mCB;L'A2GmV&d8m%.k.i^L`9-MekLqm%3*$UF82/+FK6KB7<c5uNV_Ai7Ug#9'L-YXoGAS%D$?X[s@LET"DO?:mn<bBId$>s\IoipH!R^X:-3SYu]_U@:<eV5:Jf1GAQk!%/%-IkaD+Ue#kGa[K8JMLm%U!mYR".2RsNsBe!J^Hj!.s>;')R3cU/fSlJT;qB[_LBA+,N*1pYS3\.>!sd??jM\`(3NgBp&,KKPVC!8%q<FSofSXZN%nBbg>2k&5U5XF4[7>u('q-*+W"Uj!dX)B)nJaX%TliJQ_;]u/muRh\ogt2a@__E\O?EaR4=[XLi2p<*:.@g$[Mjl;%NXa'3/0#`jGW2HAS5U.'K"T--q\=lK"7p%BR4&pRo@).J(s-T]BN]BY+XU\G1Nf'#^sF6X+'TMu]Lg57=e6@EdN]BcXak]"fLrIN%Es=tsR:\@FfS?CJ@p_$[(oo'-Zr[*!ON^,7>A$K%7L"T=9$KZ_d\K[MXbCh)\<Ii-.rHO=R7aOP+dBFpG2rq+IA$<S-HWgu35oS2%`Rb!&8/D]F0L;ppM2M$665UDq(qMo()iZE%Tl1P8]A]hWBt2CGX?hCEk:FW@Lqa%UKM)VtM'1^[jN!u?CA_K_"Hg7q(u-Mh@/Y0q%\h6IfJ<0Y;-UN\Q<I5%*7Q8n;=9JQgD"79aZF/^9:j+<eK.*5l!(0@9q:mGo=bQ#\.JI\S<X`(Vb0m\N(M!P6";7r8#i>Q*K\AcM%2YIh1'<@WA&"cE)G:gfg2F%gubGpS2.TJqh8>9b0[3%=96c+QaQm;^HQX]$#+'Wq^Jb?i&8RL/&$(+pu*!6LA(ZZYdKO[1[S#tV3%dkHIO9#b(r\\9P;34Uuam7]PdG:nsXEAi,tR?0b$@g;6I-u[Ona(&s^;X3fc1,H5bp4O'*=":=p!Vs6J_4.ce<f3NX&W*E&^jo]X%rIQ*2+LW@))krNJ5>sD7Em*.(!_=sAX;Q'9eY6G68BWCu#t=Yh[>UYFI1q6Z!RZM+"'pN!"\19D[!PRVOmoN03Sjo]/58GE:leUc%X@+/cN'Bb&]#&D-LPRlg3,/YN;:B$hX$)JGC20tuBGWlN8Hl)A8s>>M0!:FHcTpc4<UjZd@%habE"P+s"Gg!q6_5\DA^t6Wb9/*C%R1Mf<q7014U+5<:5RZ0=PVIV.&B<$Z`q_X4g]:kgVgJ;[aOi,44?\k$X%'&KG_,tXP4AKA(uI:Tr8GSMk7r*04%7CedQ4::f)i;Q%6II\"L(@QYK]YBQP!=WVBhg'AgQ[F:',>X/K9BmO95dTMV?AtO3elZu;Z=+kI1D;0ZK+fH<-JDaK"896i\pI<-XoaTO'#N6-0`us%FjppE4I/UOf5deQH>@4$=k5>ga/u0Xo@D?GH#"j@MHAS:>3;%]JQkc?970`ZCM?q%Am@*,Bdq0+TA)L0':N?c'Lp[cGK%X0_lL6,%+nV[jk#.4a,6>it\WgT7/d3LNRC*`T!-sis[1l46#]B`2CM=*,4VtLMSYAA]W@?#J>>$he;N@2`7='Vi9-Y4SV%N=MdLu!=";bC<%&"-fd+a%(iP1ur%pnTIO[59)TZH+b=/WH.(QBlIk(>N*I[iC%##W+)*Acb0TR'W)^Z5Ra.noiA>VJ%Q8<N8]0/WD:6>>$3X`l'QL%)<K[h_GY.uA9#fs4*j[NARJ@sU(+W:(L1)n+b;gYZNCaLBFieB\dY/BJlPFfTK+TCUCs@=&HQRb:]d?c9^+1E_h:CiQRNT.'emY5%,3F,N$"k<oFTfY)E04d9%/gDk77tqS3R91K`_rZo70:=si\AHZ3(@]f)E4++T$RY\Z_4?C96F&JOQ(YHd3c6G&C7aD"[1Ti_&q"6%KTNmfc31!pA=F+BX0P\42&Ufj4p<qoQ+')R!A#F4D:!W_0h)d1:K<=7r":F8[tp0/(e)!j\0brF/R<.fk!?;W,3)-b"-k\?9p.U5%9]6F9iMj\`/Y+@0!2bZD/F"!?Ggh&i7P0q<a&!X2K#5L$2TcW8N^bSbUDtN8+56GS+a,!2UtF))Os1ZA;N?l7C'r+:*gKV*7Hk0J%nE@H@WP"TB8XXNP83AAgJ.t?#&@@uaV:8&I0M.j6_RXoS;T]TTPX^Uk&M?K[;9,\UBh&kiY[kj6&-Mk0#uK,B)5M\@44gc>8E9H>%65oaC(/;T=65m)$O;^\6j&)q3[9OJ@q)kH-UR9(9;WoT@3Fm&[6^'=6O@%)%YE24).\n%/KbR_RXJ9]HidM&[Abbrb$"dj-H-'uW%^qV@#`+I(l+Wt0;Q*+Hp'BIBej-[TX$E])).eJ:_B(3;[pd<3WP@Hr\EM#>Z0[+\*Qsl][^@<nk4t6\\"$*5e@liS9^[Qgs+KR8S%&ogTBi2C[>0[Wg\(9AX$)?"Lk_?L`/2lIe<+L2f!lf=9C-&U/k<)Mk6Sn8-B]&RIo.l0QJpU2"(&;1q"nq0[J<Cu_I<,)]f,6b0(%jY4h,,#h-'\C1c%"#tl]r!kdsMe<2m&Mc+%2^'&TjtB0E9a^Liqg2@aMe<;:h1m#*8^aA\.>HOiCYbU+Yn-@5M1(@r8ALTT'JUsG%<H(Z;E76jKMFk4_Jm@G9_hNB(@rI\$/jD06J1(p3N;$:]_(a.X@3-PRG[QZl-a2?k)Q7<HGL%BV()\C<8>_5<qt!"!5;L=49fDeJ%F,M<[]Gh^;?88h@.ToVk*!$@K!cj+_#\-VmVm%",E*1'//McMR?']BMAEX7/&;[U$@&3Z>f_,tD)l`d.o9^Y9ItHciU;P!Y9_M&+%J!!Z>5sDM0nX>sd$Ps$+0lS3K,esQl&<eCme.IODN</Y0+h\R?$^ZMOrVe#j66A=1aSP2,*b)($-Z<2IRqQ/$.,_rS9hqr*j)0hW%UEtt\Rp\@t6.a4IBh]apK>3No@21IIs*ts]Qp>O`Tt1.sGrdJ#f`e0k1*qQ,D3a^>6Z7k_^sNUKe6s^kMO^ep%"dOikg\l9%adGu%lRW5goJ&O032\OH-Gs4SI1M/7V<0Q@R8JZ[JIHMk-O>G1;;P<._-Mc5;j1^i=L$G*^eI[&79gn""2c;@fjR%fOsMS`nMc*4XJVeS%$us4,fsM*<_&@lA_.&M#N`C=bllal)a+tB3R!(6"k?6\80eAM*gD6%EPBFYa8OjfPj-X$n22q*r"k&&0U-LsZB+tX=Yo]D$pnmLB%$3O*<LEd-]hsb%nN3JO!a_nmJcA/gqN*H7m$hkW#jp3Q%K+$IYA<iZhi!Yd9Hj^`CSh?U=&W,[O^nULS@:]A!kU]apG)k$i.'#Zk%Im=KA]WR(:5V?9[llV>Ae+r>8qa\RK^LroqT>6jnGqV`-S;%G8"[AV%].!*hKIi!U6M@:N@N(1V!F]O/(irU<)#99r;H6tX$@Q;g%lHiU][7V[^A2<Mj5b$+[6bJUDVdLeS7c6P-^*pY/$O!CChT<ki!trN8^%=Q."&(3349(CqJ5<'MUA9Eb_>Fm"`_[lABdtQ;80iQ>%18`#r6;`gm31_8R%Yu6B8b=0GVDP:p<Do&6*_>cfJmbmc_bPgF?lncV/>k<_=MBXCC$r$g8P_R+*)]3XpR6F7<#Fe:K3*;J'H2s<%3@2="`8Y!gG7L6s?m\./-OOI7clB=RR!./J)-4U[+_rO%U_\J?'*Ha".=I%760f&uI>Kt75?mR2c4/D]J-a<Rge"MnjT._;i/)\"%&o]eW@o,b%SleJhKbC.0q(J!K1F=<1=kSnKG'M.I\$;bDYT:gK)!..B2\E++ae6L0XfeMQOXrqWfCL^l!+f\6W$'h0[6t6*&.8"!%@BsOWT$;5A#uK_=A;Le`:rYBSYT0^>A(u:K>iYq%S5X*n-]S:HOVlmY?@^seN.\/<3f;<3c4II8*EbLZ$baS8<7GV9](5QFg_YAH%LOqUUUl,Z?8!BS+pgQfY@!F>,eGrZbSmg\MEh#Hu.it0<hP^]$JURFQRh9Va)L%M-MEFHb"*96ofICMZ_D#CLo9MJ11f='#W0MR1%Kb`$'$r`OdYZ[?ND*i`R0uQJ30auZJO(0J=cu<Jm-sl/]4GI]M``eImo(oYi_>l0]i;,GO1@E#]#1=LO8IE9<\r=hlKO\sO.-V,-%k9"A7@ETkI?*O@>jpqV[q4^O\@R)ni)&?!%J-g6r7`q4Eq=X"KBo<8E`q;,M'uhGR\B0QsHWpqYn5^@,5?XC21_<nE%1e9\+dOXp%6N\oljWe4W*CkKj@)QMf+NGmT0=L9Nr*gaWBOL1B$k7k.S)fOnhc-!S@.gXC`.nOd/;=@LN(+LcB;85d7Js`kG\e^b_>l'V$DT:K%S]GS3$Dk9G*K_am"cQ#Y*$`9JZlY8VhZnV=\ZW65%?$l+6%qR\>SaD\Nd.NR?qfX<Qlf.<SI[cT(6VL.-T<^t.d\R9d1H9ApiB=^%2^S!X!JrWA(_c*Xjog",R*uph9-m/2AHKOH:Kd-1NmACN3E._a?9r1)Ogs=;N!]+gErs#YYT*]`SD^kd,g\'h9k8H_an[lK(TeZI%!^NDN5T!K```<kqguO*kE>#JA]>,0to[M(=@:_`TQ;Zt*N\mGLL4ki2#jCAq<D\k!.*jD8`i^_i/!kmNbO^f\0%67RV9+QCaR]Fg%ik1'Adal8/aUqK6hkWg8qBEqUNK-5Tc?A@bA!I&:f$Bjq'$NAT0FXL]joD'DCG4<(SFV^E`:dN4RmP5h'%$k'?"0I.6FpAGkM(TU%G&@;9+_#\8+<X(uoKDgJ8Y2([$a/H=:Cb5ak7GNSOu<;joLQeA#(*/Yr_>3Ii-n]&*J$*NE7)gR9JIbj['bIsR1RT)=b=DdEsb?k%QiKO(Qj<k>QjA7%$tL&KPuI"cU9ia$9J8"m/Qb\)4_5FTPtQ:d6mR#;,T*E(39F>'G!6&7P.=lkYJVJ`_Wh]rp(k;L(e3@9!+;8<%.0%4?73P77dUr$K\:gD3$q'$A39E>1P&<-cM)UAE1Fd=`\!^:RF;VJ)a8@iRR+l4V#?B,f+L#@A[;?,1<&3-=O9&9,gT7,KPKA!I%-j)!S/tdeg;+(7M070mcP&E,nZg/rT1C!Vk`ZW%@)!&,.jg'*KD-"UuEkfl!aP5N/1DE."[TO_Ogh)Xkf*@YQV_D)%D)2^,D&/eS%blZt8R@Q5E.q]e,FK)RSbppke+.ok!GNJn?bp!de,ffg@MjW72-!n:SD:Z0+j#-uG:"6US_#-)H<$e)PZS3`7c*U-<'V>_*fPe*P%YbQhZ@8!kC2.<n0L'>SldF4,L/:=T2-PD!R>+o&kOXqY=?Ju!GaSHu4-5&bkM+$:U-od9q!#k:96r`<m7-m;cMq'Fub1rnVnJjY8%;'ZJc'8\\<;@Bj,pJ,&#$%62:&bK)pfHV:XVD`%)$;)__>%`YXM'>F$TSIX0b_RFd#\QJD02+90EC5tPb<2skjU<jrcmV1bTFo'a%cj59M&e+5U=mLMoe5ctb7H"0B"j>;9Jlp*qjqZ3?q^Z`kJq87h3p$Z)N?_d"N*'%A3C^#WCu).QYn'_%N.$\C-b/H(PT8O2SI?QD%B8BVO,8M"iNk#aUf#+HPoEnP#(Gi3O_$E@k'u(XQ3&.aGg^K('6aFrJ&@NH=`]"";giE(ia!L-M^c-o7/)Lc(me`2,d2+6G4Wn/h%G`9c-&ITiSXiF;jl%N(>2`RG)_GeikRD0:&<&C?+Sjd,D1k%5)Obs0L\nAsOmV)^/;2/pt+Q[4#>UG"dAYJlT&7=i,jr>VHki.oo%ScRjVD8?'8>@EO^7]X\r^AOY3&"BkJcl0rXj-tc9.^GHJ#[:LSj(jQ]DY?e1Ka`CfCTCo\hlj/^QAgaL-FD'[YdPAP^%,mQG<S!X%JF[D@c9Hf5R[bisnrqW=jC?9&Z7!$#=bJe&UA>`][_<t%elkp,%eQr8>i0L'68@9c4pfZr:gV%aT*1`iQ(lf^pIT>%@U.8<h'[3\%><"Y*/Y!FEpIXR+QdM'/>nn5Jel/lt,8bYCm@`krf[bZ@TQHk1#rPtHK"k*54<3F\j6r1j^BkAD8J-gR8K=N&UtCjF:P-p?SO'na%!o(2(GrttQ&peRZpHZAdJi5+q^-_Qc&W%;r*:l*]&bB'rE,RBd^FTHO.9Xsd.ja]A`%.2LPbP6LiCYO#nOeXJIeQ7S?R_]G[EhO(%g((]K\cMXh-#f'uRD[gV&sR>^/"44P_P5J5&6(SJi%L?.bZu\ebZu\agKO/@-0RYW;rl<%&j/Pjb$QWLk;\/gq+IQ?`(MD:q+IQ?%q+E%/TWGYK/?\>a7)=1IH"qU6o,QW*Tt2p1]N*sA^K$.n\5hN"h(!u*X=X.K;Vs2?'GF:b4^7R18fXUA-1jIn*e8L;A6`sTG-(o%%2&Ar-mNE@9)<b6Qm(8pA)WnTg8]EK7XV<L>XTX?mF+/ta[RRo1JitM]nl-I!^K0>]p=DobUqpgm(`_?8`G;<+q.h8nY3.(+UrA$"%<B3$Gb.Q_0Bm4jgn!,lj:L0"V;`A1b?3qN'Ue?32l_go#=,J"-:PHX[HR1jdJ$7?lL1AAkh:q9IgqK]CDkDLHIJhutZdmUO_SY0M%01X@75(5RW3pV1hrUKn-c$_];Kh>iF5ODh?^765B56#VG2#$n5O8f7!^>^5A=P/)8e+s"UIiU6~>%AI9_PrivateDataEnd